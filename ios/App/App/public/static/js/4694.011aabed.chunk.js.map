{"version":3,"file":"static/js/4694.011aabed.chunk.js","mappings":"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","sources":["components/NewInvestor/SearchResults/ResultBar.jsx","pages/Investor/SearchResults/SearchResults.jsx"],"sourcesContent":["import React from \"react\";\r\nimport Default from \"../../../Images/Investor/searchResult/business-and-trade.png\";\r\nimport \"./ResultBar.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ResultBar({\r\n  image,\r\n  name,\r\n  description,\r\n  isCompany,\r\n  param,\r\n  isInvestor = false,\r\n}) {\r\n  const linkTo = isCompany\r\n    ? `/investor/company-profile/${param}`\r\n    : `/investor/user/${param}`;\r\n  const link = isInvestor ? `${linkTo}?investor=1` : linkTo;\r\n\r\n  return (\r\n    <Link\r\n      className=\"text-decoration-none\"\r\n      style={{ color: \"var(d-l-grey)\" }}\r\n      // to={isCompany ? `/investor/company-profile/${param}` : `/investor/user/${param}`}\r\n      to={link}\r\n    >\r\n      <div className=\"result__bar d-flex align-items-center gap-3 p-3\">\r\n        <img\r\n          src={image || Default}\r\n          alt=\"\"\r\n          style={{ width: \"80px\", height: \"80px\", objectFit: \"cover\" }}\r\n          className=\"rounded-circle border border-dangers\"\r\n        />\r\n        <div className=\"result__item__text d-flex flex-column d-l-grey\">\r\n          <h4>{name || \"BondLink\"}</h4>\r\n          <p className=\"m-0 text-secondary\">\r\n            {description ||\r\n              \"One classical breakdown of economic activity distinguishes three sectors.\"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n","import { Link, useSearchParams } from \"react-router-dom\";\r\n// import CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\n// import Filters from \"../../../components/NewInvestor/SearchResults/Filters\";\r\nimport ResultBar from \"../../../components/NewInvestor/SearchResults/ResultBar\";\r\nimport \"./SearchResults.scss\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getSearchResultsAPI } from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../components/Shared/Spinner/SpinnerBS\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\n\r\n// const SEARCHFILTERS = [\"Industry\", \"Age\", \"Stage\", \"Startups\"];\r\n\r\nexport default function SearchResults() {\r\n  // Fetch Global State\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const userIdToRemove = loggedInUser._id;\r\n  const dispatch = useDispatch();\r\n\r\n  // Retrieve Query\r\n  const [searchParams] = useSearchParams();\r\n  // Set to state\r\n  const [query, setQuery] = useState(searchParams.get(\"query\"));\r\n  // Data States\r\n  const [peopleData, setPeopleData] = useState(null);\r\n  const [companyData, setCompanyData] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Fetch search data\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      console.log(query);\r\n      const data = await getSearchResultsAPI(query);\r\n      setPeopleData(data?.data?.users);\r\n      setCompanyData(data?.data?.company);\r\n      setLoading(false);\r\n    }\r\n    if (searchParams.has(\"query\") && query !== searchParams.get(\"query\")) {\r\n      setQuery(searchParams.get(\"query\"));\r\n      setLoading(true);\r\n    }\r\n    if (searchParams.has(\"query\")) {\r\n      fetchData();\r\n    }\r\n  }, [query, searchParams]);\r\n\r\n  useEffect(() => {\r\n    setQuery(searchParams.get(\"query\"));\r\n  }, [searchParams]);\r\n\r\n  useEffect(() => {\r\n    dispatch(setPageTitle(\"Search Results\"));\r\n    document.title = \"Search Results | The Capital Hub\";\r\n  }, []);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"search__results__wrapper pb-5\">\r\n        <div className=\"pb-4 pt-2\">\r\n          {/* <Filters filterLabels={SEARCHFILTERS} /> */}\r\n          <span className=\"white-to-grey d-l-grey rounded-4 shadow-sm p-2 d-flex flex-wrap gap-2\">\r\n            <p className=\"m-0 p-0\">Didn't find what you are looking for?</p>\r\n            <Link\r\n              to=\"/investor/explore\"\r\n              className=\"text-decoration-none\"\r\n              style={{ color: \"var(--darkMode-currentTheme)\" }}\r\n            >\r\n              Head over to Explore\r\n            </Link>\r\n          </span>\r\n          {/* <h1>Search Filters</h1> */}\r\n        </div>\r\n        <div className=\"search__results d-flex flex-column gap-5\">\r\n          {/* People Results */}\r\n          <section className=\"people__results\">\r\n            <div className=\"results__container white-to-grey d-l-grey shadow-sm rounded-4 pb-4\">\r\n              {/* Category */}\r\n              <div className=\"p-4 border-bottom\">\r\n                <h3 className=\"m-0\">{\"People\"}</h3>\r\n              </div>\r\n              {/* Loop through data array here */}\r\n              {!loading ? (\r\n                peopleData.length !== 0 ? (\r\n                  peopleData.map((person) => {\r\n                    const {\r\n                      profilePicture,\r\n                      firstName,\r\n                      lastName,\r\n                      designation,\r\n                      _id,\r\n                    } = person;\r\n                    return (\r\n                      <ResultBar\r\n                        image={profilePicture}\r\n                        name={`${firstName} ${lastName}`}\r\n                        description={designation}\r\n                        key={_id}\r\n                        param={_id}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center py-4\">\r\n                    <h4>No Users Found</h4>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <SpinnerBS\r\n                  className={\r\n                    \"d-flex py-5 justify-content-center align-items-center w-100 white-to-grey\"\r\n                  }\r\n                  colorClass={\"d-l-grey\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </section>\r\n          {/* Company Results */}\r\n          <section className=\"companies__results\">\r\n            <div className=\"results__container  white-to-grey d-l-grey shadow-sm rounded-4 pb-4\">\r\n              {/* Category */}\r\n              <div className=\"p-4 border-bottom\">\r\n                <h3 className=\"m-0\">{\"Company\"}</h3>\r\n              </div>\r\n              {/* Loop through data array here */}\r\n              {!loading ? (\r\n                companyData.length !== 0 ? (\r\n                  companyData.map((comp) => {\r\n                    const { logo, company, description, _id, oneLink } = comp;\r\n                    return (\r\n                      <ResultBar\r\n                        image={logo}\r\n                        name={company}\r\n                        description={description}\r\n                        key={_id}\r\n                        param={oneLink}\r\n                        isCompany\r\n                        isInvestor={comp.isInvestor}\r\n                      />\r\n                    );\r\n                  })\r\n                ) : (\r\n                  <div className=\"text-center py-4\">\r\n                    <h4>No Companies Found</h4>\r\n                  </div>\r\n                )\r\n              ) : (\r\n                <SpinnerBS\r\n                  className={\r\n                    \"d-flex py-5 justify-content-center align-items-center w-100 white-to-grey\"\r\n                  }\r\n                  colorClass={\"d-l-grey\"}\r\n                />\r\n              )}\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["ResultBar","_ref","image","name","description","isCompany","param","_ref$isInvestor","isInvestor","linkTo","concat","link","_jsx","Link","className","style","color","to","children","_jsxs","src","Default","alt","width","height","objectFit","SearchResults","useSelector","state","user","loggedInUser","_id","dispatch","useDispatch","_useSearchParams","useSearchParams","searchParams","_slicedToArray","_useState","useState","get","_useState2","query","setQuery","_useState3","_useState4","peopleData","setPeopleData","_useState5","_useState6","companyData","setCompanyData","_useState7","_useState8","loading","setLoading","useEffect","_fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_data$data","_data$data2","data","wrap","_context","prev","next","console","log","getSearchResultsAPI","sent","users","company","stop","apply","arguments","has","fetchData","setPageTitle","document","title","MaxWidthWrapper","SpinnerBS","colorClass","length","map","person","profilePicture","firstName","lastName","designation","comp","logo","oneLink"],"sourceRoot":""}