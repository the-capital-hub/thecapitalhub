{"version":3,"file":"static/js/4220.170e021b.chunk.js","mappings":"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","sources":["components/Investor/CompanyProfilePageComponents/CompanyDescription/CompanyDescription.jsx","components/Investor/CompanyProfilePageComponents/CompanyProfileForm.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeamCard.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/AddTeamMemberModal.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeam.jsx","components/Investor/InvestorGlobalCards/ColoredCards/ColorCard.js"],"sourcesContent":["import React from \"react\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function CompanyDescription({\r\n  companyData,\r\n  companyDescription,\r\n  setCompanyDescription,\r\n  isBioEditable,\r\n  setIsBioEditable,\r\n  submitBioHandler,\r\n  handleDescriptionChange,\r\n  loading,\r\n}) {\r\n  // fetch isInvestor\r\n  const { isInvestor } = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleResize(e) {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + 2 + \"px\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`paragraph__component py-5 px-3 px-md-5 d-flex flex-column gap-4  ${\r\n        isInvestor === \"true\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      } `}\r\n      style={{ color: \"var(--d-l-grey)\" }}\r\n    >\r\n      <div className=\"d-flex flex-column-reverse flex-sm-row align-items-sm-center justify-content-between gap-3 gap-md-0\">\r\n        <h2>Company Description</h2>\r\n        <span className=\"ms-auto\">\r\n          <div className=\"d-flex gap-2 justify-content-end flex-wrap flex-md-nowrap\">\r\n            <button\r\n              type=\"button\"\r\n              className={`align-self-end btn-base ${\r\n                isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n              } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n              onClick={() => {\r\n                if (isBioEditable) {\r\n                  setCompanyDescription(companyData.description);\r\n                }\r\n                setIsBioEditable(!isBioEditable);\r\n              }}\r\n            >\r\n              {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n              {/* <CiEdit /> */}\r\n            </button>\r\n            {isBioEditable && (\r\n              <button\r\n                className={`align-self-end btn-base ${\r\n                  isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n                } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n                onClick={(e) => submitBioHandler(e)}\r\n              >\r\n                {loading ? (\r\n                  <SpinnerBS\r\n                    colorClass={`${\r\n                      isInvestor === \"true\" ? \"text-dark\" : \"text-white\"\r\n                    }`}\r\n                    spinnerSizeClass=\"spinner-border-sm\"\r\n                  />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n                {/* <CiSaveUp2 /> */}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </span>\r\n      </div>\r\n      {/* <p>\r\n              A little about myself. “Dejection is a sign of failure but it\r\n              becomes the cause of success”. I wrote this when I was 16 years old\r\n              and that’s exactly when I idealised the reality of life. In this\r\n              current world, success is defined in many ways, some of which\r\n              include money, fame and power. I believe that success is just the\r\n              beginning of a new problem. Every step of our lives we work hard to\r\n              solve an issue and every time we end up with a new problem.\r\n            </p> */}\r\n      {isBioEditable ? (\r\n        <textarea\r\n          value={companyDescription}\r\n          name=\"bio\"\r\n          onChange={handleDescriptionChange}\r\n          className=\"description_textarea p-2\"\r\n          onFocus={handleResize}\r\n          autoFocus\r\n          // rows={4}\r\n        />\r\n      ) : (\r\n        <p className=\"small_typo\">\r\n          {companyDescription || \"Click on edit to add company description\"}\r\n        </p>\r\n      )}\r\n      {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfileForm.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../Service/user\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\n// import { Response } from \"aws-sdk\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../Store/features/user/userSlice\";\r\n\r\nconst LOCATIONS = [\r\n  \"Select Location\",\r\n  \"New Delhi\",\r\n  \"Gurgaon\",\r\n  \"Mumbai\",\r\n  \"Pune\",\r\n  \"Hyderabad\",\r\n  \"Chennai\",\r\n  \"Bengaluru\",\r\n  \"Mangalore\",\r\n  \"Kochi\",\r\n  \"Lucknow\",\r\n  \"Kolkata\",\r\n  \"Others\",\r\n];\r\n\r\nconst SECTORS = [\r\n  \"Select Sector\",\r\n  \"FMCG\",\r\n  \"Restaurants\",\r\n  \"Education\",\r\n  \"Tourism\",\r\n  \"Automobile\",\r\n  \"Textile\",\r\n  \"Chemicals\",\r\n  \"Telecommunications\",\r\n  \"Oil and Gas\",\r\n  \"Renewable Energy\",\r\n  \"Investment Banking and Venture Capital\",\r\n  \"NBFC\",\r\n  \"Biotechnology\",\r\n  \"Software Development Services\",\r\n  \"Computer and Information Technology\",\r\n  \"Aerospace\",\r\n  \"Sales and Marketing\",\r\n];\r\n\r\nexport default function CompanyProfileForm({\r\n  companyData,\r\n  investor = false,\r\n  isSaveAll,\r\n  handleShowPopup,\r\n}) {\r\n  // States for form\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [othersClicked, setOthersClicked] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  // State for loading\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isSaveAll) {\r\n      const event = new Event(\"submit\", { cancelable: true });\r\n      handleSubmit(event);\r\n    }\r\n  }, [isSaveAll]);\r\n\r\n  useEffect(() => {\r\n    if (investor) {\r\n      setFormData({\r\n        founderId: companyData.founderId || loggedInUser._id,\r\n        company: companyData.companyName || \"\",\r\n        tagline: companyData.tagline || \"\",\r\n        location: companyData.location || LOCATIONS[0],\r\n        startedAtDate: companyData.startedAtDate || \"\",\r\n        industryType: companyData.industry || \"\",\r\n        sector: companyData.sector || SECTORS[0],\r\n        noOfEmployees: companyData.noOfEmployees || \"\",\r\n        vision: companyData.vision || \"\",\r\n        mission: companyData.mission || \"\",\r\n        socialLinks: companyData.socialLinks || \"\",\r\n        keyFocus: companyData.keyFocus || \"\",\r\n      });\r\n    } else {\r\n      setFormData(companyData || {});\r\n    }\r\n  }, [companyData, investor]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"siteUrl\") {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        socialLinks: {\r\n          ...prevData.socialLinks,\r\n          website: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle File Input change\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // Handle Location select\r\n  const handleLocationSelect = (e, location) => {\r\n    if (location === LOCATIONS[0]) return;\r\n    if (location === \"Others\") {\r\n      setOthersClicked(true);\r\n    }\r\n    setFormData((prevData) => ({ ...prevData, location: location }));\r\n  };\r\n\r\n  // Handle Dropdown Blur\r\n  const handleDropdownBlur = () => {\r\n    setOthersClicked(false);\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      location:\r\n        (formData.location !== \"Others\" && formData.location) ||\r\n        companyData.location,\r\n    }));\r\n  };\r\n\r\n  // Handle Sector Select\r\n  const handleSectorSelect = (e, sector) => {\r\n    if (sector === SECTORS[0]) return;\r\n    setFormData((prevData) => ({ ...prevData, sector: sector }));\r\n  };\r\n\r\n  // handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // set loading\r\n    setLoading(true);\r\n\r\n    let updatedFormData = { ...formData };\r\n\r\n    try {\r\n      if (selectedFile) {\r\n        const logo = await getBase64(selectedFile);\r\n        updatedFormData.logo = logo;\r\n      }\r\n      if (investor) {\r\n        const response = await postInvestorData({\r\n          ...updatedFormData,\r\n          companyName: updatedFormData.company,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        console.log(response);\r\n        const user = {\r\n          ...loggedInUser,\r\n          investor: response.data._id,\r\n        };\r\n        dispatch(loginSuccess(user));\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      } else {\r\n        const response = await postStartUpData({\r\n          ...updatedFormData,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Show error popup\r\n      setLoading(false);\r\n      handleShowPopup({ error: true });\r\n    }\r\n  };\r\n\r\n  // console.log(\"companyData\", companyData.sector);\r\n  return (\r\n    <div className=\"profile__form\">\r\n      <form action=\"\" className=\"\" onSubmit={handleSubmit}>\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Profile Picture</legend>\r\n          <input\r\n            type=\"file\"\r\n            name=\"companyLogo\"\r\n            id=\"companyLogo\"\r\n            className=\" visually-hidden\"\r\n            value={\"\"}\r\n            accept=\"image/*\"\r\n            onChange={handleFileInputChange}\r\n          />\r\n          <div className=\"profile_form_input d-flex align-items-center gap-4\">\r\n            <label\r\n              htmlFor=\"companyLogo\"\r\n              style={{ cursor: \"pointer\", color: \"var(--d-l-grey)\" }}\r\n            >\r\n              Upload Picture\r\n            </label>\r\n            <p className=\"m-0 fs-6 fw-light\">{selectedFile?.name}</p>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Name</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            id=\"company\"\r\n            className=\"profile_form_input\"\r\n            value={formData.company || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Tagline</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tagline\"\r\n            id=\"tagline\"\r\n            className=\"profile_form_input\"\r\n            value={formData.tagline || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Location</legend>\r\n          {othersClicked && (\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              id=\"location\"\r\n              className=\"profile_form_input\"\r\n              placeholder={formData.location + \"...\"}\r\n              // value={formData.location || \"\"}\r\n              onChange={handleInputChange}\r\n              onBlur={handleDropdownBlur}\r\n              autoFocus\r\n            />\r\n          )}\r\n          {/* Location Dropdown */}\r\n          {!othersClicked && (\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn profile_form_input w-auto dropdown-toggle\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {formData.location}\r\n              </button>\r\n              <ul\r\n                className={`dropdown-menu m-0 p-0 ${\r\n                  investor ? \"investor\" : \"startup\"\r\n                }`}\r\n              >\r\n                {LOCATIONS.map((location, index) => {\r\n                  return (\r\n                    <li key={`${location}${index}`} className=\"m-0 p-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn btn-base list-btn w-100 text-start ps-3 ${\r\n                          investor ? \"investor\" : \"startup\"\r\n                        } ${location === formData.location ? \"selected\" : \"\"}`}\r\n                        onClick={(e) => handleLocationSelect(e, location)}\r\n                      >\r\n                        {location}\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Established Date</legend>\r\n          <input\r\n            type=\"date\"\r\n            name=\"startedAtDate\"\r\n            id=\"startedAtDate\"\r\n            className=\"profile_form_input\"\r\n            value={formData.startedAtDate || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Sector</legend>\r\n          {/* <input\r\n            type=\"text\"\r\n            name=\"sector\"\r\n            id=\"sector\"\r\n            className=\"profile_form_input\"\r\n            value={formData.sector || \"\"}\r\n            onChange={handleInputChange}\r\n          /> */}\r\n          {/* sector dropdown */}\r\n          <div className=\"dropdown\">\r\n            <button\r\n              className=\"btn profile_form_input w-auto dropdown-toggle sector_text\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {formData.sector}\r\n            </button>\r\n            <ul\r\n              className={`dropdown-menu m-0 p-0 ${\r\n                investor ? \"investor\" : \"startup\"\r\n              }`}\r\n            >\r\n              {SECTORS.map((sector, index) => {\r\n                return (\r\n                  <li key={`${sector}${index}`} className=\"m-0 p-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`btn btn-base list-btn text-start ps-3 text-break ${\r\n                        investor ? \"investor\" : \"startup\"\r\n                      } ${sector === formData.sector ? \"selected\" : \"\"}`}\r\n                      onClick={(e) => handleSectorSelect(e, sector)}\r\n                    >\r\n                      <p className=\"m-0\">{sector}</p>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>No. of Employees</legend>\r\n          <input\r\n            type=\"number\"\r\n            name=\"noOfEmployees\"\r\n            id=\"noOfEmployees\"\r\n            max={2000}\r\n            min={0}\r\n            className=\"profile_form_input\"\r\n            value={formData.noOfEmployees || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Website URL</legend>\r\n          <input\r\n            type=\"url\"\r\n            name=\"siteUrl\"\r\n            id=\"siteUrl\"\r\n            className=\"profile_form_input\"\r\n            value={formData.socialLinks?.website || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Vision</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"vision\"\r\n            id=\"vision\"\r\n            className=\"profile_form_input\"\r\n            value={formData.vision || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Mission</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mission\"\r\n            id=\"mission\"\r\n            className=\"profile_form_input\"\r\n            value={formData.mission || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Key Focus</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"keyFocus\"\r\n            id=\"keyFocus\"\r\n            className=\"profile_form_input\"\r\n            value={formData.keyFocus || \"\"}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Finance, AR, VR, AI\"\r\n          />\r\n        </fieldset>\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">TAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"TAM\"\r\n              id=\"TAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.TAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"TAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SAM\"\r\n              id=\"SAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SOM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SOM\"\r\n              id=\"SOM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SOM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SOM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className={`align-self-end btn-base ${\r\n            investor ? \"investor\" : \"startup\"\r\n          }`}\r\n        >\r\n          {loading ? (\r\n            <SpinnerBS\r\n              colorClass={`${investor ? \"text-dark\" : \"text-white\"}`}\r\n              spinnerSizeClass=\"spinner-border-sm\"\r\n            />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </button>\r\n      </form>\r\n      {/* {fromSubmit && (\r\n        <AfterSuccessPopup\r\n          // withoutOkButton\r\n          onClose={() => setFromSubmit(!fromSubmit)}\r\n          successText={popupData}\r\n        />\r\n      )}\r\n      {investorfromSubmit && (\r\n        <InvestorAfterSuccessPopup\r\n          // withoutOkButton\r\n          onClose={() => setInvestorfromSubmit(!investorfromSubmit)}\r\n          successText={popupData}\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CoreTeamCard.scss\";\r\n\r\nexport default function CoreTeamCard({ image, name, designation }) {\r\n  return (\r\n    <div\r\n      className=\"p-4 d-flex flex-column align-items-center gap-3 rounded-4 core_team_card\"\r\n      style={{ backgroundColor: \"var(--bs-light)\" }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt={\"name\"}\r\n        style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\r\n        className=\"rounded-circle\"\r\n        loading=\"lazy\"\r\n      />\r\n      <h5 className=\"text-capitalize text-center text-break\">{name}</h5>\r\n      <p className=\"text-capitalize text-center text-break\">{designation}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BsFillCameraFill } from \"react-icons/bs\";\r\nimport {\r\n  getStartupByFounderId,\r\n  postStartUpData,\r\n  uploadLogo,\r\n  postInvestorData,\r\n} from \"../../../../Service/user\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\n// import IconEdit from \"../../SvgIcons/IconEdit\";\r\n// import IconDeleteFill from \"../../SvgIcons/IconDeleteFill\";\r\nimport { MdDelete } from \"react-icons/md\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nexport default function AddTeamMemberModal({\r\n  companyData,\r\n  setCompanyData,\r\n  theme,\r\n}) {\r\n  const initialMemberState = {\r\n    name: \"\",\r\n    designation: \"\",\r\n    image: \"\",\r\n    index: null,\r\n  };\r\n  // State for member\r\n  const [member, setMember] = useState(initialMemberState);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetch current core team members here\r\n  // const { team: currentTeam } = companyData;\r\n  // console.log(currentTeam);\r\n\r\n  // handleChange\r\n  function handleInputChange(e) {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (name === \"name\") {\r\n      setMember((prev) => {\r\n        return { ...prev, name: value };\r\n      });\r\n    } else {\r\n      setMember((prev) => {\r\n        return { ...prev, designation: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  // handleFileChange\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    // Image preview\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setImagePreview(imageUrl);\r\n  };\r\n\r\n  // handle AddTeamMember\r\n  const handleAddTeamMember = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    let index = member.index;\r\n    let profileImage = \"\";\r\n\r\n    if (selectedFile) {\r\n      try {\r\n        const logo = await getBase64(selectedFile);\r\n        const { url } = await uploadLogo({ logo });\r\n        profileImage = url;\r\n      } catch (error) {\r\n        console.log(\"Error:\", error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const updatedTeamMember = {\r\n      name: member.name,\r\n      designation: member.designation,\r\n      image: profileImage,\r\n    };\r\n    console.log(\"Team\", updatedTeamMember);\r\n\r\n    //\r\n    const editedTeamMember = {\r\n      name: member.name,\r\n      designation: member.designation,\r\n      image: profileImage || member.image,\r\n    };\r\n    console.log(\"edited member\", editedTeamMember);\r\n\r\n    try {\r\n      if (isEditing) {\r\n        let editedTeam = [...companyData.team];\r\n        editedTeam[index] = { ...editedTeam[index], ...editedTeamMember };\r\n        console.log(\"editedTeam\", editedTeam);\r\n\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...editedTeam],\r\n        }));\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...editedTeam],\r\n          });\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...editedTeam],\r\n          });\r\n          dispatch(setUserCompany(response.data));\r\n        }\r\n      } else {\r\n        // If not editing then Adding new member\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...previousData.team, updatedTeamMember],\r\n        }));\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...companyData.team, updatedTeamMember],\r\n          });\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...companyData.team, updatedTeamMember],\r\n          });\r\n          console.log(response.data);\r\n          dispatch(setUserCompany(response.data));\r\n\r\n        }\r\n      }\r\n\r\n      setMember(initialMemberState);\r\n      setSelectedFile(null);\r\n      setIsEditing(false);\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error adding team member:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle select click\r\n  function handleSelectClick(e, member, index) {\r\n    setIsEditing(true);\r\n    setMember((prev) => {\r\n      return { ...prev, ...member, index: index };\r\n    });\r\n    setImagePreview(member.image);\r\n  }\r\n\r\n  // Handle Delete click\r\n  async function handleDeleteClick(e, member, index) {\r\n    let response = window.confirm(\r\n      `Are you sure you want to remove \"${member.name}\" from your Team?`\r\n    );\r\n    if (response) {\r\n      const newTeam = [...companyData.team];\r\n      const deleted = newTeam.splice(index, 1);\r\n      // console.log(\"deleted\", deleted, \"newTeam\", newTeam);\r\n\r\n      // Post startupData\r\n      try {\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...newTeam],\r\n        }));\r\n\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...newTeam],\r\n          });\r\n\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...newTeam],\r\n          });\r\n\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        }\r\n\r\n        setMember(initialMemberState);\r\n        setSelectedFile(null);\r\n        setIsEditing(false);\r\n        setImagePreview(null);\r\n      } catch (error) {\r\n        console.error(\"Error adding team member:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle Clear\r\n  function handleClear() {\r\n    setMember(initialMemberState);\r\n    setIsEditing(false);\r\n    setSelectedFile(null);\r\n    setImagePreview(null);\r\n  }\r\n\r\n  // console.log(1111111111111, member);\r\n\r\n  return (\r\n    <div className=\"team_member_modal d-flex flex-column flex-lg-row gap-4 justify-content-around py-3\">\r\n      {/* Edit/Remove modal */}\r\n\r\n      {companyData?.team?.length > 0 ? (\r\n        <div className=\"edit_remove_team d-flex flex-column gap-3 overflow-y-auto py-3\">\r\n          <h5 className=\"m-0 text-center\">Select member to edit</h5>\r\n          <div className=\"d-flex flex-column gap-3\">\r\n            {/* Loop current team member here */}\r\n            {companyData?.team?.map((member, index) => {\r\n              return (\r\n                <div\r\n                  className=\"team_member_reomve  d-flex align-items-center justify-content-around p-2  rounded-4\"\r\n                  key={`${member.name}${index}`}\r\n                >\r\n                  <img\r\n                    src={member.image}\r\n                    alt={member.name}\r\n                    style={{\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                  <h6 className=\"m-0 flex-grow-1 text-center\" style={{}}>\r\n                    {member.name}\r\n                  </h6>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <button\r\n                      className={`modal_edit_btn ${theme}`}\r\n                      onClick={(e) => handleSelectClick(e, member, index)}\r\n                    >\r\n                      {/* <IconEdit /> */}\r\n                      <FaRegEdit size={10} style={{fill:\"black\"}}/>\r\n\r\n                    </button>\r\n                    <button\r\n                      className={`modal_delete_btn ${theme}`}\r\n                      onClick={(e) => handleDeleteClick(e, member, index)}\r\n                    >\r\n                      {/* <IconDeleteFill /> */}\r\n                      <MdDelete size={20}/>\r\n\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n\r\n      {/* Add modal */}\r\n      <div className=\"add_team d-flex flex-column gap-3  rounded-4 shadow-sm py-3 \">\r\n        <h5 className=\"m-0 text-center\">Add new Member</h5>\r\n\r\n        <form\r\n          onSubmit={handleAddTeamMember}\r\n          className=\"d-flex flex-column gap-4 p-4\"\r\n        >\r\n          {/* Profile picture input */}\r\n          <div className=\"mx-auto\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              onChange={handleFileChange}\r\n              required\r\n            />\r\n            <label htmlFor=\"image\" className={`upload__label ${theme} `}>\r\n              {imagePreview ? (\r\n                <img\r\n                  src={imagePreview}\r\n                  alt=\"Selected\"\r\n                  className=\"preview-image\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"contain\",\r\n                    borderRadius: \"100px\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <BsFillCameraFill\r\n                  style={{\r\n                    fontSize: \"1.5rem\",\r\n                    color: `${theme === \"investor\" ? \"black\" : \"rgba(253, 89, 1,1)\"\r\n                      }`,\r\n                  }}\r\n                />\r\n              )}\r\n            </label>\r\n          </div>\r\n          {/* {imagePreview && (\r\n            <div className=\"image-preview\">\r\n              <img src={imagePreview} alt=\"Selected\" />\r\n            </div>\r\n          )} */}\r\n          {/* Name input */}\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={member.name}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          {/* Designation input */}\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"designation\"\r\n              id=\"designation\"\r\n              placeholder=\"Enter Designation\"\r\n              value={member.designation}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={!member.designation || !member.name}\r\n            className={`orange_button ${theme}`}\r\n            // data-bs-dismiss=\"modal\"\r\n            type=\"submit\"\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={theme === \"investor\" ? \"text-dark\" : \"text-light\"}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : (\r\n              isEditing ? \"Update\" : \"Add\"\r\n            )}\r\n\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`orange_button ${theme}`}\r\n            onClick={handleClear}\r\n          >\r\n            Clear\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CoreTeam.scss\";\r\nimport CoreTeamCard from \"./CoreTeamCard\";\r\n// import RaghuImage from \"../../../../Images/aboutUs/Raghu.jpeg\";\r\n// import { Link } from \"react-router-dom\";\r\nimport {\r\n  ModalBSBody,\r\n  ModalBSContainer,\r\n  // ModalBSFooter,\r\n  ModalBSHeader,\r\n  ModalBsLauncher,\r\n} from \"../../../PopUp/ModalBS\";\r\nimport AddTeamMemberModal from \"./AddTeamMemberModal\";\r\n\r\nexport default function CoreTeam({ companyData, setCompanyData, theme }) {\r\n  const [team, setTeam] = useState(companyData?.team);\r\n  useEffect(() => {\r\n    setTeam(companyData?.team);\r\n  }, [companyData]);\r\n\r\n  return (\r\n    <div className=\" d-flex flex-column gap-4\">\r\n      <div\r\n        className=\"d-flex align-items-center justify-content-between\"\r\n        style={{ color: \"var(--d-l-grey)\" }}\r\n      >\r\n        <h2>Core Team</h2>\r\n        {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n      </div>\r\n      <div\r\n        className={`team__cards__container d-flex align-items-center gap-5 pb-3 ${theme} `}\r\n      >\r\n        {team && team.length > 0 ? (\r\n          team?.map((member, index) => (\r\n            <CoreTeamCard\r\n              key={index}\r\n              image={member.image}\r\n              name={member.name}\r\n              designation={member.designation}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>Click Add to add team members</p>\r\n        )}\r\n      </div>\r\n      {/* If authorised show \"Add\" button that triggers add modal */}\r\n      {\r\n        <div className=\"align-self-end\">\r\n          <ModalBsLauncher\r\n            id={\"AddTeamMemberModal\"}\r\n            className={`add_button d-flex align-items-center gap-1 w-auto ${theme} `}\r\n          >\r\n            <span>Add</span>\r\n          </ModalBsLauncher>\r\n        </div>\r\n      }\r\n      {/* Modal for adding new team member */}\r\n      <div className=\"addCoreTeamModal__container\">\r\n        <ModalBSContainer id={\"AddTeamMemberModal\"} modalXl>\r\n          <ModalBSHeader\r\n            title={\"Add Team Member\"}\r\n            className={`orange__heading ${theme}`}\r\n          />\r\n          <ModalBSBody>\r\n            <AddTeamMemberModal\r\n              setCompanyData={setCompanyData}\r\n              companyData={companyData}\r\n              theme={theme}\r\n            />\r\n          </ModalBSBody>\r\n        </ModalBSContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ColorCard.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst ColorCard = ({\r\n  color,\r\n  text,\r\n  image,\r\n  amount,\r\n  background,\r\n  onAmountChange,\r\n  field,\r\n  colorCardData,\r\n  className,\r\n  noRupee,\r\n  isInvestor = false,\r\n  isOneLink = false,\r\n  isNotEditable,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedAmount, setEditedAmount] = useState(amount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEditedAmount(amount);\r\n  }, [amount]);\r\n\r\n  const handleEditClick = () => {\r\n    if (!isNotEditable) setIsEditMode(true);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setEditedAmount(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditMode(false);\r\n    onAmountChange(editedAmount);\r\n    const updatedData = {\r\n      founderId: loggedInUser._id,\r\n      colorCard: { ...colorCardData, [field]: editedAmount },\r\n    };\r\n    if (isInvestor) {\r\n      postInvestorData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    } else {\r\n      postStartUpData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${className} colorcard-component card row border`}\r\n      style={{ background }}\r\n    >\r\n      <div className=\"col-7 col-sm-6 left-content\" style={{ color }}>\r\n        <>\r\n          <h3 className=\"title\">{text}</h3>\r\n          {isEditMode ? (\r\n            <input\r\n              type=\"text\"\r\n              className=\"edit_input\"\r\n              id=\"edit\"\r\n              value={editedAmount}\r\n              onChange={handleAmountChange}\r\n              onBlur={handleBlur}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span\r\n              className=\"rupee-sign\"\r\n              onClick={onAmountChange ? handleEditClick : () => {}}\r\n            >\r\n              {!noRupee && \"₹\"} {editedAmount}{\" \"}\r\n              {!isOneLink && !isNotEditable && (\r\n                <label htmlFor=\"edit\" className=\"edit-tip\">\r\n                  Click to edit\r\n                </label>\r\n              )}\r\n            </span>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div className=\"col-5 right-content\">\r\n        <img src={image} alt=\"Card\" width={60} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n"],"names":["CompanyDescription","_ref","companyData","companyDescription","setCompanyDescription","isBioEditable","setIsBioEditable","submitBioHandler","handleDescriptionChange","loading","isInvestor","useSelector","state","user","loggedInUser","useDispatch","_jsxs","className","concat","style","color","children","_jsx","type","onClick","description","e","SpinnerBS","colorClass","spinnerSizeClass","value","name","onChange","onFocus","target","height","scrollHeight","autoFocus","LOCATIONS","SECTORS","CompanyProfileForm","_formData$socialLinks","_ref$investor","investor","isSaveAll","handleShowPopup","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","selectedFile","setSelectedFile","_useState5","_useState6","othersClicked","setOthersClicked","dispatch","_useState7","_useState8","setLoading","useEffect","event","Event","cancelable","handleSubmit","founderId","_id","company","companyName","tagline","location","startedAtDate","industryType","industry","sector","noOfEmployees","vision","mission","socialLinks","keyFocus","handleInputChange","_e$target","prevData","_objectSpread","website","_defineProperty","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","updatedFormData","logo","response","_response","wrap","_context","prev","next","preventDefault","getBase64","sent","postInvestorData","console","log","data","loginSuccess","setUserCompany","success","postStartUpData","t0","error","stop","_x","apply","arguments","action","onSubmit","id","accept","file","files","htmlFor","cursor","placeholder","onBlur","map","index","handleLocationSelect","handleSectorSelect","max","min","TAM","SAM","SOM","CoreTeamCard","image","designation","backgroundColor","src","alt","width","objectFit","AddTeamMemberModal","_companyData$team","_companyData$team2","setCompanyData","theme","initialMemberState","member","setMember","imagePreview","setImagePreview","isEditing","setIsEditing","_useState9","_useState10","handleFileChange","imageUrl","URL","createObjectURL","handleAddTeamMember","_ref3","_callee2","profileImage","_yield$uploadLogo","url","updatedTeamMember","editedTeamMember","editedTeam","_response2","_response3","_context2","uploadLogo","abrupt","_toConsumableArray","team","previousData","t1","finish","_x2","_handleDeleteClick","_callee3","newTeam","_response4","_response5","_context3","window","confirm","splice","length","handleSelectClick","FaRegEdit","size","fill","_x3","_x4","_x5","handleDeleteClick","MdDelete","required","borderRadius","BsFillCameraFill","fontSize","disabled","CoreTeam","setTeam","ModalBsLauncher","ModalBSContainer","modalXl","ModalBSHeader","title","ModalBSBody","text","amount","background","onAmountChange","field","colorCardData","noRupee","_ref$isInvestor","_ref$isOneLink","isOneLink","isNotEditable","isEditMode","setIsEditMode","editedAmount","setEditedAmount","_Fragment","updatedData","colorCard","then","res","catch"],"sourceRoot":""}