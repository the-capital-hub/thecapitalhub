{"version":3,"file":"static/js/2719.f3a6532c.chunk.js","mappings":"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","sources":["pages/StartUp/UserSettings/SettingsPages/PhoneNumberSetting/PhoneNumberSetting.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./PhoneNumberSetting.scss\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport Modal from \"../../../../../components/PopUp/Modal/Modal\";\r\nimport { IoCloseSharp } from \"react-icons/io5\";\r\n\r\nfunction PhoneNumberSetting() {\r\n  const navigate = useNavigate();\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"PhoneNumberSetting\">\r\n      <h4 className=\"m-0 px-3 py-3 d-flex align-items-center gap-2\">\r\n        <Button\r\n          className=\"back-button btn-sm  rounded-circle border-none\"\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          <FaArrowLeft size={25} />\r\n        </Button>\r\n        Phone numbers\r\n      </h4>\r\n      <div className=\" border-top px-3 py-3 d-flex flex-column gap-2\">\r\n        <span className=\"fs-6 text-secondary\">Phone numbers you've added</span>\r\n        <span className=\"fs-6 text-secondary\">\r\n          These won't be displayed on your profile.\r\n        </span>\r\n        <div className=\"d-flex flex-row align-items-center \">\r\n          <h5>IN+9876543210</h5>\r\n          <div className=\"d-flex flex-row gap-2 ms-auto\">\r\n            <span className=\"fs-6  fw-bold\">Make primary</span>\r\n            <span className=\"fs-6  fw-bold\">Remove</span>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div className=\"py-2 d-flex flex-row align-items-center\">\r\n            <span className=\"fs-6  fw-bold\">Use for resetting password</span>\r\n            <div className=\"onboarding_switch_wrapper ms-auto\">\r\n              <div className=\"form-check form-switch\">\r\n                <input\r\n                  className={`form-check-input `}\r\n                  type=\"checkbox\"\r\n                  role=\"switch\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <span className=\"fs-6  fw-bold \">\r\n            If selected, you'll be able to use this number to reset your\r\n            password\r\n          </span>\r\n        </div>\r\n        <span className=\"fs-6 text-secondary\">\r\n          Your phone number helps us keep your account secure by adding an\r\n          additional layer of verification. It also helps others, who already\r\n          have your phone number, discover and connect with you. You can always\r\n          decide how you want your phone number used\r\n        </span>\r\n        <Button\r\n          className=\"ms-auto  add_phone_btn w-100\"\r\n          onClick={() => setShowModal(true)}\r\n        >\r\n          Add phone number\r\n        </Button>\r\n      </div>\r\n      {showModal && (\r\n        <Modal>\r\n          <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n            <h4>Add another Mobile Number</h4>\r\n            <IoCloseSharp size={20} onClick={() => setShowModal(false)} />\r\n          </div>\r\n          <span className=\"fs-6 text-secondary \">\r\n            Weâ€™ll send a verification code to this number.\r\n          </span>\r\n          <form>\r\n            <fieldset>\r\n              <legend className=\"px-2\">Phone number</legend>\r\n              {/* <input\r\n              type=\"tel\"\r\n              className=\"professional_form_input\"\r\n              name=\"Phone\"\r\n             \r\n            /> */}\r\n              <InputGroup>\r\n                <Form.Control\r\n                  // placeholder=\"Recipient's username\"\r\n                  type=\"text\"\r\n                  aria-label=\"Phone number\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                  value={phone}\r\n                  onChange={(e) => setPhone(e.target.value)}\r\n                />\r\n                <Button\r\n                  className=\"\"\r\n                  variant=\"outline-secondary\"\r\n                  id=\"button-addon2\"\r\n                >\r\n                  Verify\r\n                </Button>\r\n              </InputGroup>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend className=\"px-2\">Password</legend>\r\n              <input\r\n                type=\"password\"\r\n                className=\"professional_form_input\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </fieldset>\r\n            <Button className=\"done w-100\">Done</Button>\r\n          </form>\r\n          <span className=\"fs-6 text-secondary py-2\">\r\n            Your phone number helps us keep your account secure by adding an\r\n            additional layer of verification. <br /> It also helps others, who\r\n            already have your phone number, discover and connect with you.{\" \"}\r\n            <br /> You can always decide how you want your phone number used.\r\n          </span>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PhoneNumberSetting;\r\n","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","phone","setPhone","_useState3","_useState4","showModal","setShowModal","_useState5","_useState6","password","setPassword","_jsxs","className","children","_jsx","Button","onClick","FaArrowLeft","size","type","role","Modal","IoCloseSharp","InputGroup","Form","Control","value","onChange","e","target","variant","id","name","context","React","displayName","_excluded","InputGroupText","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","hasValidation","contextValue","useMemo","InputGroupContext","Provider","concat","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}