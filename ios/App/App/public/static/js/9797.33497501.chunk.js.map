{"version":3,"file":"static/js/9797.33497501.chunk.js","mappings":"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","sources":["components/Investor/InvestorHome/Components/Questionnaire/Greeting/Greeting.jsx","components/Investor/InvestorHome/Components/Questionnaire/UserInput/UserInput.jsx","components/Investor/SvgIcons/IconTick.jsx","components/Investor/InvestorHome/Components/Questionnaire/CurrentQuestion/CurrentQuestion.jsx","components/Investor/InvestorHome/Components/Questionnaire/Categories/Categories.jsx","components/Investor/InvestorHome/Components/Questionnaire/History/History.jsx","components/Investor/InvestorHome/Components/Questionnaire/Questionnaire.jsx","components/Investor/InvestorHome/Components/Questionnaire/MissingDetails.jsx","components/Investor/InvestorHome/Components/UserBio/UserBio.jsx","components/Investor/StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfo.jsx","components/Investor/StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfoDisplay.jsx","components/Investor/SvgIcons/IconCloudUpload.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Greeting() {\r\n  return (\r\n    <>\r\n      {/* TCH logo */}\r\n      <div\r\n        className=\"d-flex justify-content-center align-items-center bg-light rounded-circle shadow-sm border mx-3\"\r\n        style={{ height: \"60px\", width: \"60px\" }}\r\n      >\r\n        <img\r\n          src=\"https://res.cloudinary.com/drjt9guif/image/upload/v1698409124/TheCapitalHub/users/profilePictures/vwy3v5c0tq1hbloqsnlx.webp\"\r\n          alt=\"The Capital HUB profile\"\r\n          height={\"50px\"}\r\n          width={\"50px\"}\r\n          style={{ objectFit: \"cover\" }}\r\n          className=\"rounded-circle\"\r\n        />\r\n      </div>\r\n      {/* Intro */}\r\n      <div className=\"chat_box\">\r\n        <p className=\"m-0\">\r\n          Hello, I am Lupe, Your Capital Hub chat assistant!\r\n        </p>\r\n        <p className=\"m-0\">I am here to help you complete your profile.</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport IconSend from \"../../../../SvgIcons/IconSend\";\r\n\r\nexport default function UserInput({\r\n  question,\r\n  answer,\r\n  handleAnswerChange,\r\n  handlePostAnswer,\r\n}) {\r\n  return (\r\n    <form className=\"user_input_container border-top p-3 d-flex align-items-center gap-3\">\r\n      <textarea\r\n        type=\"text\"\r\n        name=\"answer\"\r\n        id=\"answer\"\r\n        placeholder=\"Type here...\"\r\n        className=\"user_input border-0 px-3 py-4 rounded-4\"\r\n        value={question?.options?.length > 0 ? \"\" : answer}\r\n        onChange={handleAnswerChange}\r\n        autoFocus\r\n        rows={1}\r\n        disabled={!question || question?.options?.length > 0}\r\n      />\r\n      <button\r\n        type=\"submit\"\r\n        className=\"send_btn d-flex align-items-center justify-content-center\"\r\n        onClick={handlePostAnswer}\r\n      >\r\n        <IconSend style={{ marginLeft: \"8px\" }} />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","// icon:tick | Typicons https://www.s-ings.com/typicons/ | Stephen Hutchings\r\nimport * as React from \"react\";\r\n\r\nfunction IconTick(props) {\r\n  return (\r\n    <svg\r\n      baseProfile=\"tiny\"\r\n      viewBox=\"0 0 24 24\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path d=\"M16.972 6.251a1.999 1.999 0 00-2.72.777l-3.713 6.682-2.125-2.125a2 2 0 10-2.828 2.828l4 4c.378.379.888.587 1.414.587l.277-.02a2 2 0 001.471-1.009l5-9a2 2 0 00-.776-2.72z\" />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconTick;\r\n","import React from \"react\";\r\nimport IconTick from \"../../../../SvgIcons/IconTick\";\r\nimport SpinnerBS from \"../../../../../Shared/Spinner/SpinnerBS\";\r\n\r\nexport default function CurrentQuestion({\r\n  question,\r\n  answer,\r\n  handleAnswerSelect,\r\n  handleBackToCategories,\r\n  loading,\r\n  handlePostAnswer,\r\n}) {\r\n  return (\r\n    <div className=\"current_question mt-5\">\r\n      {question && (\r\n        <div className=\"chat_box\">\r\n          <p className=\"m-0\">{question.question}</p>\r\n        </div>\r\n      )}\r\n      {/* Options */}\r\n      {question && (\r\n        <div className=\"d-flex gap-3 align-items-center flex-wrap mx-3 \">\r\n          {question?.options?.map((option) => {\r\n            return (\r\n              <button\r\n                key={option}\r\n                type=\"button\"\r\n                className={`position-relative option_button ${(Array.isArray(answer) ? answer.includes(option) : option === answer) && \"selected\"\r\n                  }`}\r\n                onClick={(e) => handleAnswerSelect(e, option)}\r\n              >\r\n                {option}\r\n                {(Array.isArray(answer) ? answer.includes(option) : option === answer) && (\r\n                  <div className=\"position-absolute select_badge\">\r\n                    <IconTick />\r\n                  </div>\r\n                )}\r\n              </button>\r\n            );\r\n          })}\r\n        </div>\r\n      )}\r\n      <div className=\"d-flex align-items-center gap-3 mx-3\">\r\n        {/* Submit button for questions with options */}\r\n        {question?.options.length && (\r\n          <button\r\n            type=\"submit\"\r\n            className=\"option_button back_button align-self-start\"\r\n            onClick={handlePostAnswer}\r\n          >\r\n            Submit\r\n          </button>\r\n        )}\r\n        {/* Go back to categories */}\r\n        {question && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"option_button back_button align-self-start\"\r\n            onClick={handleBackToCategories}\r\n          >\r\n            Back\r\n          </button>\r\n        )}\r\n      </div>\r\n      {loading && (\r\n        <div className=\"d-flex justify-content-center align-items-center py-3\">\r\n          <SpinnerBS spinnerClass=\"spinner-grow\" colorClass={\"color_main\"} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { OPTIONS } from \"../Questionnaire\";\r\n\r\nexport default function Categories({ option, handleOptionSelect, countData }) {\r\n  return (\r\n    <>\r\n      <div className=\"chat_box\">\r\n        <p className=\"m-0\">\r\n          Start by picking the category to fill your information.\r\n        </p>\r\n      </div>\r\n      <div className=\"chat_box d-flex align-items-start gap-4 p-0 border-0 shadow-none flex-wrap\">\r\n        {(option === \"Company\" || option === null) && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"category_button\"\r\n            onClick={(e) => handleOptionSelect(e, OPTIONS.company)}\r\n          >\r\n            {OPTIONS.company.text} ({countData?.companyQuestionCount})\r\n          </button>\r\n        )}\r\n        {(option === \"Personal\" || option === null) && (\r\n          <button\r\n            type=\"button\"\r\n            className=\"category_button\"\r\n            onClick={(e) => handleOptionSelect(e, OPTIONS.personal)}\r\n          >\r\n            {OPTIONS.personal.text} ({countData?.personalQuestionCount})\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function History({ history }) {\r\n  return (\r\n    <>\r\n      {history?.length > 0 &&\r\n        history?.map((data, index) => {\r\n          return (\r\n            <div className=\"d-flex flex-column gap-3\" key={data.questionId}>\r\n              <div className=\"chat_box\">\r\n                <p className=\"m-0\">{data.question}</p>\r\n              </div>\r\n              <div className=\"answer_box\">\r\n                {!Array.isArray(data.answer) && (\r\n                  <p className=\"m-0\">{data.answer}</p>\r\n                )}\r\n                {Array.isArray(data.answer) &&\r\n                  data.answer.map((text) => (\r\n                    <p className=\"m-0\" key={text}>\r\n                      {text}\r\n                    </p>\r\n                  ))}\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport OffcanvasBSContainer from \"../../../../PopUp/OffcanvasBS/OffcanvasBSContainer/OffcanvasBSContainer\";\r\nimport OffcanvasBSHeader from \"../../../../PopUp/OffcanvasBS/OffcanvasBSHeader/OffcanvasBSHeader\";\r\nimport OffcanvasBSBody from \"../../../../PopUp/OffcanvasBS/OffcanvasBSBody/OffcanvasBSBody\";\r\nimport \"./Questionnaire.scss\";\r\nimport Greeting from \"./Greeting/Greeting\";\r\nimport {\r\n  answerQuestionAPI,\r\n  getQuestionsAPI,\r\n} from \"../../../../../Service/user\";\r\nimport UserInput from \"./UserInput/UserInput\";\r\nimport CurrentQuestion from \"./CurrentQuestion/CurrentQuestion\";\r\nimport Categories from \"./Categories/Categories\";\r\nimport History from \"./History/History\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateLoggedInUser } from \"../../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../../Shared/Spinner/SpinnerBS\";\r\n\r\nexport const OPTIONS = {\r\n  company: { text: \"Company\", endpoint: \"Startup\" },\r\n  personal: { text: \"Personal\", endpoint: \"Personal\" },\r\n};\r\n\r\nexport default function Questionnaire({\r\n  countData,\r\n  setCountData,\r\n  handleRefetch,\r\n  isInvestor,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [question, setQuestion] = useState(null);\r\n  // State for company and personal soptions\r\n  const [option, setOption] = useState(null);\r\n  const [alert, setAlert] = useState(null);\r\n  // State for history\r\n  const [history, setHistory] = useState([]);\r\n  // State for loading\r\n  const [loading, setLoading] = useState(false);\r\n  // State for presenting categories\r\n  const [showCategories, setShowCategories] = useState(false);\r\n\r\n  //   Fetch Questions\r\n  async function fetchQuestion(query) {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const { data, message } = await getQuestionsAPI(query);\r\n      console.log(data, message);\r\n      setQuestion(data);\r\n      setLoading(false);\r\n\r\n      if (!data) {\r\n        setAlert(message);\r\n        setTimeout(() => {\r\n          setAlert(null);\r\n          setOption(null);\r\n        }, 2000);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error fetching Question:\", error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  //   handle Option\r\n  function handleOptionSelect(e, option) {\r\n    // console.log(\"selected categry\", option);\r\n    let endpoint = \"Personal\";\r\n    if (option.text === \"Company\") {\r\n      endpoint = isInvestor ? \"Investor\" : \"Startup\"\r\n    }\r\n    setOption(option.text);\r\n    fetchQuestion(endpoint);\r\n    setShowCategories(false);\r\n  }\r\n\r\n  // Handle answer change\r\n  function handleAnswerChange(e) {\r\n    // Auto resize text area\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + \"px\";\r\n\r\n    // Set Answer\r\n    setAnswer(e.target.value);\r\n  }\r\n\r\n  // Handle Answer Select\r\n  function handleAnswerSelect(e, option) {\r\n    if (question.isMultipleOption) {\r\n      if (option === \"None\") {\r\n        // If \"None\" is selected, clear all other options\r\n        setAnswer([\"None\"]);\r\n      } else {\r\n        if (answer.includes(\"None\")) {\r\n          // If \"None\" is already selected, remove it \r\n          setAnswer([option]);\r\n        } else if (answer.includes(option)) {\r\n          // Deselect answer\r\n          let index = answer.indexOf(option);\r\n          setAnswer((prev) => {\r\n            let copy = [...prev];\r\n            copy.splice(index, 1);\r\n            return [...copy];\r\n          });\r\n        } else {\r\n          // Set Answer\r\n          setAnswer((prev) => {\r\n            let copy = [...prev];\r\n            copy.push(option);\r\n            return [...copy];\r\n          });\r\n        }\r\n      }\r\n    } else {\r\n      // For single-option questions\r\n      setAnswer(option);\r\n    }\r\n  }\r\n\r\n  // handle Post Answer\r\n  async function handlePostAnswer(e) {\r\n    e.preventDefault();\r\n    console.log(\"answer is\", answer);\r\n\r\n    if (!answer) {\r\n      return;\r\n    }\r\n\r\n    // set loading\r\n    setLoading(true);\r\n\r\n    const answerObject = {\r\n      questionId: question._id,\r\n      answer: answer,\r\n    };\r\n\r\n    try {\r\n      const { data } = await answerQuestionAPI(answerObject);\r\n      console.log(\"Response from answerPost\", data);\r\n\r\n      // update history\r\n      setHistory((prev) => {\r\n        let copy = [...prev];\r\n        copy.push({ question: question.question, ...answerObject });\r\n        return [...copy];\r\n      });\r\n\r\n      // If personal, update loggedInUser\r\n      if (question.schema === \"user\") {\r\n        let fieldName = question.fieldName;\r\n        dispatch(updateLoggedInUser({ [fieldName]: answer }));\r\n      }\r\n\r\n      // Clear answer\r\n      setAnswer(\"\");\r\n      // Update count\r\n      setCountData((prev) => {\r\n        if (question.type === \"Startup\") {\r\n          return {\r\n            ...prev,\r\n            companyQuestionCount: countData.companyQuestionCount - 1,\r\n          };\r\n        }\r\n\r\n        if (question.type === \"Personal\") {\r\n          return {\r\n            ...prev,\r\n            personalQuestionCount: countData.personalQuestionCount - 1,\r\n          };\r\n        }\r\n      });\r\n      // fetch next Question\r\n      fetchQuestion(question.type);\r\n    } catch (error) {\r\n      console.error(\"Error posting Question:\", error);\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  // Handle Back to categories\r\n  function handleBackToCategories() {\r\n    setQuestion(null);\r\n    setOption(null);\r\n    setAnswer(\"\");\r\n    setShowCategories(true);\r\n  }\r\n\r\n  //   clear States\r\n  function clearStates() {\r\n    setAnswer(\"\");\r\n    setQuestion(null);\r\n    setOption(null);\r\n    setAlert(null);\r\n    setHistory([]);\r\n    setShowCategories(false);\r\n    handleRefetch();\r\n  }\r\n\r\n  return (\r\n    <div className=\"questionnaire_wrapper\" theme={isInvestor ? \"investor\" : \"startup\"}>\r\n      <OffcanvasBSContainer id=\"questionnaireOffCanvas\">\r\n        <OffcanvasBSHeader onClose={clearStates} />\r\n        <OffcanvasBSBody bodyClass=\"p-0\">\r\n          <div className=\"questionnaire_body_wrapper h-100 pb-4 d-flex flex-column justify-content-end gap-3\">\r\n            <div\r\n              className=\"d-flex flex-column-reverse gap-3 overflow-y-auto chat_col\"\r\n              style={{ scrollbarGutter: \"stable\", overflowAnchor: \"none\" }}\r\n            >\r\n              {/* Alert */}\r\n              {alert && (\r\n                <div className=\"chat_box\">\r\n                  <em className=\"\">{alert}</em>\r\n                </div>\r\n              )}\r\n\r\n              {showCategories && (\r\n                <div className=\"d-flex flex-column gap-3\">\r\n                  <Categories\r\n                    handleOptionSelect={handleOptionSelect}\r\n                    option={option}\r\n                    countData={countData}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* Current Question */}\r\n              {!loading ? (\r\n                <CurrentQuestion\r\n                  question={question}\r\n                  answer={answer}\r\n                  handleAnswerSelect={handleAnswerSelect}\r\n                  handleBackToCategories={handleBackToCategories}\r\n                  loading={loading}\r\n                  handlePostAnswer={handlePostAnswer}\r\n                />\r\n              ) : (\r\n                <div className=\"d-flex justify-content-center align-items-center py-3\">\r\n                  <SpinnerBS\r\n                    spinnerClass=\"spinner-grow\"\r\n                    colorClass={\"color_main\"}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* History */}\r\n              <div className=\"d-flex flex-column gap-3\">\r\n                <History history={history} />\r\n              </div>\r\n\r\n              <div className=\" d-flex flex-column justify-content-end gap-3 \">\r\n                <Greeting />\r\n                {/* options */}\r\n                <Categories\r\n                  handleOptionSelect={handleOptionSelect}\r\n                  option={option}\r\n                  countData={countData}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* User Input */}\r\n            <UserInput\r\n              answer={answer}\r\n              question={question}\r\n              handleAnswerChange={handleAnswerChange}\r\n              handlePostAnswer={handlePostAnswer}\r\n            />\r\n          </div>\r\n        </OffcanvasBSBody>\r\n      </OffcanvasBSContainer>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getQuestionCountAPI } from \"../../../../../Service/user\";\r\nimport Questionnaire from \"./Questionnaire\";\r\n\r\nexport default function MissingDetails({ isInvestor = false }) {\r\n  // State for question count\r\n  const [countData, setCountData] = useState(null);\r\n  const [refetch, setRefetch] = useState(false);\r\n\r\n  // Fetch Questions count\r\n  useEffect(() => {\r\n    async function fetchQuestionsCount() {\r\n      try {\r\n        const { data } = await getQuestionCountAPI();\r\n        // console.log(\"count\", data);\r\n        setCountData(data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching count:\", error);\r\n        throw error;\r\n      }\r\n    }\r\n\r\n    fetchQuestionsCount();\r\n  }, [refetch]);\r\n\r\n  // Handle Refetch count\r\n  function handleRefetch() {\r\n    setRefetch(!refetch);\r\n  }\r\n\r\n  return (\r\n    <div className=\" rounded-4 shadow-sm lh-1 d-flex flex-column\">\r\n      {countData?.total ? (\r\n        <button\r\n          id=\"missingDetails\"\r\n          className={`btn rounded-4 fs-5 py-3 ${\r\n            isInvestor ? \"border\" : \"border-0\"\r\n          } `}\r\n          data-bs-toggle=\"offcanvas\"\r\n          data-bs-target=\"#questionnaireOffCanvas\"\r\n          aria-controls=\"offcanvasTop\"\r\n          style={{\r\n            color: isInvestor ? \"#000\" : \"#fd5901\",\r\n            backgroundColor: isInvestor ? \"#d3f36b\" : \"var(--white-to-grey)\",\r\n          }}\r\n        >\r\n          Add missing details {countData && `(${countData.total})`}\r\n        </button>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {/* OffCanvas for questionnaire */}\r\n      <Questionnaire\r\n        countData={countData}\r\n        setCountData={setCountData}\r\n        handleRefetch={handleRefetch}\r\n        isInvestor={isInvestor}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserAPI } from \"../../../../../Service/user\";\r\nimport {\r\n  loginSuccess,\r\n  selectIsInvestor,\r\n  selectUserBio,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../../Shared/Spinner/SpinnerBS\";\r\nimport InvestorAfterSuccessPopUp from \"../../../../PopUp/InvestorAfterSuccessPopUp/InvestorAfterSuccessPopUp\";\r\nimport ErrorPopUp from \"../../../../PopUp/ErrorPopUp/ErrorPopUp\";\r\nimport AfterSuccessPopUp from \"../../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\n\r\nexport default function UserBio({ canEdit = true, bioText = \"\" }) {\r\n  // Fetch from store\r\n  const userBio = useSelector(selectUserBio);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const dispatch = useDispatch();\r\n\r\n  // States for Bio\r\n  const [isBioEditable, setIsBioEditable] = useState(false);\r\n  const [bioContent, setBioContent] = useState(userBio || bioText || \"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // Submit Bio\r\n  const submitBioHandler = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const {\r\n        data: { data },\r\n      } = await updateUserAPI({ bio: bioContent });\r\n      dispatch(loginSuccess(data));\r\n      setIsBioEditable(!isBioEditable);\r\n      setAlert({ success: \"Changes Saved!\" });\r\n    } catch (error) {\r\n      console.error(\"Error saving bio:\", error);\r\n      setAlert({ error: \"Error saving Bio! Please try again.\" });\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`box personal_information ${canEdit ? \"pb-4\" : \"\"} ${\r\n          isInvestor ? \"rounded-4 border shadow-sm\" : \"\"\r\n        } `}\r\n        id=\"userBio\"\r\n      >\r\n        <div className=\"personal_information_header\">\r\n          <h2 className=\"typography\">Bio</h2>\r\n          {/* Edit button */}\r\n          {canEdit && (\r\n            <span className=\"ms-auto d-flex align-items-center gap-2\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn\"\r\n                onClick={() => {\r\n                  setBioContent(userBio);\r\n                  setIsBioEditable(!isBioEditable);\r\n                }}\r\n                disabled={loading}\r\n              >\r\n                {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n                <CiEdit />\r\n              </button>\r\n              {isBioEditable && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn ms-2 d-flex justify-content-center align-items-center gap-2\"\r\n                  onClick={() => submitBioHandler()}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? (\r\n                    <SpinnerBS spinnerSizeClass=\"spinner-border-sm\" />\r\n                  ) : (\r\n                    <>\r\n                      <span>Save</span> <CiSaveUp2 />\r\n                    </>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <div className=\"designation_info\">\r\n            {isBioEditable ? (\r\n              <textarea\r\n                value={bioContent}\r\n                name=\"bio\"\r\n                onChange={(e) => setBioContent(e.target.value)}\r\n                className=\"profile_edit_field\"\r\n                rows={5}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <p className=\"small_typo\">\r\n                {bioContent || \"Click on edit to add bio\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-12 mt-2 designation_see_more\">\r\n      <Link to={\"\"}>See more</Link>\r\n    </div> */}\r\n      </div>\r\n      {alert?.success && isInvestor && (\r\n        <InvestorAfterSuccessPopUp\r\n          successText={alert.success}\r\n          onClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      {alert?.success && !isInvestor && (\r\n        <AfterSuccessPopUp\r\n          successText={alert.success}\r\n          onClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      {alert?.error && (\r\n        <ErrorPopUp message={alert.error} onClose={() => setAlert(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ProfessionalInfo.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\nimport {\r\n  postInvestorData,\r\n  postStartUpData,\r\n  updateUserAPI,\r\n} from \"../../../../Service/user\";\r\nimport {\r\n  selectCompanyName,\r\n  selectIsInvestor,\r\n  loginSuccess,\r\n  updateUserCompany,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport ProfessionalInfoDisplay from \"./ProfessionalInfoDisplay\";\r\n\r\nexport default function ProfessionalInfo({ theme }) {\r\n  // Fetch Global State\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const companyName = useSelector(selectCompanyName);\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(\"companyName\", companyName);\r\n\r\n  // State for Professional Data\r\n  const [professionalData, setProfessionalData] = useState({\r\n    designation: loggedInUser?.designation || \"\",\r\n    education: loggedInUser?.education || \"\",\r\n    experience: loggedInUser?.experience || \"\",\r\n    profilePicture: loggedInUser.profilePicture || \"\",\r\n    fullName: loggedInUser?.firstName + \" \" + loggedInUser?.lastName || \"\",\r\n    company: companyName,\r\n    location: loggedInUser?.location || \"Bangalore, India\",\r\n  });\r\n\r\n  // State for isEditing\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Fetch professional data\r\n  useEffect(() => {\r\n    if (isInvestor) {\r\n      setProfessionalData((prev) => ({ ...prev, company: companyName }));\r\n    } else {\r\n      setProfessionalData((prev) => ({ ...prev, company: companyName }));\r\n    }\r\n  }, [companyName, isInvestor]);\r\n\r\n  // Handle Text Change\r\n  function handleTextChange(e) {\r\n    let { name, value } = e.target;\r\n    setProfessionalData((prev) => {\r\n      return { ...prev, [name]: value };\r\n    });\r\n  }\r\n\r\n  // Handle File change\r\n  function handleFileChange(e) {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  }\r\n\r\n  // Handle Submit\r\n  async function handleSubmit(e) {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n\r\n    let editedData = {\r\n      designation: professionalData.designation,\r\n      education: professionalData.education,\r\n      experience: professionalData.experience,\r\n    };\r\n\r\n    try {\r\n      if (selectedFile) {\r\n        const profilePicture = await getBase64(selectedFile);\r\n        editedData = { ...editedData, profilePicture: profilePicture };\r\n      }\r\n      //   console.log(\"from Submit\", editedData, editedCompanyName);\r\n      const {\r\n        data: { data },\r\n      } = await updateUserAPI(editedData);\r\n      console.log(\"data updateUserAPI\", data);\r\n      // Set new loggedInUser data\r\n      dispatch(loginSuccess(data));\r\n      // Set local state\r\n      setProfessionalData((prev) => ({\r\n        ...prev,\r\n        designation: data?.designation,\r\n        education: data?.education,\r\n        experience: data?.experience,\r\n        profilePicture: data?.profilePicture,\r\n        fullName: data?.firstName + \" \" + data?.lastName,\r\n        location: data?.location,\r\n      }));\r\n\r\n      if (isInvestor) {\r\n        let editedCompanyName = {\r\n          founderId: loggedInUser._id,\r\n          companyName: professionalData.company,\r\n        };\r\n        const { data } = await postInvestorData(editedCompanyName);\r\n        // console.log(\"post Investor\", data);\r\n        dispatch(updateUserCompany({ companyName: data.companyName }));\r\n      } else {\r\n        let editedCompanyName = {\r\n          founderId: loggedInUser._id,\r\n          company: professionalData.company,\r\n        };\r\n        const { data } = await postStartUpData(editedCompanyName);\r\n        // console.log(\"post startup\", data.company);\r\n        dispatch(updateUserCompany({ company: data.company }));\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setIsEditing(false);\r\n      setLoading(false);\r\n      setSelectedFile(null);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <section\r\n      className={`professional_info_section d-flex flex-column gap-3 p-2 px-md-4 py-4  shadow-sm ${\r\n        theme === \"investor\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      }`}\r\n    >\r\n      <ProfessionalInfoDisplay\r\n        theme={theme}\r\n        professionalData={professionalData}\r\n        isEditing={isEditing}\r\n        setIsEditing={setIsEditing}\r\n        selectedFile={selectedFile}\r\n        handleTextChange={handleTextChange}\r\n        handleFileChange={handleFileChange}\r\n        handleSubmit={handleSubmit}\r\n        loading={loading}\r\n      />\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport DefaultAvatar from \"../../../../Images/Chat/default-user-avatar.webp\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport IconCloudUpload from \"../../SvgIcons/IconCloudUpload\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCompanyFounderId,\r\n  selectLoggedInUserId,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\n\r\nexport default function ProfessionalInfoDisplay({\r\n  professionalData,\r\n  theme,\r\n  isEditing,\r\n  setIsEditing,\r\n  handleSubmit,\r\n  selectedFile,\r\n  handleTextChange,\r\n  handleFileChange,\r\n  canEdit = true,\r\n  loading,\r\n}) {\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const loggedinUserId = useSelector(selectLoggedInUserId);\r\n\r\n  return (\r\n    <>\r\n      {/* header */}\r\n      <header className=\"professional_info_display p-0 pb-4 border-bottom d-flex flex-column gap-3 flex-md-row align-items-center justify-content-between\">\r\n        {/* profile picture and name */}\r\n        <div className=\"d-flex gap-4\">\r\n          <img\r\n            src={professionalData.profilePicture || DefaultAvatar}\r\n            alt={professionalData.fullName}\r\n            style={{ width: \"90px\", height: \"90px\", objectFit: \"cover\" }}\r\n            className=\"rounded-circle\"\r\n          />\r\n          <div className=\"d-flex flex-column justify-content-center gap-1 \">\r\n            <h5 className=\"m-0 fw-semibold\">{professionalData.fullName}</h5>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n            <p className=\"m-0\">{professionalData.location}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit button */}\r\n        {canEdit && (\r\n          <span className=\"edit_btn d-flex align-self-end align-md-self-start \">\r\n            <span className=\" ms-auto d-flex flex-row gap-2\">\r\n              <button className=\" btn\" onClick={() => setIsEditing(!isEditing)}>\r\n                {isEditing ? \"Cancel\" : \"Edit\"}\r\n                <CiEdit />\r\n              </button>\r\n              {isEditing && (\r\n                <button className=\"btn ms-2\" onClick={handleSubmit}>\r\n                  {loading ? (\r\n                    <SpinnerBS spinnerSizeClass=\"spinner-border-sm\" />\r\n                  ) : (\r\n                    <>\r\n                      Save <CiSaveUp2 />\r\n                    </>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </span>\r\n          </span>\r\n        )}\r\n        {/* Edit button end */}\r\n      </header>\r\n\r\n      {/* Info text */}\r\n      {!isEditing && (\r\n        <div className=\"info_text d-flex flex-column gap-3\">\r\n          {/* Company */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Company</h6>\r\n            <p className=\"m-0\">{professionalData.company}</p>\r\n          </div>\r\n\r\n          {/* Designation */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Designation</h6>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n          </div>\r\n\r\n          {/* Education */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Education</h6>\r\n            <p className=\"m-0\">{professionalData.education}</p>\r\n          </div>\r\n\r\n          {/* Experience */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-start\">\r\n            <h6 className=\"m-0\">Experience</h6>\r\n            <p className=\"m-0\">{professionalData.experience}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit form */}\r\n      {isEditing && (\r\n        <form className=\"\">\r\n          {/* profilePicture*/}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Profile Picture</legend>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              name=\"profilePicture\"\r\n              id=\"profilePicture\"\r\n              //   value={professionalData.company}\r\n              onChange={handleFileChange}\r\n            />\r\n            <div className=\"professional_form_input d-flex align-items-center gap-4\">\r\n              <label htmlFor=\"profilePicture\" style={{ cursor: \"pointer\" }}>\r\n                <IconCloudUpload\r\n                  color={theme === \"startup\" ? \"#fd5901\" : \"#b2cc5d\"}\r\n                  height=\"1.75rem\"\r\n                  width=\"1.75rem\"\r\n                />\r\n              </label>\r\n              <p className=\"m-0 fs-6 fw-light\">{selectedFile?.name}</p>\r\n            </div>\r\n          </fieldset>\r\n\r\n          {/* Company */}\r\n          {companyFounderId === loggedinUserId && isEditing && (\r\n            <fieldset className={` ${theme} `}>\r\n              <legend className=\"px-2\">Company</legend>\r\n              <input\r\n                type=\"text\"\r\n                className=\"professional_form_input\"\r\n                name=\"company\"\r\n                value={professionalData.company}\r\n                onChange={handleTextChange}\r\n              />\r\n            </fieldset>\r\n          )}\r\n\r\n          {/* Designation */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Designation</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"designation\"\r\n              value={professionalData.designation}\r\n              onChange={handleTextChange}\r\n            />\r\n          </fieldset>\r\n\r\n          {/* Education */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Education</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"education\"\r\n              value={professionalData.education}\r\n              onChange={handleTextChange}\r\n            />\r\n          </fieldset>\r\n\r\n          {/* Experience */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Experience</legend>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"experience\"\r\n              value={professionalData.experience}\r\n              onChange={handleTextChange}\r\n              rows={5}\r\n            />\r\n          </fieldset>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// icon:cloud-upload | Bootstrap https://icons.getbootstrap.com/ | Bootstrap\r\nimport * as React from \"react\";\r\n\r\nfunction IconCloudUpload(props) {\r\n  return (\r\n    <svg\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"currentColor\"\r\n        d=\"M4.406 1.342A5.53 5.53 0 018 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 010-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 00-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 010 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"black\"\r\n        d=\"M7.646 4.146a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L8.5 5.707V14.5a.5.5 0 01-1 0V5.707L5.354 7.854a.5.5 0 11-.708-.708l3-3z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconCloudUpload;\r\n"],"names":["Greeting","_jsxs","_Fragment","children","_jsx","className","style","height","width","src","alt","objectFit","UserInput","_ref","_question$options","_question$options2","question","answer","handleAnswerChange","handlePostAnswer","type","name","id","placeholder","value","options","length","onChange","autoFocus","rows","disabled","onClick","IconSend","marginLeft","props","_objectSpread","baseProfile","viewBox","fill","d","CurrentQuestion","handleAnswerSelect","handleBackToCategories","loading","map","option","concat","Array","isArray","includes","e","IconTick","SpinnerBS","spinnerClass","colorClass","Categories","handleOptionSelect","countData","OPTIONS","company","text","companyQuestionCount","personal","personalQuestionCount","History","history","data","index","questionId","endpoint","Questionnaire","setCountData","handleRefetch","isInvestor","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","setAnswer","_useState3","_useState4","setQuestion","_useState5","_useState6","setOption","_useState7","_useState8","alert","setAlert","_useState9","_useState10","setHistory","_useState11","_useState12","setLoading","_useState13","_useState14","showCategories","setShowCategories","fetchQuestion","_x","_fetchQuestion","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","query","_yield$getQuestionsAP","message","wrap","_context","prev","next","getQuestionsAPI","sent","console","log","setTimeout","t0","error","stop","_x2","_handlePostAnswer","_callee2","answerObject","_yield$answerQuestion","fieldName","_context2","preventDefault","abrupt","_id","answerQuestionAPI","copy","_toConsumableArray","push","schema","updateLoggedInUser","_defineProperty","theme","OffcanvasBSContainer","OffcanvasBSHeader","onClose","OffcanvasBSBody","bodyClass","scrollbarGutter","overflowAnchor","isMultipleOption","indexOf","splice","target","scrollHeight","MissingDetails","_ref$isInvestor","refetch","setRefetch","useEffect","_fetchQuestionsCount","_yield$getQuestionCou","getQuestionCountAPI","fetchQuestionsCount","total","color","backgroundColor","UserBio","_ref$canEdit","canEdit","_ref$bioText","bioText","userBio","useSelector","selectUserBio","selectIsInvestor","isBioEditable","setIsBioEditable","bioContent","setBioContent","submitBioHandler","_ref2","_yield$updateUserAPI","updateUserAPI","bio","loginSuccess","success","finish","CiEdit","spinnerSizeClass","CiSaveUp2","InvestorAfterSuccessPopUp","successText","AfterSuccessPopUp","ErrorPopUp","ProfessionalInfo","loggedInUser","state","user","companyName","selectCompanyName","designation","education","experience","profilePicture","fullName","firstName","lastName","location","professionalData","setProfessionalData","isEditing","setIsEditing","selectedFile","setSelectedFile","_handleSubmit","editedData","editedCompanyName","_yield$postInvestorDa","_data","_editedCompanyName","_yield$postStartUpDat","_data2","getBase64","founderId","postInvestorData","updateUserCompany","postStartUpData","ProfessionalInfoDisplay","handleTextChange","_e$target","handleFileChange","file","files","handleSubmit","companyFounderId","selectCompanyFounderId","loggedinUserId","selectLoggedInUserId","DefaultAvatar","accept","htmlFor","cursor","IconCloudUpload","fillRule"],"sourceRoot":""}