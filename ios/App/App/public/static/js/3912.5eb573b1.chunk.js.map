{"version":3,"file":"static/js/3912.5eb573b1.chunk.js","mappings":"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","sources":["components/Investor/CompanyProfilePageComponents/CompanyDescription/CompanyDescription.jsx","components/Investor/CompanyProfilePageComponents/CompanyProfileForm.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeamCard.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/AddTeamMemberModal.jsx","components/Investor/CompanyProfilePageComponents/CoreTeam/CoreTeam.jsx"],"sourcesContent":["import React from \"react\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nexport default function CompanyDescription({\r\n  companyData,\r\n  companyDescription,\r\n  setCompanyDescription,\r\n  isBioEditable,\r\n  setIsBioEditable,\r\n  submitBioHandler,\r\n  handleDescriptionChange,\r\n  loading,\r\n}) {\r\n  // fetch isInvestor\r\n  const { isInvestor } = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  function handleResize(e) {\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = e.target.scrollHeight + 2 + \"px\";\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`paragraph__component bg-white py-5 px-3 px-md-5 d-flex flex-column gap-4  ${\r\n        isInvestor === \"true\" ? \"rounded-4 border\" : \"rounded-4\"\r\n      } `}\r\n    >\r\n      <div className=\"d-flex flex-column-reverse flex-sm-row align-items-sm-center justify-content-between gap-3 gap-md-0\">\r\n        <h2>Company Description</h2>\r\n        <span className=\"ms-auto\">\r\n          <div className=\"d-flex gap-2 justify-content-end flex-wrap flex-md-nowrap\">\r\n            <button\r\n              type=\"button\"\r\n              className={`align-self-end btn-base ${\r\n                isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n              } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n              onClick={() => {\r\n                if (isBioEditable) {\r\n                  setCompanyDescription(companyData.description);\r\n                }\r\n                setIsBioEditable(!isBioEditable);\r\n              }}\r\n            >\r\n              {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n              {/* <CiEdit /> */}\r\n            </button>\r\n            {isBioEditable && (\r\n              <button\r\n                className={`align-self-end btn-base ${\r\n                  isInvestor === \"true\" ? \"investor\" : \"startup\"\r\n                } ${isBioEditable ? \"btn-sm\" : \"\"}`}\r\n                onClick={(e) => submitBioHandler(e)}\r\n              >\r\n                {loading ? (\r\n                  <SpinnerBS\r\n                    colorClass={`${\r\n                      isInvestor === \"true\" ? \"text-dark\" : \"text-white\"\r\n                    }`}\r\n                    spinnerSizeClass=\"spinner-border-sm\"\r\n                  />\r\n                ) : (\r\n                  \"Save\"\r\n                )}\r\n                {/* <CiSaveUp2 /> */}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </span>\r\n      </div>\r\n      {/* <p>\r\n              A little about myself. “Dejection is a sign of failure but it\r\n              becomes the cause of success”. I wrote this when I was 16 years old\r\n              and that’s exactly when I idealised the reality of life. In this\r\n              current world, success is defined in many ways, some of which\r\n              include money, fame and power. I believe that success is just the\r\n              beginning of a new problem. Every step of our lives we work hard to\r\n              solve an issue and every time we end up with a new problem.\r\n            </p> */}\r\n      {isBioEditable ? (\r\n        <textarea\r\n          value={companyDescription}\r\n          name=\"bio\"\r\n          onChange={handleDescriptionChange}\r\n          className=\"description_textarea p-2\"\r\n          onFocus={handleResize}\r\n          autoFocus\r\n          // rows={4}\r\n        />\r\n      ) : (\r\n        <p className=\"small_typo\">\r\n          {companyDescription || \"Click on edit to add company description\"}\r\n        </p>\r\n      )}\r\n      {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfileForm.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../Service/user\";\r\nimport { getBase64 } from \"../../../utils/getBase64\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\n// import { Response } from \"aws-sdk\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../Store/features/user/userSlice\";\r\n\r\nconst LOCATIONS = [\r\n  \"Select Location\",\r\n  \"New Delhi\",\r\n  \"Gurgaon\",\r\n  \"Mumbai\",\r\n  \"Pune\",\r\n  \"Hyderabad\",\r\n  \"Chennai\",\r\n  \"Bengaluru\",\r\n  \"Mangalore\",\r\n  \"Kochi\",\r\n  \"Lucknow\",\r\n  \"Kolkata\",\r\n  \"Others\",\r\n];\r\n\r\nconst SECTORS = [\r\n  \"Select Sector\",\r\n  \"FMCG\",\r\n  \"Restaurants\",\r\n  \"Education\",\r\n  \"Tourism\",\r\n  \"Automobile\",\r\n  \"Textile\",\r\n  \"Chemicals\",\r\n  \"Telecommunications\",\r\n  \"Oil and Gas\",\r\n  \"Renewable Energy\",\r\n  \"Investment Banking and Venture Capital\",\r\n  \"NBFC\",\r\n  \"Biotechnology\",\r\n  \"Software Development Services\",\r\n  \"Computer and Information Technology\",\r\n  \"Aerospace\",\r\n  \"Sales and Marketing\",\r\n];\r\n\r\nexport default function CompanyProfileForm({\r\n  companyData,\r\n  investor = false,\r\n  isSaveAll,\r\n  handleShowPopup,\r\n}) {\r\n  // States for form\r\n  const [formData, setFormData] = useState(\"\");\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [othersClicked, setOthersClicked] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  // State for loading\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isSaveAll) {\r\n      const event = new Event(\"submit\", { cancelable: true });\r\n      handleSubmit(event);\r\n    }\r\n  }, [isSaveAll]);\r\n\r\n  useEffect(() => {\r\n    if (investor) {\r\n      setFormData({\r\n        founderId: companyData.founderId || loggedInUser._id,\r\n        company: companyData.companyName || \"\",\r\n        tagline: companyData.tagline || \"\",\r\n        location: companyData.location || LOCATIONS[0],\r\n        startedAtDate: companyData.startedAtDate || \"\",\r\n        industryType: companyData.industry || \"\",\r\n        sector: companyData.sector || SECTORS[0],\r\n        noOfEmployees: companyData.noOfEmployees || \"\",\r\n        vision: companyData.vision || \"\",\r\n        mission: companyData.mission || \"\",\r\n        socialLinks: companyData.socialLinks || \"\",\r\n        keyFocus: companyData.keyFocus || \"\",\r\n      });\r\n    } else {\r\n      setFormData(companyData || {});\r\n    }\r\n  }, [companyData, investor]);\r\n\r\n  // Handle input change\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"siteUrl\") {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        socialLinks: {\r\n          ...prevData.socialLinks,\r\n          website: value,\r\n        },\r\n      }));\r\n    } else {\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        [name]: value,\r\n      }));\r\n    }\r\n  };\r\n\r\n  // Handle File Input change\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file);\r\n  };\r\n\r\n  // Handle Location select\r\n  const handleLocationSelect = (e, location) => {\r\n    if (location === LOCATIONS[0]) return;\r\n    if (location === \"Others\") {\r\n      setOthersClicked(true);\r\n    }\r\n    setFormData((prevData) => ({ ...prevData, location: location }));\r\n  };\r\n\r\n  // Handle Dropdown Blur\r\n  const handleDropdownBlur = () => {\r\n    setOthersClicked(false);\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      location:\r\n        (formData.location !== \"Others\" && formData.location) ||\r\n        companyData.location,\r\n    }));\r\n  };\r\n\r\n  // Handle Sector Select\r\n  const handleSectorSelect = (e, sector) => {\r\n    if (sector === SECTORS[0]) return;\r\n    setFormData((prevData) => ({ ...prevData, sector: sector }));\r\n  };\r\n\r\n  // handle form submit\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // set loading\r\n    setLoading(true);\r\n\r\n    try {\r\n      if (selectedFile) {\r\n        const logo = await getBase64(selectedFile);\r\n        formData.logo = logo;\r\n      }\r\n      if (investor) {\r\n        const response = await postInvestorData({\r\n          ...formData,\r\n          companyName: formData.company,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        console.log(response);\r\n        const user = {\r\n          ...loggedInUser,\r\n          investor: response.data._id,\r\n        };\r\n        dispatch(loginSuccess(user));\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      } else {\r\n        const response = await postStartUpData({\r\n          ...formData,\r\n          founderId: companyData.founderId || loggedInUser._id,\r\n        });\r\n        dispatch(setUserCompany(response.data));\r\n        // Show success popup\r\n        setLoading(false);\r\n        handleShowPopup({ success: true });\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      // Show error popup\r\n      setLoading(false);\r\n      handleShowPopup({ error: true });\r\n    }\r\n  };\r\n\r\n  // console.log(\"companyData\", companyData.sector);\r\n  return (\r\n    <div className=\"profile__form\">\r\n      <form action=\"\" className=\"\" onSubmit={handleSubmit}>\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Profile Picture</legend>\r\n          <input\r\n            type=\"file\"\r\n            name=\"companyLogo\"\r\n            id=\"companyLogo\"\r\n            className=\" visually-hidden\"\r\n            value={\"\"}\r\n            accept=\"image/*\"\r\n            onChange={handleFileInputChange}\r\n          />\r\n          <div className=\"profile_form_input d-flex align-items-center gap-4\">\r\n            <label htmlFor=\"companyLogo\" style={{ cursor: \"pointer\" }}>\r\n              Upload Picture\r\n            </label>\r\n            <p className=\"m-0 fs-6 fw-light\">{selectedFile?.name}</p>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Name</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"company\"\r\n            id=\"company\"\r\n            className=\"profile_form_input\"\r\n            value={formData.company || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Company Tagline</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"tagline\"\r\n            id=\"tagline\"\r\n            className=\"profile_form_input\"\r\n            value={formData.tagline || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Location</legend>\r\n          {othersClicked && (\r\n            <input\r\n              type=\"text\"\r\n              name=\"location\"\r\n              id=\"location\"\r\n              className=\"profile_form_input\"\r\n              placeholder={formData.location + \"...\"}\r\n              // value={formData.location || \"\"}\r\n              onChange={handleInputChange}\r\n              onBlur={handleDropdownBlur}\r\n              autoFocus\r\n            />\r\n          )}\r\n          {/* Location Dropdown */}\r\n          {!othersClicked && (\r\n            <div className=\"dropdown\">\r\n              <button\r\n                className=\"btn profile_form_input w-auto dropdown-toggle\"\r\n                type=\"button\"\r\n                data-bs-toggle=\"dropdown\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                {formData.location}\r\n              </button>\r\n              <ul\r\n                className={`dropdown-menu m-0 p-0 ${investor ? \"investor\" : \"startup\"\r\n                  }`}\r\n              >\r\n                {LOCATIONS.map((location, index) => {\r\n                  return (\r\n                    <li key={`${location}${index}`} className=\"m-0 p-0\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`btn btn-base list-btn w-100 text-start ps-3 ${investor ? \"investor\" : \"startup\"\r\n                          } ${location === formData.location ? \"selected\" : \"\"}`}\r\n                        onClick={(e) => handleLocationSelect(e, location)}\r\n                      >\r\n                        {location}\r\n                      </button>\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </div>\r\n          )}\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Established Date</legend>\r\n          <input\r\n            type=\"date\"\r\n            name=\"startedAtDate\"\r\n            id=\"startedAtDate\"\r\n            className=\"profile_form_input\"\r\n            value={formData.startedAtDate || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Sector</legend>\r\n          {/* <input\r\n            type=\"text\"\r\n            name=\"sector\"\r\n            id=\"sector\"\r\n            className=\"profile_form_input\"\r\n            value={formData.sector || \"\"}\r\n            onChange={handleInputChange}\r\n          /> */}\r\n          {/* sector dropdown */}\r\n          <div className=\"dropdown\">\r\n            <button\r\n              className=\"btn profile_form_input w-auto dropdown-toggle sector_text\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"dropdown\"\r\n              aria-expanded=\"false\"\r\n            >\r\n              {formData.sector}\r\n            </button>\r\n            <ul\r\n              className={`dropdown-menu m-0 p-0 ${investor ? \"investor\" : \"startup\"\r\n                }`}\r\n            >\r\n              {SECTORS.map((sector, index) => {\r\n                return (\r\n                  <li key={`${sector}${index}`} className=\"m-0 p-0\">\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`btn btn-base list-btn text-start ps-3 text-break ${investor ? \"investor\" : \"startup\"\r\n                        } ${sector === formData.sector ? \"selected\" : \"\"}`}\r\n                      onClick={(e) => handleSectorSelect(e, sector)}\r\n                    >\r\n                      <p className=\"m-0\">{sector}</p>\r\n                    </button>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>No. of Employees</legend>\r\n          <input\r\n            type=\"number\"\r\n            name=\"noOfEmployees\"\r\n            id=\"noOfEmployees\"\r\n            max={2000}\r\n            min={0}\r\n            className=\"profile_form_input\"\r\n            value={formData.noOfEmployees || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Website URL</legend>\r\n          <input\r\n            type=\"url\"\r\n            name=\"siteUrl\"\r\n            id=\"siteUrl\"\r\n            className=\"profile_form_input\"\r\n            value={formData.socialLinks?.website || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Vision</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"vision\"\r\n            id=\"vision\"\r\n            className=\"profile_form_input\"\r\n            value={formData.vision || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Mission</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"mission\"\r\n            id=\"mission\"\r\n            className=\"profile_form_input\"\r\n            value={formData.mission || \"\"}\r\n            onChange={handleInputChange}\r\n          />\r\n        </fieldset>\r\n\r\n        <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n          <legend>Key Focus</legend>\r\n          <input\r\n            type=\"text\"\r\n            name=\"keyFocus\"\r\n            id=\"keyFocus\"\r\n            className=\"profile_form_input\"\r\n            value={formData.keyFocus || \"\"}\r\n            onChange={handleInputChange}\r\n            placeholder=\"Finance, AR, VR, AI\"\r\n          />\r\n        </fieldset>\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">TAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"TAM\"\r\n              id=\"TAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.TAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"TAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SAM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SAM\"\r\n              id=\"SAM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SAM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SAM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        {!investor && (\r\n          <fieldset className={investor ? \"investor\" : \"startup\"}>\r\n            <legend className=\"fw-bolder\">SOM</legend>\r\n            <input\r\n              type=\"text\"\r\n              name=\"SOM\"\r\n              id=\"SOM\"\r\n              className=\"profile_form_input fw-bold\"\r\n              value={formData.SOM || \"\"}\r\n              onChange={handleInputChange}\r\n              placeholder=\"SOM\"\r\n            />\r\n          </fieldset>\r\n        )}\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className={`align-self-end btn-base ${investor ? \"investor\" : \"startup\"\r\n            }`}\r\n        >\r\n          {loading ? (\r\n            <SpinnerBS\r\n              colorClass={`${investor ? \"text-dark\" : \"text-white\"}`}\r\n              spinnerSizeClass=\"spinner-border-sm\"\r\n            />\r\n          ) : (\r\n            \"Save\"\r\n          )}\r\n        </button>\r\n      </form>\r\n      {/* {fromSubmit && (\r\n        <AfterSuccessPopup\r\n          // withoutOkButton\r\n          onClose={() => setFromSubmit(!fromSubmit)}\r\n          successText={popupData}\r\n        />\r\n      )}\r\n      {investorfromSubmit && (\r\n        <InvestorAfterSuccessPopup\r\n          // withoutOkButton\r\n          onClose={() => setInvestorfromSubmit(!investorfromSubmit)}\r\n          successText={popupData}\r\n        />\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./CoreTeamCard.scss\";\r\n\r\nexport default function CoreTeamCard({ image, name, designation }) {\r\n  return (\r\n    <div\r\n      className=\"p-4 d-flex flex-column align-items-center gap-3 rounded-4 core_team_card\"\r\n      style={{ backgroundColor: \"#EDEDED\" }}\r\n    >\r\n      <img\r\n        src={image}\r\n        alt={\"name\"}\r\n        style={{ width: \"50px\", height: \"50px\", objectFit: \"cover\" }}\r\n        className=\"rounded-circle\"\r\n        loading=\"lazy\"\r\n      />\r\n      <h5 className=\"text-capitalize text-center text-break\">{name}</h5>\r\n      <p className=\"text-capitalize text-center text-break\">{designation}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { BsFillCameraFill } from \"react-icons/bs\";\r\nimport {\r\n  getStartupByFounderId,\r\n  postStartUpData,\r\n  uploadLogo,\r\n  postInvestorData,\r\n} from \"../../../../Service/user\";\r\nimport { getBase64 } from \"../../../../utils/getBase64\";\r\nimport IconEdit from \"../../SvgIcons/IconEdit\";\r\nimport IconDeleteFill from \"../../SvgIcons/IconDeleteFill\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nexport default function AddTeamMemberModal({\r\n  companyData,\r\n  setCompanyData,\r\n  theme,\r\n}) {\r\n  const initialMemberState = {\r\n    name: \"\",\r\n    designation: \"\",\r\n    image: \"\",\r\n    index: null,\r\n  };\r\n  // State for member\r\n  const [member, setMember] = useState(initialMemberState);\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [imagePreview, setImagePreview] = useState(null);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetch current core team members here\r\n  // const { team: currentTeam } = companyData;\r\n  // console.log(currentTeam);\r\n\r\n  // handleChange\r\n  function handleInputChange(e) {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n\r\n    if (name === \"name\") {\r\n      setMember((prev) => {\r\n        return { ...prev, name: value };\r\n      });\r\n    } else {\r\n      setMember((prev) => {\r\n        return { ...prev, designation: value };\r\n      });\r\n    }\r\n  }\r\n\r\n  // handleFileChange\r\n  const handleFileChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    setSelectedFile(file);\r\n\r\n    // Image preview\r\n    const imageUrl = URL.createObjectURL(file);\r\n    setImagePreview(imageUrl);\r\n  };\r\n\r\n  // handle AddTeamMember\r\n  const handleAddTeamMember = async (e) => {\r\n    setLoading(true);\r\n    e.preventDefault();\r\n    let index = member.index;\r\n    let profileImage = \"\";\r\n\r\n    if (selectedFile) {\r\n      try {\r\n        const logo = await getBase64(selectedFile);\r\n        const { url } = await uploadLogo({ logo });\r\n        profileImage = url;\r\n      } catch (error) {\r\n        console.log(\"Error:\", error);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const updatedTeamMember = {\r\n      name: member.name,\r\n      designation: member.designation,\r\n      image: profileImage,\r\n    };\r\n    console.log(\"Team\", updatedTeamMember);\r\n\r\n    //\r\n    const editedTeamMember = {\r\n      name: member.name,\r\n      designation: member.designation,\r\n      image: profileImage || member.image,\r\n    };\r\n    console.log(\"edited member\", editedTeamMember);\r\n\r\n    try {\r\n      if (isEditing) {\r\n        let editedTeam = [...companyData.team];\r\n        editedTeam[index] = { ...editedTeam[index], ...editedTeamMember };\r\n        console.log(\"editedTeam\", editedTeam);\r\n\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...editedTeam],\r\n        }));\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...editedTeam],\r\n          });\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...editedTeam],\r\n          });\r\n          dispatch(setUserCompany(response.data));\r\n        }\r\n      } else {\r\n        // If not editing then Adding new member\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...previousData.team, updatedTeamMember],\r\n        }));\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...companyData.team, updatedTeamMember],\r\n          });\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...companyData.team, updatedTeamMember],\r\n          });\r\n          console.log(response.data);\r\n          dispatch(setUserCompany(response.data));\r\n\r\n        }\r\n      }\r\n\r\n      setMember(initialMemberState);\r\n      setSelectedFile(null);\r\n      setIsEditing(false);\r\n      setImagePreview(null);\r\n    } catch (error) {\r\n      console.error(\"Error adding team member:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle select click\r\n  function handleSelectClick(e, member, index) {\r\n    setIsEditing(true);\r\n    setMember((prev) => {\r\n      return { ...prev, ...member, index: index };\r\n    });\r\n    setImagePreview(member.image);\r\n  }\r\n\r\n  // Handle Delete click\r\n  async function handleDeleteClick(e, member, index) {\r\n    let response = window.confirm(\r\n      `Are you sure you want to remove \"${member.name}\" from your Team?`\r\n    );\r\n    if (response) {\r\n      const newTeam = [...companyData.team];\r\n      const deleted = newTeam.splice(index, 1);\r\n      // console.log(\"deleted\", deleted, \"newTeam\", newTeam);\r\n\r\n      // Post startupData\r\n      try {\r\n        setCompanyData((previousData) => ({\r\n          ...previousData,\r\n          team: [...newTeam],\r\n        }));\r\n\r\n        if (loggedInUser.isInvestor === \"true\") {\r\n          const response = await postInvestorData({\r\n            founderId: companyData.founderId,\r\n            team: [...newTeam],\r\n          });\r\n\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        } else {\r\n          const response = await postStartUpData({\r\n            founderId: companyData.founderId,\r\n            team: [...newTeam],\r\n          });\r\n\r\n          console.log(response);\r\n          dispatch(setUserCompany(response.data));\r\n        }\r\n\r\n        setMember(initialMemberState);\r\n        setSelectedFile(null);\r\n        setIsEditing(false);\r\n        setImagePreview(null);\r\n      } catch (error) {\r\n        console.error(\"Error adding team member:\", error);\r\n      }\r\n    }\r\n  }\r\n\r\n  // Handle Clear\r\n  function handleClear() {\r\n    setMember(initialMemberState);\r\n    setIsEditing(false);\r\n    setSelectedFile(null);\r\n    setImagePreview(null);\r\n  }\r\n\r\n  // console.log(1111111111111, member);\r\n\r\n  return (\r\n    <div className=\"team_member_modal d-flex flex-column flex-lg-row gap-4 justify-content-around py-3\">\r\n      {/* Edit/Remove modal */}\r\n\r\n      {companyData?.team?.length > 0 ? (\r\n        <div className=\"edit_remove_team d-flex flex-column gap-3 overflow-y-auto py-3\">\r\n          <h5 className=\"m-0 text-center\">Select member to edit</h5>\r\n          <div className=\"d-flex flex-column gap-3\">\r\n            {/* Loop current team member here */}\r\n            {companyData?.team?.map((member, index) => {\r\n              return (\r\n                <div\r\n                  className=\"d-flex align-items-center justify-content-around p-2 bg-light rounded-4\"\r\n                  key={`${member.name}${index}`}\r\n                >\r\n                  <img\r\n                    src={member.image}\r\n                    alt={member.name}\r\n                    style={{\r\n                      width: \"50px\",\r\n                      height: \"50px\",\r\n                      objectFit: \"cover\",\r\n                    }}\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                  <h6 className=\"m-0 flex-grow-1 text-center\" style={{}}>\r\n                    {member.name}\r\n                  </h6>\r\n                  <div className=\"d-flex gap-2\">\r\n                    <button\r\n                      className={`modal_edit_btn ${theme}`}\r\n                      onClick={(e) => handleSelectClick(e, member, index)}\r\n                    >\r\n                      <IconEdit />\r\n                    </button>\r\n                    <button\r\n                      className={`modal_delete_btn ${theme}`}\r\n                      onClick={(e) => handleDeleteClick(e, member, index)}\r\n                    >\r\n                      <IconDeleteFill />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n\r\n\r\n      {/* Add modal */}\r\n      <div className=\"add_team d-flex flex-column gap-3 bg-light rounded-4 shadow-sm py-3\">\r\n        <h5 className=\"m-0 text-center\">Add new Member</h5>\r\n\r\n        <form\r\n          onSubmit={handleAddTeamMember}\r\n          className=\"d-flex flex-column gap-4 p-4\"\r\n        >\r\n          {/* Profile picture input */}\r\n          <div className=\"mx-auto\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              id=\"image\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              onChange={handleFileChange}\r\n              required\r\n            />\r\n            <label htmlFor=\"image\" className={`upload__label ${theme} `}>\r\n              {imagePreview ? (\r\n                <img\r\n                  src={imagePreview}\r\n                  alt=\"Selected\"\r\n                  className=\"preview-image\"\r\n                  style={{\r\n                    width: \"70px\",\r\n                    height: \"70px\",\r\n                    objectFit: \"contain\",\r\n                    borderRadius: \"100px\",\r\n                  }}\r\n                />\r\n              ) : (\r\n                <BsFillCameraFill\r\n                  style={{\r\n                    fontSize: \"1.5rem\",\r\n                    color: `${theme === \"investor\" ? \"black\" : \"rgba(253, 89, 1,1)\"\r\n                      }`,\r\n                  }}\r\n                />\r\n              )}\r\n            </label>\r\n          </div>\r\n          {/* {imagePreview && (\r\n            <div className=\"image-preview\">\r\n              <img src={imagePreview} alt=\"Selected\" />\r\n            </div>\r\n          )} */}\r\n          {/* Name input */}\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              id=\"name\"\r\n              placeholder=\"Enter Name\"\r\n              value={member.name}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          {/* Designation input */}\r\n          <div className=\"\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"designation\"\r\n              id=\"designation\"\r\n              placeholder=\"Enter Designation\"\r\n              value={member.designation}\r\n              className={`modal__input p-2 rounded-2 w-100 ${theme}`}\r\n              onChange={handleInputChange}\r\n              style={{ color: \"black\" }}\r\n              required\r\n            />\r\n          </div>\r\n          <button\r\n            disabled={!member.designation || !member.name}\r\n            className={`orange_button ${theme}`}\r\n            // data-bs-dismiss=\"modal\"\r\n            type=\"submit\"\r\n          >\r\n            {loading ? (\r\n              <SpinnerBS\r\n                colorClass={theme === \"investor\" ? \"text-dark\" : \"text-light\"}\r\n                spinnerSizeClass=\"spinner-border-sm\"\r\n              />\r\n            ) : (\r\n              isEditing ? \"Update\" : \"Add\"\r\n            )}\r\n\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className={`orange_button ${theme}`}\r\n            onClick={handleClear}\r\n          >\r\n            Clear\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CoreTeam.scss\";\r\nimport CoreTeamCard from \"./CoreTeamCard\";\r\nimport RaghuImage from \"../../../../Images/aboutUs/Raghu.jpeg\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  ModalBSBody,\r\n  ModalBSContainer,\r\n  ModalBSFooter,\r\n  ModalBSHeader,\r\n  ModalBsLauncher,\r\n} from \"../../../PopUp/ModalBS\";\r\nimport AddTeamMemberModal from \"./AddTeamMemberModal\";\r\n\r\nexport default function CoreTeam({ companyData, setCompanyData, theme }) {\r\n  const [team, setTeam] = useState(companyData?.team);\r\n  useEffect(() => {\r\n    setTeam(companyData?.team);\r\n  }, [companyData]);\r\n\r\n  return (\r\n    <div className=\" d-flex flex-column gap-4\">\r\n      <div className=\"d-flex align-items-center justify-content-between\">\r\n        <h2>Core Team</h2>\r\n        {/* <Link className=\"see__more align-self-end\">See more</Link> */}\r\n      </div>\r\n      <div\r\n        className={`team__cards__container d-flex align-items-center gap-5 pb-3 ${theme} `}\r\n      >\r\n        {team && team.length > 0 ? (\r\n          team?.map((member, index) => (\r\n            <CoreTeamCard\r\n              key={index}\r\n              image={member.image}\r\n              name={member.name}\r\n              designation={member.designation}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>Click Add to add team members</p>\r\n        )}\r\n      </div>\r\n      {/* If authorised show \"Add\" button that triggers add modal */}\r\n      {\r\n        <div className=\"align-self-end\">\r\n          <ModalBsLauncher\r\n            id={\"AddTeamMemberModal\"}\r\n            className={`add_button d-flex align-items-center gap-1 w-auto ${theme} `}\r\n          >\r\n            <span>Add</span>\r\n          </ModalBsLauncher>\r\n        </div>\r\n      }\r\n      {/* Modal for adding new team member */}\r\n      <div className=\"addCoreTeamModal__container\">\r\n        <ModalBSContainer id={\"AddTeamMemberModal\"} modalXl>\r\n          <ModalBSHeader\r\n            title={\"Add Team Member\"}\r\n            className={`orange__heading ${theme}`}\r\n          />\r\n          <ModalBSBody>\r\n            <AddTeamMemberModal\r\n              setCompanyData={setCompanyData}\r\n              companyData={companyData}\r\n              theme={theme}\r\n            />\r\n          </ModalBSBody>\r\n        </ModalBSContainer>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["CompanyDescription","_ref","companyData","companyDescription","setCompanyDescription","isBioEditable","setIsBioEditable","submitBioHandler","handleDescriptionChange","loading","isInvestor","useSelector","state","user","loggedInUser","useDispatch","_jsxs","className","concat","children","_jsx","type","onClick","description","e","SpinnerBS","colorClass","spinnerSizeClass","value","name","onChange","onFocus","target","style","height","scrollHeight","autoFocus","LOCATIONS","SECTORS","CompanyProfileForm","_formData$socialLinks","_ref$investor","investor","isSaveAll","handleShowPopup","_useState","useState","_useState2","_slicedToArray","formData","setFormData","_useState3","_useState4","selectedFile","setSelectedFile","_useState5","_useState6","othersClicked","setOthersClicked","dispatch","_useState7","_useState8","setLoading","useEffect","event","Event","cancelable","handleSubmit","founderId","_id","company","companyName","tagline","location","startedAtDate","industryType","industry","sector","noOfEmployees","vision","mission","socialLinks","keyFocus","handleInputChange","_e$target","prevData","_objectSpread","website","_defineProperty","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","logo","response","_response","wrap","_context","prev","next","preventDefault","getBase64","sent","postInvestorData","console","log","data","loginSuccess","setUserCompany","success","postStartUpData","t0","error","stop","_x","apply","arguments","action","onSubmit","id","accept","file","files","htmlFor","cursor","placeholder","onBlur","map","index","handleLocationSelect","handleSectorSelect","max","min","TAM","SAM","SOM","CoreTeamCard","image","designation","backgroundColor","src","alt","width","objectFit","AddTeamMemberModal","_companyData$team","_companyData$team2","setCompanyData","theme","initialMemberState","member","setMember","imagePreview","setImagePreview","isEditing","setIsEditing","_useState9","_useState10","handleFileChange","imageUrl","URL","createObjectURL","handleAddTeamMember","_ref3","_callee2","profileImage","_yield$uploadLogo","url","updatedTeamMember","editedTeamMember","editedTeam","_response2","_response3","_context2","uploadLogo","abrupt","_toConsumableArray","team","previousData","t1","finish","_x2","_handleDeleteClick","_callee3","newTeam","_response4","_response5","_context3","window","confirm","splice","length","handleSelectClick","IconEdit","_x3","_x4","_x5","handleDeleteClick","IconDeleteFill","required","borderRadius","BsFillCameraFill","fontSize","color","disabled","CoreTeam","setTeam","ModalBsLauncher","ModalBSContainer","modalXl","ModalBSHeader","title","ModalBSBody"],"sourceRoot":""}