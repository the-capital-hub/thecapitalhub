{"version":3,"file":"static/js/58.7aad9d44.chunk.js","mappings":"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","sources":["components/Investor/ConnectionCard/ConnectionCard.jsx","components/Investor/InvestorGlobalCards/ColoredCards/ColorCard.js","components/Investor/InvestorHome/Components/ColorCards/ColorCards.jsx","components/Investor/InvestorHome/Components/UserBio/UserBio.jsx","components/Investor/StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfoDisplay.jsx","components/Investor/SvgIcons/IconCloudUpload.jsx","constants/Startups/ExplorePage.js","components/Shared/LoginPopup/LoginPopup.jsx","pages/Public/AuthorProfile/AuthorProfile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ConnectionCard.scss\";\r\nimport { getUserConnections } from \"../../../Service/user\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoggedInUserId } from \"../../../Store/features/user/userSlice\";\r\n\r\nfunction ConnectionCard({ userIdData }) {\r\n  // Fetch from store\r\n  const userId = useSelector(selectLoggedInUserId);\r\n\r\n  const [connections, setConnections] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserConnections(userId || userIdData)\r\n      .then((data) => {\r\n        setConnections(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }, [userId, userIdData]);\r\n\r\n  return (\r\n    <div className=\"ConnectionCard_container m-3 pb-2 d-flex flex-md-row justify-content-start gap-4\">\r\n      {loading ? (\r\n        <SpinnerBS\r\n          className={\r\n            \"d-flex justify-content-center align-items-center w-100 py-5\"\r\n          }\r\n          colorClass={\"d-l-grey\"}\r\n        />\r\n      ) : connections.length > 0 ? (\r\n        <>\r\n          {connections.map((item, index) => (\r\n            <div className=\"single-card \" key={index}>\r\n              <Link\r\n                className=\"d-flex flex-column align-items-center justify-content-between gap-3 h-100 text-decoration-none\"\r\n                to={`/user/${\r\n                  item?.firstName.toLowerCase() +\r\n                  \"-\" +\r\n                  item?.lastName.toLowerCase()\r\n                }/${item.oneLinkId}`}\r\n                style={{ color: \"inherit\" }}\r\n              >\r\n                <img\r\n                  src={item?.profilePicture}\r\n                  alt=\"\"\r\n                  className=\"rounded-pill\"\r\n                />\r\n                <h1 className=\"m-0\" style={{ minHeight: \"50px\" }}>\r\n                  {item?.firstName} {item?.lastName}\r\n                </h1>\r\n                <p className=\"m-0\">{item?.designation}</p>\r\n                <button className=\"mt-auto px-3\">Connected</button>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <p className=\"text-secondary\">No connections found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ColorCard.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst ColorCard = ({\r\n  color,\r\n  text,\r\n  image,\r\n  amount,\r\n  background,\r\n  onAmountChange,\r\n  field,\r\n  colorCardData,\r\n  className,\r\n  noRupee,\r\n  isInvestor = false,\r\n  isOneLink = false,\r\n  isNotEditable,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedAmount, setEditedAmount] = useState(amount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEditedAmount(amount);\r\n  }, [amount]);\r\n\r\n  const handleEditClick = () => {\r\n    if (!isNotEditable) setIsEditMode(true);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setEditedAmount(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditMode(false);\r\n    onAmountChange(editedAmount);\r\n    const updatedData = {\r\n      founderId: loggedInUser._id,\r\n      colorCard: { ...colorCardData, [field]: editedAmount },\r\n    };\r\n    if (isInvestor) {\r\n      postInvestorData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    } else {\r\n      postStartUpData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${className} colorcard-component card row border`}\r\n      style={{ background }}\r\n    >\r\n      <div className=\"col-7 col-sm-6 left-content\" style={{ color }}>\r\n        <>\r\n          <h3 className=\"title\">{text}</h3>\r\n          {isEditMode ? (\r\n            <input\r\n              type=\"text\"\r\n              className=\"edit_input\"\r\n              id=\"edit\"\r\n              value={editedAmount}\r\n              onChange={handleAmountChange}\r\n              onBlur={handleBlur}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span\r\n              className=\"rupee-sign\"\r\n              onClick={onAmountChange ? handleEditClick : () => {}}\r\n            >\r\n              {!noRupee && \"\"} {editedAmount}{\" \"}\r\n              {!isOneLink && !isNotEditable && (\r\n                <label htmlFor=\"edit\" className=\"edit-tip\">\r\n                  Click to edit\r\n                </label>\r\n              )}\r\n            </span>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div className=\"col-5 right-content\">\r\n        <img src={image} alt=\"Card\" width={60} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import React, { useState } from \"react\";\r\nimport CoinIcon from \"../../../../../Images/investorView/Rectangle.png\";\r\nimport ColorCard from \"../../../InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectColorCardData,\r\n  selectCompanyFounderId,\r\n  selectLoggedInUserId,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\n\r\nexport default function ColorCards({ colorCardInfo, isNotEditable = false }) {\r\n  // Fetch from store\r\n  const colorCard = useSelector(selectColorCardData);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n\r\n  // State for color card\r\n  const [colorCardData, setColorCardData] = useState(\r\n    colorCard || colorCardInfo\r\n  );\r\n  const [field, setField] = useState(\"last_round_investment\");\r\n\r\n  // handle amount change\r\n  const handleAmountChange = (currentfield, updatedAmount) => {\r\n    console.log(field);\r\n    console.log(currentfield);\r\n    setField(currentfield);\r\n    setColorCardData((prevData) => ({\r\n      ...prevData,\r\n      [currentfield]: updatedAmount,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 mt-2\">\r\n      {colorCardData && (\r\n        <div className=\"card_holder\">\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#BB98FF\"\r\n            text=\"Last round investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.last_round_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"last_round_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DAC191\"\r\n            text=\"Total Investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.total_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"total_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DCDCDC\"\r\n            text=\"No.of Investers\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.no_of_investers}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"no_of_investers\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            noRupee={true}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#2B2B2B\"\r\n            text=\"Fund ask\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.fund_ask}\r\n            onAmountChange={(amount) => handleAmountChange(\"fund_ask\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#FF7373\"\r\n            text=\"Valuation\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.valuation}\r\n            onAmountChange={(amount) => handleAmountChange(\"valuation\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#9198DA\"\r\n            text=\"Raised funds\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.raised_funds}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"raised_funds\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateUserAPI } from \"../../../../../Service/user\";\r\nimport {\r\n  loginSuccess,\r\n  selectIsInvestor,\r\n  selectUserBio,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../../Shared/Spinner/SpinnerBS\";\r\nimport InvestorAfterSuccessPopUp from \"../../../../PopUp/InvestorAfterSuccessPopUp/InvestorAfterSuccessPopUp\";\r\nimport ErrorPopUp from \"../../../../PopUp/ErrorPopUp/ErrorPopUp\";\r\nimport AfterSuccessPopUp from \"../../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\n\r\nexport default function UserBio({ canEdit = true, bioText = \"\" }) {\r\n  // Fetch from store\r\n  const userBio = useSelector(selectUserBio);\r\n  const isInvestor = useSelector(selectIsInvestor);\r\n  const dispatch = useDispatch();\r\n\r\n  // States for Bio\r\n  const [isBioEditable, setIsBioEditable] = useState(false);\r\n  const [bioContent, setBioContent] = useState(userBio || bioText || \"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  // Submit Bio\r\n  const submitBioHandler = async () => {\r\n    setLoading(true);\r\n\r\n    try {\r\n      const {\r\n        data: { data },\r\n      } = await updateUserAPI({ bio: bioContent });\r\n      dispatch(loginSuccess(data));\r\n      setIsBioEditable(!isBioEditable);\r\n      setAlert({ success: \"Changes Saved!\" });\r\n    } catch (error) {\r\n      console.error(\"Error saving bio:\", error);\r\n      setAlert({ error: \"Error saving Bio! Please try again.\" });\r\n    } finally {\r\n      setLoading(false);\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div\r\n        className={`box personal_information ${canEdit ? \"pb-4\" : \"\"} ${\r\n          isInvestor ? \"rounded-4 border shadow-sm\" : \"\"\r\n        } `}\r\n        id=\"userBio\"\r\n      >\r\n        <div className=\"personal_information_header\">\r\n          <h2 className=\"typography\">Bio</h2>\r\n          {/* Edit button */}\r\n          {canEdit && (\r\n            <span className=\"ms-auto d-flex align-items-center gap-2\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn d-flex align-items-center gap-1\"\r\n                onClick={() => {\r\n                  setBioContent(userBio);\r\n                  setIsBioEditable(!isBioEditable);\r\n                }}\r\n                disabled={loading}\r\n              >\r\n                {isBioEditable ? \"Cancel\" : \"Edit\"}\r\n                <CiEdit />\r\n              </button>\r\n              {isBioEditable && (\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn ms-2 d-flex align-items-center gap-2\"\r\n                  onClick={() => submitBioHandler()}\r\n                  disabled={loading}\r\n                >\r\n                  {loading ? (\r\n                    <SpinnerBS spinnerSizeClass=\"spinner-border-sm\" />\r\n                  ) : (\r\n                    <>\r\n                      <span>Save</span> <CiSaveUp2 />\r\n                    </>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </span>\r\n          )}\r\n        </div>\r\n        <div className=\"mt-2\">\r\n          <div className=\"designation_info\">\r\n            {isBioEditable ? (\r\n              <textarea\r\n                value={bioContent}\r\n                name=\"bio\"\r\n                onChange={(e) => setBioContent(e.target.value)}\r\n                className=\"profile_edit_field\"\r\n                rows={5}\r\n                autoFocus\r\n              />\r\n            ) : (\r\n              <p className=\"small_typo\">\r\n                {bioContent || \"Click on edit to add bio\"}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"col-12 mt-2 designation_see_more\">\r\n      <Link to={\"\"}>See more</Link>\r\n    </div> */}\r\n      </div>\r\n      {alert?.success && isInvestor && (\r\n        <InvestorAfterSuccessPopUp\r\n          successText={alert.success}\r\n          onClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      {alert?.success && !isInvestor && (\r\n        <AfterSuccessPopUp\r\n          successText={alert.success}\r\n          onClose={() => setAlert(null)}\r\n        />\r\n      )}\r\n      {alert?.error && (\r\n        <ErrorPopUp message={alert.error} onClose={() => setAlert(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DefaultAvatar from \"../../../../Images/Chat/default-user-avatar.webp\";\r\nimport { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\nimport IconCloudUpload from \"../../SvgIcons/IconCloudUpload\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectCompanyFounderId,\r\n  selectLoggedInUserId,\r\n} from \"../../../../Store/features/user/userSlice\";\r\nimport SpinnerBS from \"../../../Shared/Spinner/SpinnerBS\";\r\nimport { educationOptions } from \"../../../../constants/Startups/ExplorePage\";\r\nimport EasyCrop from \"react-easy-crop\";\r\n\r\nconst EXPERIENCE_OPTIONS = [\r\n  \"0\",\r\n  \"1 year\",\r\n  \"2 years\",\r\n  \"3 years\",\r\n  \"4 years\",\r\n  \"5 years\",\r\n  \"6 years\",\r\n  \"7 years\",\r\n  \"8 years\",\r\n  \"9 years\",\r\n  \"10 years\",\r\n  \"11 years\",\r\n  \"12 years\",\r\n  \"13 years\",\r\n  \"14 years\",\r\n  \"15 years\",\r\n  \"16 years\",\r\n  \"17 years\",\r\n  \"18 years\",\r\n  \"19 years\",\r\n  \"20 years\",\r\n];\r\n\r\nexport default function ProfessionalInfoDisplay({\r\n  professionalData,\r\n  theme,\r\n  isEditing,\r\n  setIsEditing,\r\n  handleSubmit,\r\n  selectedFile,\r\n  handleTextChange,\r\n  handleFileChange,\r\n  canEdit = true,\r\n  loading,\r\n  previewImage,\r\n  cropComplete,\r\n  setCropComplete,\r\n  setCroppedImage,\r\n  croppedImage,\r\n}) {\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const loggedinUserId = useSelector(selectLoggedInUserId);\r\n\r\n  const [crop, setCrop] = useState({ x: 0, y: 0 });\r\n  const [zoom, setZoom] = useState(1);\r\n\r\n  const getCroppedImg = async (imageSrc, crop) => {\r\n    const image = new Image();\r\n    image.src = imageSrc;\r\n    const canvas = document.createElement(\"canvas\");\r\n    const ctx = canvas.getContext(\"2d\");\r\n    canvas.width = crop.width;\r\n    canvas.height = crop.height;\r\n    ctx.drawImage(\r\n      image,\r\n      crop.x,\r\n      crop.y,\r\n      crop.width,\r\n      crop.height,\r\n      0,\r\n      0,\r\n      crop.width,\r\n      crop.height\r\n    );\r\n\r\n    return new Promise((resolve, reject) => {\r\n      canvas.toBlob(\r\n        (blob) => {\r\n          if (!blob) {\r\n            reject(new Error(\"Failed to crop image\"));\r\n            return;\r\n          }\r\n\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(blob);\r\n          reader.onloadend = () => {\r\n            resolve(reader.result);\r\n          };\r\n        },\r\n        \"image/jpeg\",\r\n        1\r\n      );\r\n    });\r\n  };\r\n\r\n  const onCropComplete = async (croppedArea, croppedAreaPixels) => {\r\n    const croppedImg = await getCroppedImg(previewImage, croppedAreaPixels);\r\n    setCroppedImage(croppedImg);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* header */}\r\n      <header className=\"professional_info_display p-0 pb-4 border-bottom d-flex flex-column gap-3 flex-md-row align-items-center justify-content-between\">\r\n        {/* profile picture and name */}\r\n        <div className=\"d-flex gap-4\">\r\n          <img\r\n            src={professionalData.profilePicture || DefaultAvatar}\r\n            alt={professionalData.fullName}\r\n            style={{ width: \"90px\", height: \"90px\", objectFit: \"cover\" }}\r\n            className=\"rounded-circle\"\r\n          />\r\n          <div className=\"d-flex flex-column justify-content-center gap-1 \">\r\n            <h5 className=\"m-0 fw-semibold\">{professionalData.fullName}</h5>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n            <p className=\"m-0\">{professionalData.location}</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Edit button */}\r\n        {canEdit && (\r\n          <span className=\"edit_btn d-flex align-self-end align-md-self-start \">\r\n            <span className=\" ms-auto d-flex flex-row gap-2\">\r\n              <button\r\n                className=\"btn d-flex align-items-center gap-1\"\r\n                onClick={() => setIsEditing(!isEditing)}\r\n              >\r\n                {isEditing ? \"Cancel\" : \"Edit\"}\r\n                <CiEdit />\r\n              </button>\r\n              {isEditing && (\r\n                <button\r\n                  className=\"btn ms-2 d-flex align-items-center gap-1\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  {loading ? (\r\n                    <SpinnerBS spinnerSizeClass=\"spinner-border-sm\" />\r\n                  ) : (\r\n                    <>\r\n                      Save <CiSaveUp2 />\r\n                    </>\r\n                  )}\r\n                </button>\r\n              )}\r\n            </span>\r\n          </span>\r\n        )}\r\n        {/* Edit button end */}\r\n      </header>\r\n\r\n      {/* Info text */}\r\n      {!isEditing && (\r\n        <div className=\"info_text d-flex flex-column gap-3\">\r\n          {/* Company */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Company</h6>\r\n            <p className=\"m-0\">{professionalData.company}</p>\r\n          </div>\r\n\r\n          {/* Designation */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Designation</h6>\r\n            <p className=\"m-0\">{professionalData.designation}</p>\r\n          </div>\r\n\r\n          {/* Education */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-center\">\r\n            <h6 className=\"m-0\">Education</h6>\r\n            <p className=\"m-0\">{professionalData.education}</p>\r\n          </div>\r\n\r\n          {/* Experience */}\r\n          <div className=\"text_field d-flex gap-3 gap-lg-3 align-items-start\">\r\n            <h6 className=\"m-0\">Experience</h6>\r\n            <p className=\"m-0\">{professionalData.experience}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit form */}\r\n      {isEditing && (\r\n        <form className=\"\">\r\n          {/* profilePicture*/}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Profile Picture</legend>\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              className=\"visually-hidden\"\r\n              name=\"profilePicture\"\r\n              id=\"profilePicture\"\r\n              //   value={professionalData.company}\r\n              onChange={handleFileChange}\r\n            />\r\n            <div className=\"professional_form_input d-flex align-items-center gap-4\">\r\n              <label htmlFor=\"profilePicture\" style={{ cursor: \"pointer\" }}>\r\n                <IconCloudUpload\r\n                  color={theme === \"startup\" ? \"#fd5901\" : \"#b2cc5d\"}\r\n                  height=\"1.75rem\"\r\n                  width=\"1.75rem\"\r\n                />\r\n              </label>\r\n              <p className=\"m-0 fs-6 fw-light\">{selectedFile?.name}</p>\r\n            </div>\r\n          </fieldset>\r\n\r\n          {previewImage && !cropComplete && (\r\n            <div className=\"d-flex flex-column justify-content-center gap-2\">\r\n              <div className=\"image-cropper\">\r\n                <EasyCrop\r\n                  image={previewImage}\r\n                  crop={crop}\r\n                  zoom={zoom}\r\n                  onCropChange={setCrop}\r\n                  onZoomChange={setZoom}\r\n                  onCropComplete={onCropComplete}\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"btn btn-light btn-sm\"\r\n                onClick={() => setCropComplete(true)}\r\n              >\r\n                Crop\r\n              </button>\r\n            </div>\r\n          )}\r\n          {cropComplete && (\r\n            <div className=\"cropped-preview w-100 d-flex justify-content-center\">\r\n              <img\r\n                src={croppedImage}\r\n                alt=\"cropped post\"\r\n                className=\"\"\r\n                style={{\r\n                  maxHeight: \"30vh\",\r\n                  width: \"auto\",\r\n                  objectFit: \"contain\",\r\n                }}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {/* Company */}\r\n          {companyFounderId === loggedinUserId && isEditing && (\r\n            <fieldset className={` ${theme} `}>\r\n              <legend className=\"px-2\">Company</legend>\r\n              <input\r\n                type=\"text\"\r\n                className=\"professional_form_input\"\r\n                name=\"company\"\r\n                value={professionalData.company}\r\n                onChange={handleTextChange}\r\n              />\r\n            </fieldset>\r\n          )}\r\n\r\n          {/* Designation */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Designation</legend>\r\n            <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"designation\"\r\n              value={professionalData.designation}\r\n              onChange={handleTextChange}\r\n            />\r\n          </fieldset>\r\n\r\n          {/* Education */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Education</legend>\r\n            {/* <input\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"education\"\r\n              value={professionalData.education}\r\n              onChange={handleTextChange}\r\n            /> */}\r\n            <select\r\n              name=\"education\"\r\n              id=\"userEducation\"\r\n              onChange={handleTextChange}\r\n              value={professionalData.education}\r\n              className=\"professional_form_input\"\r\n            >\r\n              <option value=\"\" hidden={Boolean(professionalData.education)}>\r\n                Education\r\n              </option>\r\n              {educationOptions.map((option, index) => {\r\n                return (\r\n                  <option value={option} key={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </fieldset>\r\n\r\n          {/* Experience */}\r\n          <fieldset className={` ${theme} `}>\r\n            <legend className=\"px-2\">Experience</legend>\r\n            {/* <textarea\r\n              type=\"text\"\r\n              className=\"professional_form_input\"\r\n              name=\"experience\"\r\n              value={professionalData.experience}\r\n              onChange={handleTextChange}\r\n              rows={5}\r\n            /> */}\r\n            <select\r\n              name=\"experience\"\r\n              id=\"userExperience\"\r\n              onChange={handleTextChange}\r\n              value={professionalData.experience}\r\n              className=\"professional_form_input\"\r\n            >\r\n              <option value=\"\" hidden={Boolean(professionalData.experience)}>\r\n                Experience\r\n              </option>\r\n              {EXPERIENCE_OPTIONS.map((option, index) => {\r\n                return (\r\n                  <option value={option} key={option}>\r\n                    {option}\r\n                  </option>\r\n                );\r\n              })}\r\n            </select>\r\n          </fieldset>\r\n        </form>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// icon:cloud-upload | Bootstrap https://icons.getbootstrap.com/ | Bootstrap\r\nimport * as React from \"react\";\r\n\r\nfunction IconCloudUpload(props) {\r\n  return (\r\n    <svg\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 16 16\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"currentColor\"\r\n        d=\"M4.406 1.342A5.53 5.53 0 018 0c2.69 0 4.923 2 5.166 4.579C14.758 4.804 16 6.137 16 7.773 16 9.569 14.502 11 12.687 11H10a.5.5 0 010-1h2.688C13.979 10 15 8.988 15 7.773c0-1.216-1.02-2.228-2.313-2.228h-.5v-.5C12.188 2.825 10.328 1 8 1a4.53 4.53 0 00-2.941 1.1c-.757.652-1.153 1.438-1.153 2.055v.448l-.445.049C2.064 4.805 1 5.952 1 7.318 1 8.785 2.23 10 3.781 10H6a.5.5 0 010 1H3.781C1.708 11 0 9.366 0 7.318c0-1.763 1.266-3.223 2.942-3.593.143-.863.698-1.723 1.464-2.383z\"\r\n      />\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        fill=\"black\"\r\n        d=\"M7.646 4.146a.5.5 0 01.708 0l3 3a.5.5 0 01-.708.708L8.5 5.707V14.5a.5.5 0 01-1 0V5.707L5.354 7.854a.5.5 0 11-.708-.708l3-3z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default IconCloudUpload;\r\n","export const sectorOptions = [\r\n  \"FMCG\",\r\n  \"Restaurants\",\r\n  \"Education\",\r\n  \"Tourism\",\r\n  \"Automobile\",\r\n  \"Textile\",\r\n  \"Chemicals\",\r\n  \"Telecommunications\",\r\n  \"Oil and Gas\",\r\n  \"Renewable Energy\",\r\n  \"Investment Banking and Venture Capital\",\r\n  \"NBFC\",\r\n  \"Biotechnology\",\r\n  \"Software Development Services\",\r\n  \"Computer and Information Technology\",\r\n  \"Aerospace\",\r\n  \"Sales and Marketing\",\r\n];\r\n\r\nexport const genderOptions = [\"Male\", \"Female\", \"Other\"];\r\n\r\nexport const sizeOptions = [\"10+\", \"100+\", \"1000+\"];\r\n\r\nexport const ageOptions = [\"0-2\", \"2-3\", \"4-5\", \"5-10\", \"10+\"];\r\n\r\nexport const stageOptions = [\r\n  \"Pre-seed\",\r\n  \"Seed\",\r\n  \"Series A\",\r\n  \"Series B\",\r\n  \"Series C\",\r\n  \"Series D and Beyond\",\r\n];\r\n\r\nexport const investmentStageOptions = [\r\n  \"Seed Stage\",\r\n  \"Series A\",\r\n  \"Series B\",\r\n  \"Series C\",\r\n  \"Series D and Beyond\",\r\n  \"Early-stage (Seed to Series A)\",\r\n  \"Growth-stage (Series B and Beyond)\",\r\n];\r\n\r\nexport const fundingRaisedOptions = [\r\n  \"Less than ₹10 Lakh\",\r\n  \"₹10 Lakh - ₹50 Lakh\",\r\n  \"₹50 Lakh - ₹1 Crore\",\r\n  \"More than ₹1 Crore\",\r\n];\r\n\r\nexport const productStageOptions = [\r\n  \"Concept/Idea\",\r\n  \"Prototype\",\r\n  \"Minimum Viable Product (MVP)\",\r\n  \"Beta Testing\",\r\n  \"Fully Developed Product\",\r\n];\r\n\r\nexport const investmentSizeOptions = [\r\n  \"Micro-investments (< ₹10,000)\",\r\n  \"Small Investments (₹10,000 - ₹50,000)\",\r\n  \"Moderate Investments (₹50,000 - ₹2 Lakhs)\",\r\n  \"Significant Investments (₹2 Lakhs - ₹10 Lakhs)\",\r\n  \"Large Investments (₹10 Lakhs - ₹1 Crore)\",\r\n  \"Major Investments (₹1 Crore and above)\",\r\n];\r\n\r\n// export const sectorPreferenceOptions = [];\r\n\r\nexport const previousExitsOptions = [\r\n  \"Successful IPO\",\r\n  \"Acquisition by a Larger Company\",\r\n  \"Merger\",\r\n  \"No Previous Exit Experience\",\r\n];\r\n\r\nexport const yearsOfExperienceOptions = [\r\n  \"0-2 years\",\r\n  \"2-5 years\",\r\n  \"5-10 years\",\r\n  \"10-15 years\",\r\n  \"15+ years\",\r\n];\r\n\r\nexport const educationOptions = [\r\n  \"Computer Science Engineering\",\r\n  \"Electrical and Electronics Engineering\",\r\n  \"Mechanical Engineering\",\r\n  \"Civil Engineering\",\r\n  \"Chemical Engineering\",\r\n  \"Aerospace Engineering\",\r\n  \"Biomedical Engineering\",\r\n  \"Environmental Engineering\",\r\n  \"Software Engineering\",\r\n  \"MBA in Marketing\",\r\n  \"MBA in Finance\",\r\n  \"MBA in Data Science\",\r\n];\r\n\r\nexport const diversityMetricsOptions = [\r\n  \"Gender Diversity\",\r\n  \"Ethnic Diversity\",\r\n  \"Age Diversity\",\r\n  \"LGBTQ+ Inclusivity\",\r\n  \"Disability Inclusivity\",\r\n  \"Socioeconomic Diversity\",\r\n];\r\n","import React from \"react\";\r\nimport \"./LoginPopup.scss\";\r\nimport MaxWidthWrapper from \"../MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LoginPopup({ children }) {\r\n  return (\r\n    <div className=\"login-popup-container bg-white shadow-lg\">\r\n      <MaxWidthWrapper>\r\n        <div className=\"login-message-container py-4 px-2 px-md-4 d-flex flex-column gap-3 align-items-center\">\r\n          {/* Children */}\r\n          {children}\r\n\r\n          {/* Action links */}\r\n          <div className=\"action_links d-flex flex-column flex-md-row align-items-center gap-1 gap-md-3\">\r\n            <Link\r\n              to={\"/login\"}\r\n              className=\"btn btn-primary text-white fs-5\"\r\n              style={{ width: \"200px\" }}\r\n            >\r\n              Login\r\n            </Link>\r\n            <p className=\"m-0\">Or</p>\r\n            <Link\r\n              to={\"/signup\"}\r\n              className=\"btn btn-secondary fs-5\"\r\n              style={{ width: \"200px\" }}\r\n            >\r\n              Create Account\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </MaxWidthWrapper>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./AuthorProfile.scss\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getUserAndStartUpByUserIdAPI } from \"../../../Service/user\";\r\nimport ProfessionalInfoDisplay from \"../../../components/Investor/StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfoDisplay\";\r\nimport UserBio from \"../../../components/Investor/InvestorHome/Components/UserBio/UserBio\";\r\nimport ConnectionCard from \"../../../components/Investor/ConnectionCard/ConnectionCard\";\r\nimport CompanyDetailsCard from \"../../../components/Investor/InvestorGlobalCards/CompanyDetails/CompanyDetailsCard\";\r\nimport ColorCards from \"../../../components/Investor/InvestorHome/Components/ColorCards/ColorCards\";\r\nimport TCHLogoLoader from \"../../../components/Shared/TCHLoaders/TCHLogoLoader/TCHLogoLoader\";\r\nimport LoginPopup from \"../../../components/Shared/LoginPopup/LoginPopup\";\r\n\r\nexport default function AuthorProfile() {\r\n  const { userId } = useParams();\r\n\r\n  // States\r\n  const [loading, setLoading] = useState(true);\r\n  const [userData, setUserData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    getUserAndStartUpByUserIdAPI(userId)\r\n      .then(({ data }) => {\r\n        setUserData(data);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching Author Profile:\", error));\r\n  }, [userId]);\r\n\r\n  // Extracting Data\r\n  let professionalData = {\r\n    designation: userData?.designation || \"\",\r\n    education: userData?.education || \"\",\r\n    experience: userData?.experience || \"\",\r\n    profilePicture: userData?.profilePicture || \"\",\r\n    fullName: userData?.firstName + \" \" + userData?.lastName || \"\",\r\n    company: userData?.startUp.company,\r\n    location: userData?.location || \"Bangalore, India\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"author-profile-wrapper position-relative\">\r\n      <MaxWidthWrapper>\r\n        {loading ? (\r\n          <div className=\"\" style={{ height: \"80vh\" }}>\r\n            <TCHLogoLoader\r\n              className={\r\n                \"d-flex justify-content-center align-items-center h-100\"\r\n              }\r\n            />\r\n          </div>\r\n        ) : (\r\n          <div className=\"profile-container d-flex flex-column gap-4\">\r\n            {/* Professional Info */}\r\n            <section\r\n              className={`professional_info_section d-flex flex-column gap-3 p-2 px-md-4 py-4 bg-white shadow-sm ${\r\n                userData?.isInvestor === \"true\"\r\n                  ? \"rounded-4 border\"\r\n                  : \"rounded-4\"\r\n              }`}\r\n            >\r\n              <ProfessionalInfoDisplay\r\n                professionalData={professionalData}\r\n                isEditing={false}\r\n                canEdit={false}\r\n              />\r\n            </section>\r\n\r\n            {/* UserBio */}\r\n            <section className=\"d-flex flex-column gap-3 p-2 px-md-4 py-4 bg-white shadow-sm rounded-4\">\r\n              <UserBio canEdit={false} bioText={userData.bio} />\r\n            </section>\r\n\r\n            {/* Connections */}\r\n            <section className=\"d-flex flex-column gap-3 p-2 px-md-4 py-4 bg-white shadow-sm rounded-4\">\r\n              <h2 className=\"\">Connections</h2>\r\n              <ConnectionCard userIdData={userData._id} />\r\n            </section>\r\n\r\n            {/* Achievements */}\r\n\r\n            {/* CompanyDetails */}\r\n            <div className=\"\">\r\n              <CompanyDetailsCard\r\n                className=\"\"\r\n                userDetails={userData}\r\n                page={\"\"}\r\n              />\r\n            </div>\r\n\r\n            {/* Color Cards */}\r\n            <ColorCards\r\n              colorCardInfo={userData.startUp.colorCard}\r\n              isNotEditable={true}\r\n            />\r\n\r\n            {/*  */}\r\n          </div>\r\n        )}\r\n      </MaxWidthWrapper>\r\n\r\n      {/* login popup */}\r\n      {!loading && (\r\n        <LoginPopup>\r\n          <p className=\"m-0 fs-4 text-center\">\r\n            Connect with{\" \"}\r\n            <span className=\"fw-bold\">\r\n              {userData.firstName} {userData.lastName}\r\n            </span>{\" \"}\r\n            on <span className=\"text-primary\">Capital HUB</span>\r\n          </p>\r\n        </LoginPopup>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["_ref","userIdData","userId","useSelector","selectLoggedInUserId","_useState","useState","_useState2","_slicedToArray","connections","setConnections","_useState3","_useState4","loading","setLoading","useEffect","getUserConnections","then","data","catch","err","console","log","_jsx","className","children","SpinnerBS","colorClass","length","_Fragment","map","item","index","_jsxs","Link","to","concat","firstName","toLowerCase","lastName","oneLinkId","style","color","src","profilePicture","alt","minHeight","designation","text","image","amount","background","onAmountChange","field","colorCardData","noRupee","_ref$isInvestor","isInvestor","_ref$isOneLink","isOneLink","isNotEditable","loggedInUser","state","user","isEditMode","setIsEditMode","editedAmount","setEditedAmount","dispatch","useDispatch","type","id","value","onChange","e","target","onBlur","updatedData","founderId","_id","colorCard","_objectSpread","_defineProperty","postInvestorData","res","setUserCompany","error","postStartUpData","autoFocus","onClick","htmlFor","width","ColorCards","colorCardInfo","_ref$isNotEditable","selectColorCardData","companyFounderId","selectCompanyFounderId","loggedInUserId","setColorCardData","setField","handleAmountChange","currentfield","updatedAmount","prevData","ColorCard","CoinIcon","last_round_investment","total_investment","no_of_investers","fund_ask","valuation","raised_funds","UserBio","_ref$canEdit","canEdit","_ref$bioText","bioText","userBio","selectUserBio","selectIsInvestor","isBioEditable","setIsBioEditable","bioContent","setBioContent","_useState5","_useState6","_useState7","_useState8","alert","setAlert","submitBioHandler","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$updateUserAPI","wrap","_context","prev","next","updateUserAPI","bio","sent","loginSuccess","success","t0","setTimeout","finish","stop","apply","arguments","disabled","CiEdit","spinnerSizeClass","CiSaveUp2","name","rows","InvestorAfterSuccessPopUp","successText","onClose","AfterSuccessPopUp","ErrorPopUp","message","EXPERIENCE_OPTIONS","ProfessionalInfoDisplay","professionalData","theme","isEditing","setIsEditing","handleSubmit","selectedFile","handleTextChange","handleFileChange","previewImage","cropComplete","setCropComplete","setCroppedImage","croppedImage","loggedinUserId","x","y","crop","setCrop","zoom","setZoom","getCroppedImg","imageSrc","canvas","ctx","Image","document","createElement","getContext","height","drawImage","abrupt","Promise","resolve","reject","toBlob","blob","reader","FileReader","readAsDataURL","onloadend","result","Error","_x","_x2","onCropComplete","_ref3","_callee2","croppedArea","croppedAreaPixels","croppedImg","_context2","_x3","_x4","DefaultAvatar","fullName","objectFit","location","company","education","experience","accept","cursor","IconCloudUpload","EasyCrop","onCropChange","onZoomChange","maxHeight","hidden","Boolean","educationOptions","option","props","fill","viewBox","fillRule","d","sectorOptions","genderOptions","sizeOptions","ageOptions","stageOptions","investmentStageOptions","fundingRaisedOptions","productStageOptions","investmentSizeOptions","previousExitsOptions","yearsOfExperienceOptions","diversityMetricsOptions","LoginPopup","MaxWidthWrapper","AuthorProfile","useParams","userData","setUserData","getUserAndStartUpByUserIdAPI","startUp","TCHLogoLoader","ConnectionCard","CompanyDetailsCard","userDetails","page"],"sourceRoot":""}