{"version":3,"file":"static/js/7402.d98c08bd.chunk.js","mappings":"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","sources":["Images/manageAccount/Group 15186.svg","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","components/Investor/InvestorManageAccount/InvestorManageAccount.js"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgGroup15186(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 40,\n    height: 40,\n    viewBox: \"0 0 40 40\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 15186\"\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    id: \"Ellipse 305\",\n    cx: 20,\n    cy: 20,\n    r: 20,\n    fill: \"#FD5901\",\n    fillOpacity: 0.5\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M14.1958 18.375C13.8375 17.3 12.8521 16.5833 11.6875 16.5833C10.1646 16.5833 9 17.7479 9 19.2708C9 20.7937 10.1646 21.9583 11.6875 21.9583C12.8521 21.9583 13.8375 21.2417 14.1958 20.1667H15.2708V21.9583H17.0625V20.1667H18.8542V18.375H14.1958ZM11.6875 20.1667C11.15 20.1667 10.7917 19.8083 10.7917 19.2708C10.7917 18.7333 11.15 18.375 11.6875 18.375C12.225 18.375 12.5833 18.7333 12.5833 19.2708C12.5833 19.8083 12.225 20.1667 11.6875 20.1667ZM23.3333 13C21.3625 13 19.75 14.6125 19.75 16.5833C19.75 18.5542 21.3625 20.1667 23.3333 20.1667C25.3042 20.1667 26.9167 18.5542 26.9167 16.5833C26.9167 14.6125 25.3042 13 23.3333 13ZM23.3333 18.4646C22.2583 18.4646 21.4521 17.6583 21.4521 16.5833C21.4521 15.5083 22.2583 14.7021 23.3333 14.7021C24.4083 14.7021 25.2146 15.5083 25.2146 16.5833C25.2146 17.6583 24.4083 18.4646 23.3333 18.4646ZM23.3333 21.0625C20.9146 21.0625 16.1667 22.2271 16.1667 24.6458V27.3333H30.5V24.6458C30.5 22.2271 25.7521 21.0625 23.3333 21.0625ZM28.7979 25.6312H17.8687V24.6458C17.8687 24.1083 20.6458 22.7646 23.3333 22.7646C26.0208 22.7646 28.7979 24.1083 28.7979 24.6458V25.6312Z\",\n    fill: \"white\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgGroup15186);\nexport default __webpack_public_path__ + \"static/media/Group 15186.a1f57c594748bb543bda38efc1ec1d61.svg\";\nexport { ForwardRef as ReactComponent };","var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import \"./InvestorManageAccount.scss\";\r\nimport SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport logoIcon from \"../../../Images/manageAccount/Group 15186.svg\";\r\n// import profileIcon from \"../../../Images/investorIcon/profilePic.webp\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { changePasswordAPI } from \"../../../Service/user\";\r\nimport { useEffect, useState } from \"react\";\r\nimport LogOutPopUp from \"../../PopUp/LogOutPopUp/LogOutPopUp\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n// import { logout } from \"../../../Store/Action/userAction\";\r\nimport { logout } from \"../../../Store/features/user/userSlice\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport {\r\n  selectTheme,\r\n  setPageTitle,\r\n  toggleTheme,\r\n} from \"../../../Store/features/design/designSlice\";\r\nimport { loginSuccess } from \"../../../Store/features/user/userSlice\";\r\nimport deleteIcon from \"../../../Images/post/delete.png\";\r\nimport { fetchCompanyData } from \"../../../Store/features/user/userThunks\";\r\nimport toast from \"react-hot-toast\";\r\nimport { MdDarkMode } from \"react-icons/md\";\r\nimport { GoSun } from \"react-icons/go\";\r\nimport { clearAllChatsData } from \"../../../Store/features/chat/chatSlice\";\r\nimport { fetchAllChats } from \"../../../Store/features/chat/chatThunks\";\r\n\r\nconst InvestorManageAccount = () => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [otherAccounts, setOtherAccounts] = useState(\r\n    JSON.parse(localStorage.getItem(\"StartupAccounts\")) || []\r\n  );\r\n  const [selectedAccount, setSelectedAcc] = useState(loggedInUser);\r\n  const [selectedAccountFull, setSelectedAccFull] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const theme = useSelector(selectTheme);\r\n\r\n  const initialForm = {\r\n    oldPassword: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n  };\r\n  const [changePasswordForm, setChangePasswordForm] = useState({\r\n    ...initialForm,\r\n  });\r\n  const [message, setMessage] = useState(false);\r\n\r\n  const onChangeFormHandler = (event) => {\r\n    setMessage(false);\r\n    const { name, value } = event.target;\r\n    setChangePasswordForm((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        [name]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const onSubmitChangePasswordHandler = (event) => {\r\n    event.preventDefault();\r\n    if (\r\n      changePasswordForm.confirmNewPassword !== changePasswordForm.newPassword\r\n    ) {\r\n      return setMessage(\"Passwords don't match\");\r\n    }\r\n    changePasswordAPI(changePasswordForm)\r\n      .then(({ message }) => {\r\n        setMessage(message);\r\n        setChangePasswordForm(initialForm);\r\n      })\r\n      .catch(({ message }) => setMessage(message))\r\n      .finally(() => setTimeout(() => setMessage(false), 3000));\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Manage Account | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Manage Account\"));\r\n  }, [dispatch]);\r\n\r\n  const [showLogoutPopup, setShowLogoutPopup] = useState(false);\r\n  const navigate = useNavigate();\r\n  const handleLogoutLogic = () => {\r\n    dispatch(logout());\r\n    dispatch(clearAllChatsData());\r\n    localStorage.removeItem(\"isLoggedIn\");\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const handleSwitchAccount = () => {\r\n    if (selectedAccountFull) {\r\n      const confirmSwitch = window.confirm(\r\n        \"Are you sure you want to switch account?\"\r\n      );\r\n      setIsSubmitting(true);\r\n      if (confirmSwitch) {\r\n        setTimeout(() => {\r\n          dispatch(loginSuccess(selectedAccountFull.user));\r\n          let isInvestor =\r\n            selectedAccountFull.user.isInvestor === \"true\" ? true : false;\r\n          dispatch(fetchCompanyData(selectedAccountFull.user._id, isInvestor));\r\n          // fetch chats\r\n          dispatch(clearAllChatsData());\r\n          dispatch(fetchAllChats());\r\n          localStorage.setItem(\"accessToken\", selectedAccountFull.token);\r\n          setIsSubmitting(false);\r\n          toast.success(\"Account switched successfully\", {\r\n            duration: 3000,\r\n            position: \"top-center\",\r\n          });\r\n        }, 2000);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectedAccount = (account) => {\r\n    setSelectedAcc(account.user);\r\n    setSelectedAccFull(account);\r\n  };\r\n\r\n  //remove acc\r\n  const handleRemoveAccount = (removeAccountDetails) => {\r\n    const shouldRemove = window.confirm(\r\n      \"Are you sure you want to remove this account?\"\r\n    );\r\n    if (!shouldRemove) {\r\n      return;\r\n    }\r\n    const storedAccounts =\r\n      JSON.parse(localStorage.getItem(\"StartupAccounts\")) || [];\r\n    const updatedAccounts = storedAccounts.filter(\r\n      (account) => account.user._id !== removeAccountDetails.user._id\r\n    );\r\n    setOtherAccounts(updatedAccounts);\r\n    localStorage.setItem(\"StartupAccounts\", JSON.stringify(updatedAccounts));\r\n    if (loggedInUser && loggedInUser._id === removeAccountDetails.user._id) {\r\n      const updatedLoggedInUser =\r\n        updatedAccounts.length > 0 ? updatedAccounts[0].user : null;\r\n      if (updatedLoggedInUser === null) {\r\n        handleLogoutLogic();\r\n        navigate(\"/login\");\r\n      } else {\r\n        dispatch(loginSuccess(updatedLoggedInUser));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"manage_account_container\">\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <SmallProfileCard\r\n              className=\"mt-5 mt-xl-3\"\r\n              text={\"Manage Account\"}\r\n            />\r\n            <div className=\"box_container p-4 mt-4 row row-cols-1 row-cols-lg-2 row-cols-xl-3 row-gap-3 flex-lg-row\">\r\n              {/* Change Password */}\r\n              <section className=\"col password_section\">\r\n                <div className=\"change_password border border-secondary-subtle\">\r\n                  {/* Header */}\r\n                  <div className=\"d-flex align-items-center gap-2\">\r\n                    <div className=\"logo\">\r\n                      <img src={logoIcon} alt=\"img\" />\r\n                    </div>\r\n                    <span\r\n                      className=\"header_text\"\r\n                      style={{ color: \"var(--d-l-grey)\" }}\r\n                    >\r\n                      Change Password\r\n                    </span>\r\n                  </div>\r\n                  <hr />\r\n                  {/* Body */}\r\n                  <form\r\n                    onSubmit={onSubmitChangePasswordHandler}\r\n                    className=\"d-flex flex-column\"\r\n                  >\r\n                    <div className=\"form-input col\">\r\n                      <label htmlFor=\"oldPassword\">Old Password</label>\r\n                      <input\r\n                        id=\"oldPassword\"\r\n                        type=\"text\"\r\n                        value={changePasswordForm.oldPassword}\r\n                        onChange={onChangeFormHandler}\r\n                        name=\"oldPassword\"\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-input col\">\r\n                      <label htmlFor=\"newPassword\">New Password</label>\r\n                      <input\r\n                        id=\"newPassword\"\r\n                        type=\"password\"\r\n                        name=\"newPassword\"\r\n                        value={changePasswordForm.newPassword}\r\n                        onChange={onChangeFormHandler}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-input col\">\r\n                      <label htmlFor=\"confirmNewPassword\">\r\n                        Confirm Password\r\n                      </label>\r\n                      <input\r\n                        id=\"confirmNewPassword\"\r\n                        type=\"password\"\r\n                        name=\"confirmNewPassword\"\r\n                        value={changePasswordForm.confirmNewPassword}\r\n                        onChange={onChangeFormHandler}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    {/* Footer */}\r\n                    <div className=\"footer w-100\">\r\n                      {message && <p className=\"text-center\">{message}</p>}\r\n                      <button type=\"submit\" className=\"w-100\">\r\n                        Save Changes\r\n                      </button>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </section>\r\n\r\n              {/* Present Accounts */}\r\n              <section className=\"col present_accounts_section\">\r\n                <div className=\"present_account border border-secondary-subtle\">\r\n                  {/* Header */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"logo\">\r\n                      <img src={logoIcon} alt=\"img\" />\r\n                    </div>\r\n                    <div className=\"header_text\">Present account</div>\r\n                  </div>\r\n                  <hr />\r\n                  {/* Body */}\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"profile_image\">\r\n                      <img src={loggedInUser?.profilePicture} alt=\"img\" />\r\n                    </div>\r\n                    <div className=\"name_email\">\r\n                      <h4 className=\"text-break\">\r\n                        {loggedInUser?.firstName} {loggedInUser?.lastName}\r\n                      </h4>\r\n                      <span className=\"text-break\">{loggedInUser?.email}</span>\r\n                    </div>\r\n                  </div>\r\n                  {/* Footer */}\r\n                  <div className=\"footer d-flex gap-3\">\r\n                    <Link\r\n                      to=\"/profile\"\r\n                      className={`btn btn-delete`}\r\n                      style={{\r\n                        backgroundColor: \"var(--currentTheme)\",\r\n                      }}\r\n                    >\r\n                      View profile\r\n                    </Link>\r\n                    <button\r\n                      className=\"btn btn-delete\"\r\n                      onClick={setShowLogoutPopup}\r\n                    >\r\n                      Log out\r\n                    </button>\r\n                    {showLogoutPopup && (\r\n                      <LogOutPopUp\r\n                        setShowLogoutPopup={setShowLogoutPopup} // Make sure this prop is passed correctly\r\n                        handleLogoutLogic={handleLogoutLogic}\r\n                        showLogoutPopup\r\n                      />\r\n                    )}\r\n                  </div>\r\n                </div>\r\n                <div className=\"toggle-theme d-flex\">\r\n                  <button\r\n                    className=\"btn btn-dark text-capitalize mx-auto my-2\"\r\n                    onClick={() => dispatch(toggleTheme())}\r\n                  >\r\n                    {theme === \"light\" ? <GoSun /> : <MdDarkMode />} {theme}{\" \"}\r\n                    mode\r\n                  </button>\r\n                </div>\r\n              </section>\r\n\r\n              {/* Logout Section */}\r\n              <section className=\"col present_accounts_section\">\r\n                <div className=\"present_account border border-secondary-subtle\">\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <div className=\"logo\">\r\n                      <img src={logoIcon} alt=\"img\" />\r\n                    </div>\r\n                    <div className=\"header_text\">Accounts</div>\r\n                  </div>\r\n                  <hr />\r\n                  <section className=\"existing_accounts\">\r\n                    {otherAccounts?.map((account) => {\r\n                      const fullmname =\r\n                        account.user.firstName + \" \" + account.user.lastName;\r\n\r\n                      return (\r\n                        <>\r\n                          <div className=\"small_card\">\r\n                            <div className=\"left_section\">\r\n                              <div className=\"d-flex align-items-center\">\r\n                                <label className=\"checkbox_container me-2\">\r\n                                  <input\r\n                                    type=\"checkbox\"\r\n                                    checked={\r\n                                      account.user._id === selectedAccount._id\r\n                                    }\r\n                                    onClick={() =>\r\n                                      handleSelectedAccount(account)\r\n                                    }\r\n                                  />\r\n                                  <span className=\"checkmark\"></span>\r\n                                </label>\r\n                                <div className=\"profile_image\">\r\n                                  <img\r\n                                    src={account.user.profilePicture}\r\n                                    alt=\"img\"\r\n                                  />\r\n                                </div>\r\n                                <div className=\"name_email\">\r\n                                  <h5 className=\"m-0\">{fullmname}</h5>\r\n                                  <span className=\"fs-sm fw-semibold \">\r\n                                    {window.innerWidth <= 600\r\n                                      ? account.user.email.slice(0, 21) ===\r\n                                        account.user.email\r\n                                        ? account.user.email\r\n                                        : account.user.email.slice(0, 21) +\r\n                                          \"...\"\r\n                                      : account.user.email.slice(0, 23) ===\r\n                                        account.user.email\r\n                                      ? account.user.email\r\n                                      : account.user.email.slice(0, 23) + \"...\"}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"right_section d-flex flex-column \">\r\n                              <button\r\n                                className=\"img-btn pt-md-2\"\r\n                                onClick={() => handleRemoveAccount(account)}\r\n                              >\r\n                                <img\r\n                                  src={deleteIcon}\r\n                                  alt=\"delete icon\"\r\n                                  className=\"deleteIcon\"\r\n                                />\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        </>\r\n                      );\r\n                    })}\r\n                    <div className=\"footer d-flex gap-3\">\r\n                      {otherAccounts.length > 1 && (\r\n                        <button\r\n                          className=\"btn btn-delete\"\r\n                          style={{\r\n                            backgroundColor: \"var(--currentTheme)\",\r\n                          }}\r\n                          onClick={handleSwitchAccount}\r\n                        >\r\n                          {isSubmitting\r\n                            ? \"Switching Account....\"\r\n                            : \"Switch Account\"}\r\n                        </button>\r\n                      )}\r\n                      <Link to=\"/login\" className=\"btn btn-delete bg-secondary\">\r\n                        Add account\r\n                      </Link>\r\n                    </div>\r\n                  </section>\r\n                </div>\r\n              </section>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default InvestorManageAccount;\r\n"],"names":["_ref","dateString","className","text","width","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","_jsx","_Fragment","_useState","useState","JSON","parse","localStorage","getItem","_useState2","_slicedToArray","otherAccounts","setOtherAccounts","_useState3","_useState4","selectedAccount","setSelectedAcc","_useState5","_useState6","selectedAccountFull","setSelectedAccFull","_useState7","_useState8","isSubmitting","setIsSubmitting","theme","selectTheme","initialForm","oldPassword","newPassword","confirmNewPassword","_useState9","_objectSpread","_useState10","changePasswordForm","setChangePasswordForm","_useState11","_useState12","message","setMessage","onChangeFormHandler","event","_event$target","target","name","value","prevState","_defineProperty","dispatch","useDispatch","useEffect","document","title","setPageTitle","_useState13","_useState14","showLogoutPopup","setShowLogoutPopup","navigate","useNavigate","handleLogoutLogic","logout","clearAllChatsData","removeItem","MaxWidthWrapper","children","_jsxs","SmallProfileCard","src","logoIcon","alt","style","color","onSubmit","preventDefault","changePasswordAPI","then","catch","_ref2","finally","setTimeout","htmlFor","id","type","onChange","required","profilePicture","firstName","lastName","email","Link","to","backgroundColor","onClick","LogOutPopUp","toggleTheme","GoSun","MdDarkMode","map","account","fullmname","checked","_id","handleSelectedAccount","window","innerWidth","slice","removeAccountDetails","confirm","updatedAccounts","filter","setItem","stringify","updatedLoggedInUser","length","loginSuccess","handleRemoveAccount","deleteIcon","confirmSwitch","isInvestor","fetchCompanyData","fetchAllChats","token","toast","success","duration","position"],"sourceRoot":""}