{"version":3,"file":"static/js/6910.5b8d5ba6.chunk.js","mappings":"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","sources":["components/Investor/ConnectionCard/ConnectionCard.jsx","components/Investor/InvestorGlobalCards/ColoredCards/ColorCard.js","components/Investor/InvestorHome/Components/ColorCards/ColorCards.jsx","components/Investor/AchievementsPageComponents/AchievementsComponents.jsx","components/Investor/InvestorHome/InvestorHome.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ConnectionCard.scss\";\r\nimport { getUserConnections } from \"../../../Service/user\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoggedInUserId } from \"../../../Store/features/user/userSlice\";\r\n\r\nfunction ConnectionCard({ userIdData }) {\r\n  // Fetch from store\r\n  const userId = useSelector(selectLoggedInUserId);\r\n\r\n  const [connections, setConnections] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserConnections(userId || userIdData)\r\n      .then((data) => {\r\n        setConnections(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }, [userId, userIdData]);\r\n\r\n  return (\r\n    <div className=\"ConnectionCard_container m-3 pb-2 d-flex flex-md-row justify-content-start gap-4\">\r\n      {loading ? (\r\n        <SpinnerBS\r\n          className={\r\n            \"d-flex justify-content-center align-items-center w-100 py-5\"\r\n          }\r\n          colorClass={\"d-l-grey\"}\r\n        />\r\n      ) : connections.length > 0 ? (\r\n        <>\r\n          {connections.map((item, index) => (\r\n            <div className=\"single-card \" key={index}>\r\n              <Link\r\n                className=\"d-flex flex-column align-items-center justify-content-between gap-3 h-100 text-decoration-none\"\r\n                to={`/user/${\r\n                  item?.firstName.toLowerCase() +\r\n                  \"-\" +\r\n                  item?.lastName.toLowerCase()\r\n                }/${item.oneLinkId}`}\r\n                style={{ color: \"inherit\" }}\r\n              >\r\n                <img\r\n                  src={item?.profilePicture}\r\n                  alt=\"\"\r\n                  className=\"rounded-pill\"\r\n                />\r\n                <h1 className=\"m-0\" style={{ minHeight: \"50px\" }}>\r\n                  {item?.firstName} {item?.lastName}\r\n                </h1>\r\n                <p className=\"m-0\">{item?.designation}</p>\r\n                <button className=\"mt-auto px-3\">Connected</button>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <p className=\"text-secondary\">No connections found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ColorCard.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst ColorCard = ({\r\n  color,\r\n  text,\r\n  image,\r\n  amount,\r\n  background,\r\n  onAmountChange,\r\n  field,\r\n  colorCardData,\r\n  className,\r\n  noRupee,\r\n  isInvestor = false,\r\n  isOneLink = false,\r\n  isNotEditable,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedAmount, setEditedAmount] = useState(amount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEditedAmount(amount);\r\n  }, [amount]);\r\n\r\n  const handleEditClick = () => {\r\n    if (!isNotEditable) setIsEditMode(true);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setEditedAmount(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditMode(false);\r\n    onAmountChange(editedAmount);\r\n    const updatedData = {\r\n      founderId: loggedInUser._id,\r\n      colorCard: { ...colorCardData, [field]: editedAmount },\r\n    };\r\n    if (isInvestor) {\r\n      postInvestorData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    } else {\r\n      postStartUpData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${className} colorcard-component card row border`}\r\n      style={{ background }}\r\n    >\r\n      <div className=\"col-7 col-sm-6 left-content\" style={{ color }}>\r\n        <>\r\n          <h3 className=\"title\">{text}</h3>\r\n          {isEditMode ? (\r\n            <input\r\n              type=\"text\"\r\n              className=\"edit_input\"\r\n              id=\"edit\"\r\n              value={editedAmount}\r\n              onChange={handleAmountChange}\r\n              onBlur={handleBlur}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span\r\n              className=\"rupee-sign\"\r\n              onClick={onAmountChange ? handleEditClick : () => {}}\r\n            >\r\n              {!noRupee && \"\"} {editedAmount}{\" \"}\r\n              {!isOneLink && !isNotEditable && (\r\n                <label htmlFor=\"edit\" className=\"edit-tip\">\r\n                  Click to edit\r\n                </label>\r\n              )}\r\n            </span>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div className=\"col-5 right-content\">\r\n        <img src={image} alt=\"Card\" width={60} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import React, { useState } from \"react\";\r\nimport CoinIcon from \"../../../../../Images/investorView/Rectangle.png\";\r\nimport ColorCard from \"../../../InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectColorCardData,\r\n  selectCompanyFounderId,\r\n  selectLoggedInUserId,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\n\r\nexport default function ColorCards({ colorCardInfo, isNotEditable = false }) {\r\n  // Fetch from store\r\n  const colorCard = useSelector(selectColorCardData);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n\r\n  // State for color card\r\n  const [colorCardData, setColorCardData] = useState(\r\n    colorCard || colorCardInfo\r\n  );\r\n  const [field, setField] = useState(\"last_round_investment\");\r\n\r\n  // handle amount change\r\n  const handleAmountChange = (currentfield, updatedAmount) => {\r\n    console.log(field);\r\n    console.log(currentfield);\r\n    setField(currentfield);\r\n    setColorCardData((prevData) => ({\r\n      ...prevData,\r\n      [currentfield]: updatedAmount,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 mt-2\">\r\n      {colorCardData && (\r\n        <div className=\"card_holder\">\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#BB98FF\"\r\n            text=\"Last round investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.last_round_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"last_round_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DAC191\"\r\n            text=\"Total Investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.total_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"total_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DCDCDC\"\r\n            text=\"No.of Investers\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.no_of_investers}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"no_of_investers\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            noRupee={true}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#2B2B2B\"\r\n            text=\"Fund ask\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.fund_ask}\r\n            onAmountChange={(amount) => handleAmountChange(\"fund_ask\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#FF7373\"\r\n            text=\"Valuation\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.valuation}\r\n            onAmountChange={(amount) => handleAmountChange(\"valuation\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#9198DA\"\r\n            text=\"Raised funds\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.raised_funds}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"raised_funds\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./AchievementsComponents.scss\";\r\nimport silver from \"../../../Images/Investor/Achievements/silver.png\";\r\nimport gold from \"../../../Images/Investor/Achievements/gold.png\";\r\nimport bronze from \"../../../Images/Investor/Achievements/bronze.png\";\r\nimport rectangle from \"../../../Images/Investor/Achievements/Rectangle.png\";\r\nimport { getUserAchievements } from \"../../../Service/user\";\r\n\r\nfunction AchievementsComponents() {\r\n  const [completedAchievements, setCompletedAchievements] = useState([]);\r\n\r\n  const getAchievements = async () => {\r\n    try {\r\n      const response = await getUserAchievements();\r\n      setCompletedAchievements(response?.data.completed);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAchievements();\r\n  }, [])\r\n\r\n  const badgeImageMap = {\r\n    silver: silver,\r\n    bronze: bronze,\r\n    gold: gold,\r\n  };\r\n\r\n  return (\r\n    <div className=\"achievements_components m-3 pb-2 d-flex flex-md-row justify-content-start gap-4\">\r\n      {completedAchievements?.map((item, index) => (\r\n        <div className=\"single-card\" key={index}>\r\n          <img src={badgeImageMap[item.badge]} alt=\"achievement\" />\r\n          <div className=\"image_text\">\r\n            <img src={rectangle} alt=\"rectangle\" />\r\n            <div className=\"text\">\r\n              <h6>{item.title}</h6>\r\n              {/* <h6>{item.p}</h6> */}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AchievementsComponents;\r\n","import { useEffect } from \"react\";\r\nimport \"./investorHome.scss\";\r\n// import profilePic from \"../../../Images/investorIcon/profilePic.webp\";\r\n// import AddUserIcon from \"../../../Images/investorIcon/Add-User.svg\";\r\n// import { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\n// import { Link } from \"react-router-dom\";\r\nimport FeaturedPostsContainer from \"../InvestorGlobalCards/MilestoneCard/FeaturedPostsContainer\";\r\n// import { SidebarContext } from \"../../Sidebar/SidebarContext\";\r\n// import SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RightProfileCard from \"../InvestorGlobalCards/RightProfileCard/RightProfileCard\";\r\nimport RecommendationCard from \"../InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport CompanyDetailsCard from \"../InvestorGlobalCards/CompanyDetails/CompanyDetailsCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStartupByFounderId } from \"../../../Service/user\";\r\nimport {\r\n  selectCompanyDataId,\r\n  selectCompanyFounderId,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\n// import CoinIcon from \"../../../Images/investorView/Rectangle.png\";\r\n// import ColorCard from \"../InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport ConnectionCard from \"../ConnectionCard/ConnectionCard\";\r\nimport ProfessionalInfo from \"../StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfo\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\n// import OnBoardUser from \"../../OnBoardUser/OnBoardUser\";\r\n// import { startupOnboardingSteps } from \"../../OnBoardUser/steps/startup\";\r\nimport ColorCards from \"./Components/ColorCards/ColorCards\";\r\nimport UserBio from \"./Components/UserBio/UserBio\";\r\nimport MissingDetails from \"./Components/Questionnaire/MissingDetails\";\r\nimport AchievementsComponents from \"../AchievementsPageComponents/AchievementsComponents\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Startup profile page\r\nconst InvestorHome = () => {\r\n  // Fetch loggedInUser from global state\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const loggedInUserId = useSelector((state) => state.user.loggedInUser._id);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const companyDataId = useSelector(selectCompanyDataId);\r\n  const dispatch = useDispatch();\r\n\r\n  // Update title\r\n  useEffect(() => {\r\n    document.title = \"Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Profile\"));\r\n  }, [dispatch]);\r\n\r\n  // Fetch startup company data\r\n  useEffect(() => {\r\n    if (!companyDataId) {\r\n      getStartupByFounderId(loggedInUserId)\r\n        .then(({ data }) => {\r\n          dispatch(setUserCompany(data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching startup data:\", error);\r\n        });\r\n    }\r\n  }, [loggedInUserId, dispatch, companyDataId]);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"investorHome_main_container \">\r\n        <div className=\"two_column_wrapper\">\r\n          <div className=\"seventy d-flex flex-column gap-3\">\r\n            {/* Small Profile Card */}\r\n            {/* <SmallProfileCard className={\"\"} /> */}\r\n\r\n            <div className=\"content-70 d-flex flex-column gap-4\">\r\n              {/* Professional info component */}\r\n              <ProfessionalInfo theme={\"startup\"} />\r\n\r\n              {/* offcanvas trigger - Add missing details. Show if details are missing */}\r\n              <MissingDetails />\r\n\r\n              {/* Bio */}\r\n              <UserBio />\r\n\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header connections-container\">\r\n                  {/* <div className=\"milestone_see_more\">\r\n                    <Link to={\"\"}>See more</Link>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"col-12 mt-2 milestones\">\r\n                  <ConnectionCard />\r\n                </div>\r\n              </div>\r\n\r\n              {/* achievements */}\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header \">\r\n                  <h2 className=\"typography\">Achievements</h2>\r\n                  <div className=\"milestone_see_more\">\r\n                    <Link to={\"/profile/achievements\"}>See more</Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 mt-2 milestones\">\r\n                  <AchievementsComponents />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Featured Posts */}\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header\">\r\n                  <h2 className=\"typography\">Featured posts</h2>\r\n                  {/* <div className=\"milestone_see_more\">\r\n                    <Link to={\"\"}>See more</Link>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"mt-2 milestones\">\r\n                  <FeaturedPostsContainer userId={loggedInUserId} />\r\n                </div>\r\n              </div>\r\n              {/* Featured Posts End */}\r\n\r\n              {/* Company Details */}\r\n              <div className=\"\">\r\n                <CompanyDetailsCard\r\n                  className=\"\"\r\n                  userDetails={loggedInUser}\r\n                  page={loggedInUserId === companyFounderId ? \"edit\" : \"\"}\r\n                />\r\n              </div>\r\n\r\n              {/* Color Cards */}\r\n              <ColorCards />\r\n            </div>\r\n          </div>\r\n          <div className=\"thirty d-none d-xl-block\">\r\n            <RightProfileCard />\r\n            <RecommendationCard />\r\n            <NewsCorner />\r\n          </div>\r\n        </div>\r\n\r\n        {/* OffCanvas for questionnaire */}\r\n        {/* <Questionnaire\r\n          countData={countData}\r\n          setCountData={setCountData}\r\n          handleRefetch={handleRefetch}\r\n        /> */}\r\n      </div>\r\n      {/* <OnBoardUser steps={startupOnboardingSteps.profilePage} /> */}\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default InvestorHome;\r\n"],"names":["_ref","userIdData","userId","useSelector","selectLoggedInUserId","_useState","useState","_useState2","_slicedToArray","connections","setConnections","_useState3","_useState4","loading","setLoading","useEffect","getUserConnections","then","data","catch","err","console","log","_jsx","className","children","SpinnerBS","colorClass","length","_Fragment","map","item","index","_jsxs","Link","to","concat","firstName","toLowerCase","lastName","oneLinkId","style","color","src","profilePicture","alt","minHeight","designation","text","image","amount","background","onAmountChange","field","colorCardData","noRupee","_ref$isInvestor","isInvestor","_ref$isOneLink","isOneLink","isNotEditable","loggedInUser","state","user","isEditMode","setIsEditMode","editedAmount","setEditedAmount","dispatch","useDispatch","type","id","value","onChange","e","target","onBlur","updatedData","founderId","_id","colorCard","_objectSpread","_defineProperty","postInvestorData","res","setUserCompany","error","postStartUpData","autoFocus","onClick","htmlFor","width","ColorCards","colorCardInfo","_ref$isNotEditable","selectColorCardData","companyFounderId","selectCompanyFounderId","loggedInUserId","setColorCardData","setField","handleAmountChange","currentfield","updatedAmount","prevData","ColorCard","CoinIcon","last_round_investment","total_investment","no_of_investers","fund_ask","valuation","raised_funds","completedAchievements","setCompletedAchievements","getAchievements","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getUserAchievements","sent","completed","t0","message","stop","apply","arguments","badgeImageMap","silver","bronze","gold","badge","rectangle","title","companyDataId","selectCompanyDataId","document","setPageTitle","getStartupByFounderId","MaxWidthWrapper","ProfessionalInfo","theme","MissingDetails","UserBio","ConnectionCard","AchievementsComponents","FeaturedPostsContainer","CompanyDetailsCard","userDetails","page","RightProfileCard","RecommendationCard","NewsCorner"],"sourceRoot":""}