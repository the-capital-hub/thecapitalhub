{"version":3,"file":"static/js/1649.1472e1e4.chunk.js","mappings":"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","sources":["components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","pages/StartUp/CompanyProfile/CompanyProfilePage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./newscorner.scss\";\r\nimport { Link } from \"react-router-dom\";\r\nimport startupOneImage from \"../../../../Images/blog/1 AsPGU1Q42C9lsVRoMg91Nw.webp\";\r\nimport startupTwoImage from \"../../../../Images/blog/eighttips.webp\";\r\nimport startupThreeImage from \"../../../../Images/blog/threefive.webp\";\r\n\r\nconst NewsCorner = ({ title, btnlink }) => {\r\n  // Fetch news items\r\n  const newsItems = [\r\n    {\r\n      title:\r\n        \"Why Mentoring Matters: Why Angel Investors Should Prioritize Mentorship Before Investing in a Startup\",\r\n      btnlink: \"/blog/startupOne\",\r\n      image: startupOneImage,\r\n      id: 1,\r\n    },\r\n    {\r\n      title: \"8 Tips to start raising Angel investments for startups\",\r\n      btnlink: \"/blog/startupTwo\",\r\n      image: startupTwoImage,\r\n      id: 2,\r\n    },\r\n    {\r\n      title: \"HOW TO BUILD A GREAT STARTUP by Pramod Badiger\",\r\n      btnlink: \"/blog/startupThree\",\r\n      image: startupThreeImage,\r\n      id: 3,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"newscorner_container\">\r\n        <div className=\"col-12 newscorner_card\">\r\n          <div className=\"card mt-2 right_view_profile_card right_view_profile\">\r\n            <div className=\"card-header\">\r\n              <div className=\"title\">\r\n                <span>News Corner</span>\r\n              </div>\r\n            </div>\r\n            {newsItems.map((item, index) => (\r\n              <Link\r\n                to={item.btnlink ? item.btnlink : \"\"}\r\n                style={{ textDecoration: \"none\" }}\r\n                target=\"_blank\"\r\n                className=\"card-body newscorner_card_body \"\r\n                key={item.id}\r\n              >\r\n                <div className=\"newscorner_card_text d-flex align-items-center gap-1\">\r\n                  <h4 className=\"smallest_typo\">\r\n                    {item.title\r\n                      ? item.title\r\n                      : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                  </h4>\r\n                  <div className=\"newsImage__container\">\r\n                    <img\r\n                      src={item.image}\r\n                      alt=\"News\"\r\n                      style={{\r\n                        width: \"100px\",\r\n                        height: \"auto\",\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  {/* <Link\r\n                      to={item.btnlink ? item.btnlink : \"\"}\r\n                      style={{ textDecoration: \"none\" }}\r\n                      target=\"_blank\"\r\n                      className=\"d-flex justify-content-center align-items-center mt-1 show__more__link mx-auto\"\r\n                    >\r\n                      <button className=\"d-flex align-items-center justify-content-center show__more\">\r\n                        <span className=\"text-center\">Show more</span>\r\n                      </button>\r\n                    </Link> */}\r\n                </div>\r\n              </Link>\r\n            ))}\r\n            {/* <hr className=\"hr\" /> */}\r\n            {/* <div className=\"card-body newscorner_card_body \">\r\n              <div className=\"newscorner_card_text\">\r\n                <h4 className=\"smallest_typo\">\r\n                  {title\r\n                    ? title\r\n                    : \" Cellbell startup has raised to $10 million dollor funding\"}\r\n                </h4>\r\n                <Link to={btnlink ? btnlink : \"\"} style={{textDecoration:\"none\"}}>\r\n                  <button>\r\n                    <span>Show more</span>\r\n                  </button>\r\n                </Link>\r\n              </div>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NewsCorner;\r\n","var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./CompanyProfilePage.scss\";\r\nimport CompanyProfile from \"../../../components/NewInvestor/CompanyProfileComponents/CompanyProfile\";\r\nimport SmallProfileCard from \"../../../components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RecommendationCard from \"../../../components/Investor/InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../../../components/Investor/InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport {\r\n  getStartupByFounderId,\r\n  searchStartUps,\r\n  addStartUpToUser,\r\n  updateUserAPI,\r\n  addNotificationAPI,\r\n} from \"../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport DefaultAvatar from \"../../../Images/Chat/default-user-avatar.webp\";\r\nimport AfterSuccessPopUp from \"../../../components/PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport {\r\n  selectLoggedInUserId,\r\n  selectUserCompanyData,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n// import achievement from \"../../../Images/Investor/Achievements/img_1.png\";\r\nimport { achievementTypes } from \"../../../components/Toasts/AchievementToast/types\";\r\nimport AchievementToast from \"../../../components/Toasts/AchievementToast/AchievementToast\";\r\n\r\nexport default function CompanyProfilePage() {\r\n  const navigate = useNavigate();\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n  const userCompanyData = useSelector(selectUserCompanyData);\r\n  const dispatch = useDispatch();\r\n\r\n  const [companyData, setCompanyData] = useState(userCompanyData);\r\n  const [loading, setLoading] = useState(false);\r\n  const [companies, setCompanies] = useState([]);\r\n  const [selectedCompanyId, setSelectedCompanyId] = useState(null);\r\n  const [showSuccess, setShowSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (!userCompanyData) {\r\n      setLoading(true);\r\n      getStartupByFounderId(loggedInUserId)\r\n        .then(({ data }) => {\r\n          setCompanyData(data);\r\n          dispatch(setUserCompany(data));\r\n          setLoading(false);\r\n        })\r\n        .catch((error) => {\r\n          setLoading(false);\r\n          console.error(\"Error fetching startup data:\", error.message);\r\n        });\r\n    }\r\n    document.title = \"Company Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Company\"));\r\n  }, [dispatch, userCompanyData, loggedInUserId]);\r\n\r\n  const handleSearchInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    // if (newValue.length > 2) {\r\n    searchStartUps(newValue)\r\n      .then(({ data }) => {\r\n        setCompanies(data);\r\n        console.log(data);\r\n      })\r\n      .catch(() => {\r\n        setCompanies([]);\r\n      });\r\n    // }\r\n    setSelectedCompanyId(null);\r\n  };\r\n\r\n  const handleCompanySelection = (companyId, companyName) => {\r\n    setSelectedCompanyId(companyId);\r\n    const searchInput = document.querySelector(\".search-company-input\");\r\n    searchInput.value = companyName;\r\n  };\r\n\r\n  const handleAddStartup = async () => {\r\n    try {\r\n      const response = await addStartUpToUser(\r\n        loggedInUserId,\r\n        selectedCompanyId\r\n      );\r\n      if (response.isFirst) {\r\n        notify();\r\n        const notificationBody = {\r\n          recipient: loggedInUserId,\r\n          type: \"achievementCompleted\",\r\n          achievementId: \"6564687349186bca517cd0cd\",\r\n        };\r\n        addNotificationAPI(notificationBody)\r\n          .then((data) => console.log(\"Added\"))\r\n          .catch((error) => console.error(error.message));\r\n      }\r\n      if (response.status === 200) {\r\n        setShowSuccess(true);\r\n        getStartupByFounderId(loggedInUserId)\r\n          .then(({ data }) => {\r\n            setCompanyData(data);\r\n            dispatch(setUserCompany(data));\r\n            setSelectedCompanyId(null);\r\n            setCompanies([]);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching startup data:\", error.message);\r\n          });\r\n      }\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  const handleAddNew = async () => {\r\n    try {\r\n      const requestBody = {\r\n        userId: loggedInUserId,\r\n        startUp: null,\r\n      };\r\n      const response = await updateUserAPI(requestBody);\r\n      console.log(response);\r\n      navigate(\"/company-profile/edit\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const notify = () =>\r\n    toast.custom((t) => <AchievementToast type={achievementTypes.employer} />);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"companyProfilePage__wrapper\">\r\n        {/* Main content */}\r\n        <div className=\"main__content\">\r\n          <SmallProfileCard text={\"Company Profile\"} />\r\n          <div className=\"edit-container\">\r\n            {!loading && (\r\n              <>\r\n                {companyData?.length !== 0 ? (\r\n                  companyData?.founderId === loggedInUserId ? (\r\n                    <div className=\"edit_company_text rounded-4 p-4 shadow-sm\">\r\n                      <Link\r\n                        to=\"/company-profile/edit\"\r\n                        className=\"text-decoration-none  fs-5\"\r\n                      >\r\n                        Edit company details\r\n                      </Link>\r\n                    </div>\r\n                  ) : (\r\n                    <div className=\"add_company_data rounded-4 p-4 \">\r\n                      {/* <Link to=\"/company-profile/edit\" className=\"text-decoration-none text-dark fs-5\"> */}\r\n                      <div class=\"text-center\">\r\n                        <button\r\n                          className=\"btn-base startup \"\r\n                          onClick={handleAddNew}\r\n                        >\r\n                          Add new company details\r\n                        </button>\r\n                      </div>\r\n                      {/* </Link> */}\r\n                      <div className=\"or-text-container\">\r\n                        <p className=\"text-decoration-none text-dark fs-5\">\r\n                          Or\r\n                        </p>\r\n                      </div>\r\n                      <p className=\"text-decoration-none text-dark fs-5\">\r\n                        Choose from an existing Company\r\n                      </p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${\r\n                                  selectedCompanyId === company._id\r\n                                    ? \"active\"\r\n                                    : \"\"\r\n                                }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(\r\n                                    company._id,\r\n                                    company.company\r\n                                  )\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.company}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base startup\"\r\n                          onClick={handleAddStartup}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  )\r\n                ) : (\r\n                  <div className=\"bg-white rounded-4 p-4\">\r\n                    <Link\r\n                      to=\"/company-profile/edit\"\r\n                      className=\"text-decoration-none text-dark fs-5\"\r\n                    >\r\n                      <button className=\"btn-base startup\">\r\n                        Add company details\r\n                      </button>\r\n                    </Link>\r\n                    <div className=\"or-text-container\">\r\n                      <p className=\"text-decoration-none text-dark fs-5\">Or</p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"text-decoration-none text-dark fs-5\">\r\n                        Choose from an existing Company\r\n                      </p>\r\n                      <div>\r\n                        <input\r\n                          type=\"text\"\r\n                          placeholder=\"Search company\"\r\n                          className=\"search-company-input\"\r\n                          onChange={handleSearchInputChange}\r\n                        />\r\n                        {companies.length !== 0 && (\r\n                          <div className=\"suggestion\">\r\n                            {companies.map((company, index) => (\r\n                              <div\r\n                                className={`suggestion-item ${\r\n                                  selectedCompanyId === company._id\r\n                                    ? \"active\"\r\n                                    : \"\"\r\n                                }`}\r\n                                key={index}\r\n                                onClick={() =>\r\n                                  handleCompanySelection(\r\n                                    company._id,\r\n                                    company.company\r\n                                  )\r\n                                }\r\n                              >\r\n                                <img\r\n                                  src={company.logo || DefaultAvatar}\r\n                                  alt={`Company Logo ${index}`}\r\n                                  className=\"suggestion-logo\"\r\n                                />\r\n                                {company.company}\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        )}\r\n                        <button\r\n                          className=\"btn-base startup\"\r\n                          onClick={handleAddStartup}\r\n                        >\r\n                          Save\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n          <Toaster\r\n            containerStyle={{\r\n              top: \"100px\",\r\n            }}\r\n            toastOptions={{\r\n              duration: 10000,\r\n            }}\r\n          />\r\n          {!loading ? (\r\n            companyData?.length === 0 ? (\r\n              <div className=\"bg-white rounded-4 p-4\">\r\n                <p>No company found.</p>\r\n              </div>\r\n            ) : (\r\n              <CompanyProfile\r\n                isOnelink={true}\r\n                companyData={companyData}\r\n                startup=\"true\"\r\n              />\r\n            )\r\n          ) : (\r\n            <div className=\"mx-auto w-100 bg-white rounded-4 p-5 d-flex justify-content-center min-vh-100\">\r\n              <div class=\"spinner-grow orange\" role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n        {/* Right side content */}\r\n        <div className=\"right__content\">\r\n          <RecommendationCard />\r\n          <NewsCorner />\r\n        </div>\r\n        {showSuccess && (\r\n          <AfterSuccessPopUp\r\n            // withoutOkButton\r\n            onClose={() => setShowSuccess(!showSuccess)}\r\n            successText=\"Company Added Successfully\"\r\n          />\r\n        )}\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n}\r\n"],"names":["_ref","title","btnlink","newsItems","image","startupOneImage","id","startupTwoImage","startupThreeImage","_jsx","_Fragment","children","className","_jsxs","map","item","index","Link","to","style","textDecoration","target","src","alt","width","height","objectFit","dateString","text","useSelector","state","user","loggedInUser","Date","toDateString","toLocaleDateString","weekday","month","day","CompanyProfilePage","navigate","useNavigate","loggedInUserId","selectLoggedInUserId","userCompanyData","selectUserCompanyData","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","companyData","setCompanyData","_useState3","_useState4","loading","setLoading","_useState5","_useState6","companies","setCompanies","_useState7","_useState8","selectedCompanyId","setSelectedCompanyId","_useState9","_useState10","showSuccess","setShowSuccess","useEffect","getStartupByFounderId","then","data","setUserCompany","catch","error","console","message","document","setPageTitle","handleSearchInputChange","e","newValue","value","searchStartUps","_ref2","log","handleCompanySelection","companyId","companyName","querySelector","handleAddStartup","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","notificationBody","wrap","_context","prev","next","addStartUpToUser","sent","isFirst","notify","recipient","type","achievementId","addNotificationAPI","status","_ref4","t0","stop","apply","arguments","handleAddNew","_ref5","_callee2","requestBody","_context2","userId","startUp","updateUserAPI","toast","custom","t","AchievementToast","achievementTypes","employer","MaxWidthWrapper","SmallProfileCard","length","founderId","class","onClick","placeholder","onChange","company","concat","_id","logo","DefaultAvatar","Toaster","containerStyle","top","toastOptions","duration","role","CompanyProfile","isOnelink","startup","RecommendationCard","NewsCorner","AfterSuccessPopUp","onClose","successText"],"sourceRoot":""}