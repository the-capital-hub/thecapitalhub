{"version":3,"file":"static/js/2306.570985bc.chunk.js","mappings":"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","sources":["components/Investor/Connection/Connection.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Connection.scss\";\r\nimport SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport {\r\n  acceptConnectionAPI,\r\n  cancelConnectionRequestAPI,\r\n  getSentConnectionsAPI,\r\n  getUserConnections,\r\n  pendingConnectionRequestsAPI,\r\n  rejectConnectionAPI,\r\n  removeConnection,\r\n} from \"../../../Service/user\";\r\nimport TimeAgo from \"timeago-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\nimport toast from \"react-hot-toast\";\r\nimport deleteIcon from \"../../../Images/post/delete.png\";\r\nimport achievement from \"../../../Images/Investor/Achievements/img_1.png\";\r\nimport AchievementToast from \"../../Toasts/AchievementToast/AchievementToast\";\r\nimport { achievementTypes } from \"../../Toasts/AchievementToast/types\";\r\n\r\nconst Connection = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"received\"); // Default to \"received\"\r\n  const [receivedConnections, setReceivedConnections] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [getAllConnection, setGetAllConnection] = useState([]); // State for accepted connections\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const dispatch = useDispatch();\r\n\r\n  // Function to handle tab change\r\n  useEffect(() => {\r\n    getUserConnections(loggedInUser._id).then((res) => {\r\n      console.log(\"res2-->\", res);\r\n      setGetAllConnection(res.data); // Set accepted connections data\r\n    });\r\n  }, []);\r\n  const handleTabChange = (tab) => {\r\n    if (tab === \"received\") {\r\n      getReceivedConnections();\r\n    } else if (tab === \"accepted\") {\r\n      getUserConnections(loggedInUser._id).then((res) => {\r\n        console.log(\"res-->\", res);\r\n        setGetAllConnection(res.data); // Set accepted connections data\r\n      });\r\n    } else {\r\n      getSentConnection();\r\n    }\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  // Function to get received connections\r\n  const getReceivedConnections = () => {\r\n    setLoading(true);\r\n    pendingConnectionRequestsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  // Function to get sent connections\r\n  const getSentConnection = () => {\r\n    setLoading(true);\r\n    getSentConnectionsAPI()\r\n      .then(({ data }) => setReceivedConnections(data))\r\n      .catch((err) => console.log(err))\r\n      .finally(() => setLoading(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.title = \"Connections | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Connections\"));\r\n    getReceivedConnections();\r\n  }, [dispatch]);\r\n\r\n  const notify = () =>\r\n    toast.custom((t) => (\r\n      <AchievementToast type={achievementTypes.pleasureDoingBusiness} />\r\n    ));\r\n\r\n  // Function to accept a connection\r\n  const acceptConnectionHandler = async (connectionId) => {\r\n    try {\r\n      const response = await acceptConnectionAPI(connectionId);\r\n      if (response.isFirst) {\r\n        notify();\r\n      }\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error accepting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to reject a connection\r\n  const rejectConnectionHandler = async (connectionId) => {\r\n    try {\r\n      await rejectConnectionAPI(connectionId);\r\n      getReceivedConnections();\r\n    } catch (error) {\r\n      console.log(\"Error rejecting connection: \", error);\r\n    }\r\n  };\r\n\r\n  // Function to cancel a sent connection request\r\n  const cancelConnectionRequest = async (connectionId) => {\r\n    try {\r\n      await cancelConnectionRequestAPI(connectionId);\r\n      getSentConnection();\r\n    } catch (error) {\r\n      console.log(\"Error cancelling connection: \", error);\r\n    }\r\n  };\r\n\r\n  const showRemoveConfirmation = () => {\r\n    return window.confirm(\"Are you sure you want to remove this connection?\");\r\n  };\r\n\r\n  // removeConnectionHandler\r\n  const handleRemoveConnection = async (userId) => {\r\n    if (showRemoveConfirmation()) {\r\n      try {\r\n        await removeConnection(userId);\r\n        getUserConnections(loggedInUser._id).then((res) => {\r\n          setGetAllConnection(res.data);\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Error removing connection: \", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"connection_main_container mb-4\">\r\n        <SmallProfileCard text={\"Connections\"} />\r\n        <section className=\"content_section\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 box p-3 p-md-4 \">\r\n              <h4>Manage Connections</h4>\r\n              <nav className=\"connection_nav\">\r\n                <button\r\n                  className={`connection_nav_link fs-6 ${\r\n                    selectedTab === \"received\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"received\")}\r\n                >\r\n                  Received\r\n                </button>\r\n                <button\r\n                  className={`connection_nav_link fs-6  ${\r\n                    selectedTab === \"sent\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"sent\")}\r\n                >\r\n                  Sent\r\n                </button>\r\n                <button\r\n                  className={`connection_nav_link fs-6  ${\r\n                    selectedTab === \"accepted\" ? \"active\" : \"\"\r\n                  }`}\r\n                  onClick={() => handleTabChange(\"accepted\")}\r\n                >\r\n                  Accepted\r\n                </button>\r\n              </nav>\r\n              <hr />\r\n              <div className=\"connection_list\">\r\n                {loading ? (\r\n                  <h5 className=\"text-center my-5\">\r\n                    <div class=\"d-flex justify-content-center\">\r\n                      <div class=\"spinner-border text-secondary\" role=\"status\">\r\n                        <span class=\"visually-hidden\">Loading...</span>\r\n                      </div>\r\n                    </div>\r\n                  </h5>\r\n                ) : selectedTab === \"received\" ? (\r\n                  receivedConnections.length ? (\r\n                    receivedConnections.map(\r\n                      ({ sender, updatedAt, _id }, index) => (\r\n                        <div\r\n                          key={index}\r\n                          className=\"connection_item d-flex flex-column flex-md-row justify-content-between \"\r\n                        >\r\n                          {/* Render content for received connections here */}\r\n                          <div className=\"connection_left\">\r\n                            <Link to={`/user/${sender?._id}`}>\r\n                              <img\r\n                                src={sender.profilePicture}\r\n                                alt={`${sender.firstName} ${sender.lastName}`}\r\n                                style={{ objectFit: \"cover\" }}\r\n                              />\r\n                            </Link>\r\n                            <div className=\"body_container\">\r\n                              <p className=\"connection_name h5\">\r\n                                <Link\r\n                                  to={`/user/${sender?._id}`}\r\n                                  className=\"  text-decoration-none\"\r\n                                >\r\n                                  {`${sender.firstName} ${sender.lastName}`}\r\n                                </Link>\r\n                              </p>\r\n                              <p className=\"connection_designation\">\r\n                                {sender.designation}\r\n                              </p>\r\n                              <p>\r\n                                {\" \"}\r\n                                {sender.startUp?.company\r\n                                  ? sender.startUp?.company\r\n                                  : sender.investor?.company}\r\n                              </p>\r\n                              <p>\r\n                                <TimeAgo\r\n                                  className=\"connection_time\"\r\n                                  datetime={updatedAt}\r\n                                  locale=\"\"\r\n                                />\r\n                              </p>\r\n                            </div>\r\n                            <div className=\"connection_btn mt-3 mt-md-0  d-flex  d-md-none gap-2\">\r\n                              <button\r\n                                onClick={() => rejectConnectionHandler(_id)}\r\n                                className=\"ignore_button\"\r\n                              >\r\n                                Ignore\r\n                              </button>\r\n                              <button\r\n                                onClick={() => acceptConnectionHandler(_id)}\r\n                                className=\"accept_button\"\r\n                              >\r\n                                Accept\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-cente d-none d-md-block\">\r\n                            <button\r\n                              onClick={() => rejectConnectionHandler(_id)}\r\n                              className=\"ignore_button\"\r\n                            >\r\n                              Ignore\r\n                            </button>\r\n                            <button\r\n                              onClick={() => acceptConnectionHandler(_id)}\r\n                              className=\"accept_button\"\r\n                            >\r\n                              Accept\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      )\r\n                    )\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5 text-secondary\">\r\n                      No received connections.\r\n                    </h5>\r\n                  )\r\n                ) : selectedTab === \"sent\" ? (\r\n                  <div className=\"sent_placeholder\">\r\n                    {receivedConnections.length ? (\r\n                      receivedConnections.map(\r\n                        ({ receiver, updatedAt, _id }, index) => (\r\n                          <div\r\n                            key={index}\r\n                            className=\"connection_item py-2 d-flex flex-column flex-md-row justify-content-between \"\r\n                          >\r\n                            {/* Render content for sent connections here */}\r\n                            <div className=\"connection_left\">\r\n                              <Link to={`/user/${receiver?._id}`}>\r\n                                <img\r\n                                  src={receiver?.profilePicture}\r\n                                  alt={`${receiver?.firstName} ${receiver?.lastName}`}\r\n                                  style={{ objectFit: \"cover\" }}\r\n                                />\r\n                              </Link>\r\n                              <div className=\"body_container\">\r\n                                <p className=\"connection_name h5\">\r\n                                  <Link\r\n                                    to={`/user/${receiver?._id}`}\r\n                                    className=\"  text-decoration-none\"\r\n                                  >\r\n                                    {`${receiver?.firstName} ${receiver?.lastName}`}\r\n                                  </Link>\r\n                                </p>\r\n                                <p className=\"connection_designation\">\r\n                                  {receiver?.designation}\r\n                                </p>\r\n                                <p>\r\n                                  {\" \"}\r\n                                  {receiver.startUp?.company\r\n                                    ? receiver.startUp?.company\r\n                                    : receiver.investor?.company}\r\n                                </p>\r\n                                <p>\r\n                                  <TimeAgo\r\n                                    className=\"connection_time\"\r\n                                    datetime={updatedAt}\r\n                                    locale=\"\"\r\n                                  />\r\n                                </p>\r\n                              </div>\r\n                              <div className=\"connection_right mt-3 mt-md-0  ms-auto my-auto  d-md-none d-block \">\r\n                                <img\r\n                                  src={deleteIcon}\r\n                                  alt={`delete`}\r\n                                  onClick={() => cancelConnectionRequest(_id)}\r\n                                />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center d-none d-md-block\">\r\n                              <button\r\n                                onClick={() => cancelConnectionRequest(_id)}\r\n                                className=\"py-2 px-3 rounded-5\"\r\n                              >\r\n                                Cancel Request\r\n                              </button>\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      )\r\n                    ) : (\r\n                      <h5 className=\"text-center my-5 text-secondary\">\r\n                        No sent connections.\r\n                      </h5>\r\n                    )}\r\n                  </div>\r\n                ) : selectedTab === \"accepted\" ? (\r\n                  // Render content for the \"Accepted\" tab here using getAllConnection\r\n                  getAllConnection.length ? (\r\n                    getAllConnection.map((data, index) => (\r\n                      // console.log(\"data-->\", data)\r\n                      <div\r\n                        key={index}\r\n                        className=\"connection_item d-flex flex-column flex-md-row justify-content-between\"\r\n                      >\r\n                        {/* Render the accepted connection content here */}\r\n                        <div className=\"connection_left\">\r\n                          <Link to={`/user/${data._id}`}>\r\n                            <img\r\n                              src={data.profilePicture}\r\n                              alt={`${data.firstName} ${data.lastname}`}\r\n                              style={{ objectFit: \"cover\" }}\r\n                            />\r\n                          </Link>\r\n                          <div className=\"body_container\">\r\n                            <p className=\"connection_name h5\">\r\n                              <Link\r\n                                to={`/user/${data._id}`}\r\n                                className=\"  text-decoration-none\"\r\n                              >\r\n                                {`${data.firstName ? data.firstName : \"name\"} ${\r\n                                  data.lastName ? data.lastName : \"\"\r\n                                }`}\r\n                              </Link>\r\n                            </p>\r\n                            <p className=\"connection_designation\">\r\n                              {data.designation ? data.designation : \"\"}\r\n                            </p>\r\n                            <p>\r\n                              {\" \"}\r\n                              {data.startUp?.company\r\n                                ? data.startUp?.company\r\n                                : data.investor?.company}\r\n                            </p>\r\n\r\n                            <p>\r\n                              {/* <TimeAgo\r\n                                className=\"connection_time\"\r\n                                datetime={data.updatedAt ? data.updatedAt : \"\"}\r\n                                locale=\"\"\r\n                              /> */}\r\n                            </p>\r\n                          </div>\r\n                          <div className=\"connection_right mt-3 mt-md-0  ms-auto my-auto  d-md-none d-block \">\r\n                            <img\r\n                              src={deleteIcon}\r\n                              alt={`delete`}\r\n                              onClick={() => handleRemoveConnection(data._id)}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"connection_right mt-3 mt-md-0 align-items-center justify-content-center d-none d-md-block\">\r\n                          <button\r\n                            onClick={() => handleRemoveConnection(data._id)}\r\n                            className=\"py-2 px-3 rounded-5\"\r\n                          >\r\n                            Remove Connection\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <h5 className=\"text-center my-5 text-secondary\">\r\n                      No accepted connections.\r\n                    </h5>\r\n                  )\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default Connection;\r\n","var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","selectedTab","setSelectedTab","_useState3","_useState4","receivedConnections","setReceivedConnections","_useState5","_useState6","loading","setLoading","_useState7","_useState8","getAllConnection","setGetAllConnection","loggedInUser","useSelector","state","user","dispatch","useDispatch","useEffect","getUserConnections","_id","then","res","console","log","data","handleTabChange","tab","getReceivedConnections","getSentConnection","pendingConnectionRequestsAPI","_ref","catch","err","finally","getSentConnectionsAPI","_ref2","document","title","setPageTitle","acceptConnectionHandler","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","connectionId","wrap","_context","prev","next","acceptConnectionAPI","sent","isFirst","toast","custom","t","_jsx","AchievementToast","type","achievementTypes","pleasureDoingBusiness","t0","stop","_x","apply","arguments","rejectConnectionHandler","_ref4","_callee2","_context2","rejectConnectionAPI","_x2","cancelConnectionRequest","_ref5","_callee3","_context3","cancelConnectionRequestAPI","_x3","handleRemoveConnection","_ref6","_callee4","userId","_context4","window","confirm","removeConnection","_x4","MaxWidthWrapper","children","_jsxs","className","SmallProfileCard","text","concat","onClick","class","role","length","map","_ref7","index","_sender$startUp","_sender$startUp2","_sender$investor","sender","updatedAt","Link","to","src","profilePicture","alt","firstName","lastName","style","objectFit","designation","startUp","company","investor","TimeAgo","datetime","locale","_ref8","_receiver$startUp","_receiver$startUp2","_receiver$investor","receiver","deleteIcon","_data$startUp","_data$startUp2","_data$investor","lastname","dateString","width","Date","toDateString","toLocaleDateString","weekday","month","day","_Fragment"],"sourceRoot":""}