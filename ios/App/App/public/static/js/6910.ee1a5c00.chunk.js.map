{"version":3,"file":"static/js/6910.ee1a5c00.chunk.js","mappings":"iPAkEA,MA1DA,SAAuBA,GAAkB,IAAfC,EAAUD,EAAVC,WAElBC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAE3BC,GAAsCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA3CI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAClCI,GAA8BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GACpBG,GAAWC,EAAAA,EAAAA,MAejB,OAbAC,EAAAA,EAAAA,YAAU,WACRH,GAAW,IACXI,EAAAA,EAAAA,IAAmBhB,GAAUD,GAC1BkB,MAAK,SAACC,GACLV,EAAeU,EAAKA,MACpBN,GAAW,EACb,IACCO,OAAM,SAACC,GACNC,QAAQC,IAAIF,GACZR,GAAW,EACb,GACJ,GAAG,CAACZ,EAAQD,KAGVwB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mFAAkFC,SAC9Fd,GACCY,EAAAA,EAAAA,KAACG,EAAAA,EAAS,CACRF,UACE,gEAGFjB,EAAYoB,OAAS,GACvBJ,EAAAA,EAAAA,KAAAK,EAAAA,SAAA,CAAAH,SACGlB,EAAYsB,KAAI,SAACC,EAAMC,GAAK,OAC3BR,EAAAA,EAAAA,KAAA,OAAKC,UAAU,eAAcC,UAC3BO,EAAAA,EAAAA,MAAA,OACER,UAAU,4EACVS,QAAS,kBAAMpB,EAAS,SAADqB,OAAUJ,EAAKK,KAAM,EAACV,SAAA,EAE7CF,EAAAA,EAAAA,KAAA,OACEa,IAAS,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,eACXC,IAAI,GACJd,UAAU,kBAEZQ,EAAAA,EAAAA,MAAA,MAAIR,UAAU,MAAMe,MAAO,CAAEC,UAAW,QAASf,SAAA,CAC1C,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMW,UAAU,IAAM,OAAJX,QAAI,IAAJA,OAAI,EAAJA,EAAMY,aAE3BnB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,MAAKC,SAAM,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMa,eAC1BpB,EAAAA,EAAAA,KAAA,UAAQC,UAAU,eAAcC,SAAC,kBAdFM,EAgB7B,OAIVR,EAAAA,EAAAA,KAAA,KAAGC,UAAU,iBAAgBC,SAAC,2BAItC,C,kJC0CA,EApGkB,SAAH3B,GAcR,IAbL8C,EAAK9C,EAAL8C,MACAC,EAAI/C,EAAJ+C,KACAC,EAAKhD,EAALgD,MACAC,EAAMjD,EAANiD,OACAC,EAAUlD,EAAVkD,WACAC,EAAcnD,EAAdmD,eACAC,EAAKpD,EAALoD,MACAC,EAAarD,EAAbqD,cACA3B,EAAS1B,EAAT0B,UACA4B,EAAOtD,EAAPsD,QAAOC,EAAAvD,EACPwD,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAAzD,EAClB0D,UAAAA,OAAS,IAAAD,GAAQA,EACjBE,EAAa3D,EAAb2D,cAEMC,GAAezD,EAAAA,EAAAA,KAAY,SAAC0D,GAAK,OAAKA,EAAMC,KAAKF,YAAY,IACnEvD,GAAoCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5C0D,EAAUxD,EAAA,GAAEyD,EAAazD,EAAA,GAChCI,GAAwCL,EAAAA,EAAAA,UAAS2C,GAAOrC,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjDsD,EAAYrD,EAAA,GAAEsD,EAAetD,EAAA,GAC9BuD,GAAWC,EAAAA,EAAAA,OAEjBnD,EAAAA,EAAAA,YAAU,WACRiD,EAAgBjB,EAClB,GAAG,CAACA,IAsCJ,OACEf,EAAAA,EAAAA,MAAA,OACER,UAAS,GAAAU,OAAKV,EAAS,wCACvBe,MAAO,CAAES,WAAAA,GAAavB,SAAA,EAEtBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA8Be,MAAO,CAAEK,MAAAA,GAAQnB,UAC5DO,EAAAA,EAAAA,MAAAJ,EAAAA,SAAA,CAAAH,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,QAAOC,SAAEoB,IACtBgB,GACCtC,EAAAA,EAAAA,KAAA,SACE4C,KAAK,OACL3C,UAAU,aACV4C,GAAG,OACHC,MAAON,EACPO,SA9Ce,SAACC,GAC1BP,EAAgBO,EAAEC,OAAOH,MAC3B,EA6CYI,OA3CO,WACjBX,GAAc,GACdb,EAAec,GACf,IAAMW,EAAc,CAClBC,UAAWjB,EAAavB,IACxByC,WAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAAO1B,GAAa,IAAA2B,EAAAA,EAAAA,GAAA,GAAG5B,EAAQa,KAEtCT,GACFyB,EAAAA,EAAAA,IAAiBL,GACdzD,MAAK,SAAC+D,GACL3D,QAAQC,IAAI,YAAU0D,GACtBf,GAASgB,EAAAA,EAAAA,IAAeD,EAAI9D,MAC9B,IACCC,OAAM,SAAC+D,GACN7D,QAAQ6D,MAAM,cAAYA,EAC5B,KAEFC,EAAAA,EAAAA,IAAgBT,GACbzD,MAAK,SAAC+D,GACL3D,QAAQC,IAAI,YAAU0D,GACtBf,GAASgB,EAAAA,EAAAA,IAAeD,EAAI9D,MAC9B,IACCC,OAAM,SAAC+D,GACN7D,QAAQ6D,MAAM,cAAYA,EAC5B,GAEN,EAkBYE,WAAS,KAGXpD,EAAAA,EAAAA,MAAA,QACER,UAAU,aACVS,QAASgB,EAzDG,WACjBQ,GAAeK,GAAc,EACpC,EAuDwD,WAAO,EAAErC,SAAA,EAEnD2B,GAAW,SAAI,IAAEW,EAAc,KAC/BP,IAAcC,IACdlC,EAAAA,EAAAA,KAAA,SAAO8D,QAAQ,OAAO7D,UAAU,WAAUC,SAAC,2BAQrDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,sBAAqBC,UAClCF,EAAAA,EAAAA,KAAA,OAAKa,IAAKU,EAAOR,IAAI,OAAOgD,MAAO,SAI3C,C,6JC9Fe,SAASC,EAAUzF,GAA4C,IAAzC0F,EAAa1F,EAAb0F,cAAaC,EAAA3F,EAAE2D,cAAAA,OAAa,IAAAgC,GAAQA,EAEjEb,GAAY3E,EAAAA,EAAAA,IAAYyF,EAAAA,IACxBC,GAAmB1F,EAAAA,EAAAA,IAAY2F,EAAAA,IAC/BC,GAAiB5F,EAAAA,EAAAA,IAAYC,EAAAA,IAGnCC,GAA0CC,EAAAA,EAAAA,UACxCwE,GAAaY,GACdnF,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAFMgD,EAAa9C,EAAA,GAAEyF,EAAgBzF,EAAA,GAGtCI,GAA0BL,EAAAA,EAAAA,UAAS,yBAAwBM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAApDyC,EAAKxC,EAAA,GAAEqF,EAAQrF,EAAA,GAGhBsF,EAAqB,SAACC,EAAcC,GACxC7E,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI2E,GACZF,EAASE,GACTH,GAAiB,SAACK,GAAQ,OAAAtB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrBsB,GAAQ,IAAArB,EAAAA,EAAAA,GAAA,GACVmB,EAAeC,GAAa,GAEjC,EAEA,OACE3E,EAAAA,EAAAA,KAAA,OAAKC,UAAU,cAAaC,SACzB0B,IACCnB,EAAAA,EAAAA,MAAA,OAAKR,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,wBACLC,MAAOuD,EACPtD,OAAQI,EAAcmD,sBACtBrD,eAAgB,SAACF,GAAM,OACrBiD,EAAmB,wBAAyBjD,EAAO,EAErDG,MAAOA,EACPC,cAAeA,EACfK,UAAWqC,IAAmBF,EAC9BlC,cAAeA,KAEjBlC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,mBACLC,MAAOuD,EACPtD,OAAQI,EAAcoD,iBACtBtD,eAAgB,SAACF,GAAM,OACrBiD,EAAmB,mBAAoBjD,EAAO,EAEhDG,MAAOA,EACPC,cAAeA,EACfK,UAAWqC,IAAmBF,EAC9BlC,cAAeA,KAEjBlC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,kBACLC,MAAOuD,EACPtD,OAAQI,EAAcqD,gBACtBvD,eAAgB,SAACF,GAAM,OACrBiD,EAAmB,kBAAmBjD,EAAO,EAE/CG,MAAOA,EACPC,cAAeA,EACfC,SAAS,EACTI,UAAWqC,IAAmBF,EAC9BlC,cAAeA,KAEjBlC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,WACLC,MAAOuD,EACPtD,OAAQI,EAAcsD,SACtBxD,eAAgB,SAACF,GAAM,OAAKiD,EAAmB,WAAYjD,EAAO,EAClEG,MAAOA,EACPC,cAAeA,EACfK,UAAWqC,IAAmBF,EAC9BlC,cAAeA,KAEjBlC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,YACLC,MAAOuD,EACPtD,OAAQI,EAAcuD,UACtBzD,eAAgB,SAACF,GAAM,OAAKiD,EAAmB,YAAajD,EAAO,EACnEG,MAAOA,EACPC,cAAeA,EACfK,UAAWqC,IAAmBF,EAC9BlC,cAAeA,KAEjBlC,EAAAA,EAAAA,KAAC6E,EAAAA,EAAS,CACRxD,MAAM,QACNI,WAAW,UACXH,KAAK,eACLC,MAAOuD,EACPtD,OAAQI,EAAcwD,aACtB1D,eAAgB,SAACF,GAAM,OACrBiD,EAAmB,eAAgBjD,EAAO,EAE5CG,MAAOA,EACPC,cAAeA,EACfK,UAAWqC,IAAmBF,EAC9BlC,cAAeA,QAM3B,C,iVC1EA,MAxCA,WACE,IAAAtD,GAA0DC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/DyG,EAAqBvG,EAAA,GAAEwG,EAAwBxG,EAAA,GAEhDyG,EAAe,eAAAhH,GAAAiH,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEGC,EAAAA,EAAAA,MAAsB,KAAD,EAAtCL,EAAQE,EAAAI,KACdZ,EAAiC,OAARM,QAAQ,IAARA,OAAQ,EAARA,EAAUjG,KAAKwG,WAAWL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAEnDhG,QAAQ6D,MAAMmC,EAAAM,GAAMC,SAAS,yBAAAP,EAAAQ,OAAA,GAAAX,EAAA,kBAEhC,kBAPoB,OAAApH,EAAAgI,MAAA,KAAAC,UAAA,MAQrBhH,EAAAA,EAAAA,YAAU,WACR+F,GACF,GAAG,IAEH,IAAMkB,EAAgB,CACpBC,OAAQA,EACRC,OAAQA,EACRC,KAAMA,GAGR,OACE5G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kFAAiFC,SACxE,OAArBmF,QAAqB,IAArBA,OAAqB,EAArBA,EAAuB/E,KAAI,SAACC,EAAMC,GAAK,OACtCC,EAAAA,EAAAA,MAAA,OAAKR,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKa,IAAK4F,EAAclG,EAAKsG,OAAQ9F,IAAI,iBACzCN,EAAAA,EAAAA,MAAA,OAAKR,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,OAAKa,IAAKiG,EAAW/F,IAAI,eACzBf,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,MAAAE,SAAKK,EAAKwG,eALkBvG,EAU5B,KAId,E,WCwGA,EAnHqB,WAEnB,IAAM2B,GAAezD,EAAAA,EAAAA,KAAY,SAAC0D,GAAK,OAAKA,EAAMC,KAAKF,YAAY,IAC7DmC,GAAiB5F,EAAAA,EAAAA,KAAY,SAAC0D,GAAK,OAAKA,EAAMC,KAAKF,aAAavB,GAAG,IACnEwD,GAAmB1F,EAAAA,EAAAA,IAAY2F,EAAAA,IAC/B2C,GAAgBtI,EAAAA,EAAAA,IAAYuI,EAAAA,IAC5BvE,GAAWC,EAAAA,EAAAA,MAqBjB,OAlBAnD,EAAAA,EAAAA,YAAU,WACR0H,SAASH,MAAQ,4BACjBrE,GAASyE,EAAAA,EAAAA,IAAa,WACxB,GAAG,CAACzE,KAGJlD,EAAAA,EAAAA,YAAU,WACHwH,IACHI,EAAAA,EAAAA,IAAsB9C,GACnB5E,MAAK,SAAAnB,GAAe,IAAZoB,EAAIpB,EAAJoB,KACP+C,GAASgB,EAAAA,EAAAA,IAAe/D,GAC1B,IACCC,OAAM,SAAC+D,GACN7D,QAAQ6D,MAAM,+BAAgCA,EAChD,GAEN,GAAG,CAACW,EAAgB5B,EAAUsE,KAG5BhH,EAAAA,EAAAA,KAACqH,EAAAA,EAAe,CAAAnH,UACdF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAC/CO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,qBAAoBC,SAAA,EACjCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mCAAkCC,UAI/CO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,sCAAqCC,SAAA,EAElDF,EAAAA,EAAAA,KAACsH,EAAAA,EAAgB,CAACC,MAAO,aAGzBvH,EAAAA,EAAAA,KAACwH,EAAAA,EAAc,KAGfxH,EAAAA,EAAAA,KAACyH,EAAAA,EAAO,KAERhH,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAKfD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAAC0H,EAAAA,EAAc,UAKnBjH,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCO,EAAAA,EAAAA,MAAA,OAAKR,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,kBAC3BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qBAAoBC,UACjCF,EAAAA,EAAAA,KAAC2H,EAAAA,GAAI,CAACC,GAAI,wBAAwB1H,SAAC,mBAGvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UACrCF,EAAAA,EAAAA,KAAC6H,EAAsB,UAK3BpH,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,8BAA6BC,UAC1CF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,sBAK7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAC8H,EAAAA,EAAsB,CAACrJ,OAAQ6F,UAMpCtE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,GAAEC,UACfF,EAAAA,EAAAA,KAAC+H,EAAAA,EAAkB,CACjB9H,UAAU,GACV+H,YAAa7F,EACb8F,KAAM3D,IAAmBF,EAAmB,OAAS,QAKzDpE,EAAAA,EAAAA,KAACgE,EAAAA,EAAU,UAGfvD,EAAAA,EAAAA,MAAA,OAAKR,UAAU,2BAA0BC,SAAA,EACvCF,EAAAA,EAAAA,KAACkI,EAAAA,EAAgB,KACjBlI,EAAAA,EAAAA,KAACmI,EAAAA,EAAkB,KACnBnI,EAAAA,EAAAA,KAACoI,EAAAA,EAAU,aAcvB,C","sources":["components/Investor/ConnectionCard/ConnectionCard.jsx","components/Investor/InvestorGlobalCards/ColoredCards/ColorCard.js","components/Investor/InvestorHome/Components/ColorCards/ColorCards.jsx","components/Investor/AchievementsPageComponents/AchievementsComponents.jsx","components/Investor/InvestorHome/InvestorHome.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./ConnectionCard.scss\";\r\nimport { getUserConnections } from \"../../../Service/user\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SpinnerBS from \"../../Shared/Spinner/SpinnerBS\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectLoggedInUserId } from \"../../../Store/features/user/userSlice\";\r\n\r\nfunction ConnectionCard({ userIdData }) {\r\n  // Fetch from store\r\n  const userId = useSelector(selectLoggedInUserId);\r\n\r\n  const [connections, setConnections] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getUserConnections(userId || userIdData)\r\n      .then((data) => {\r\n        setConnections(data.data);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      });\r\n  }, [userId, userIdData]);\r\n\r\n  return (\r\n    <div className=\"ConnectionCard_container m-3 pb-2 d-flex flex-md-row justify-content-start gap-4\">\r\n      {loading ? (\r\n        <SpinnerBS\r\n          className={\r\n            \"d-flex justify-content-center align-items-center w-100 py-5\"\r\n          }\r\n        />\r\n      ) : connections.length > 0 ? (\r\n        <>\r\n          {connections.map((item, index) => (\r\n            <div className=\"single-card \" key={index}>\r\n              <div\r\n                className=\"d-flex flex-column align-items-center justify-content-between gap-3 h-100\"\r\n                onClick={() => navigate(`/user/${item._id}`)}\r\n              >\r\n                <img\r\n                  src={item?.profilePicture}\r\n                  alt=\"\"\r\n                  className=\"rounded-pill\"\r\n                />\r\n                <h1 className=\"m-0\" style={{ minHeight: \"50px\" }}>\r\n                  {item?.firstName} {item?.lastName}\r\n                </h1>\r\n                <p className=\"m-0\">{item?.designation}</p>\r\n                <button className=\"mt-auto px-3\">Connected</button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </>\r\n      ) : (\r\n        <p className=\"text-secondary\">No connections found.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ConnectionCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./ColorCard.scss\";\r\nimport { postStartUpData, postInvestorData } from \"../../../../Service/user\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUserCompany } from \"../../../../Store/features/user/userSlice\";\r\n\r\nconst ColorCard = ({\r\n  color,\r\n  text,\r\n  image,\r\n  amount,\r\n  background,\r\n  onAmountChange,\r\n  field,\r\n  colorCardData,\r\n  className,\r\n  noRupee,\r\n  isInvestor = false,\r\n  isOneLink = false,\r\n  isNotEditable,\r\n}) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [isEditMode, setIsEditMode] = useState(false);\r\n  const [editedAmount, setEditedAmount] = useState(amount);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setEditedAmount(amount);\r\n  }, [amount]);\r\n\r\n  const handleEditClick = () => {\r\n    if (!isNotEditable) setIsEditMode(true);\r\n  };\r\n\r\n  const handleAmountChange = (e) => {\r\n    setEditedAmount(e.target.value);\r\n  };\r\n\r\n  const handleBlur = () => {\r\n    setIsEditMode(false);\r\n    onAmountChange(editedAmount);\r\n    const updatedData = {\r\n      founderId: loggedInUser._id,\r\n      colorCard: { ...colorCardData, [field]: editedAmount },\r\n    };\r\n    if (isInvestor) {\r\n      postInvestorData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    } else {\r\n      postStartUpData(updatedData)\r\n        .then((res) => {\r\n          console.log(\"Res-->\", res);\r\n          dispatch(setUserCompany(res.data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error-->\", error);\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`${className} colorcard-component card row border`}\r\n      style={{ background }}\r\n    >\r\n      <div className=\"col-7 col-sm-6 left-content\" style={{ color }}>\r\n        <>\r\n          <h3 className=\"title\">{text}</h3>\r\n          {isEditMode ? (\r\n            <input\r\n              type=\"text\"\r\n              className=\"edit_input\"\r\n              id=\"edit\"\r\n              value={editedAmount}\r\n              onChange={handleAmountChange}\r\n              onBlur={handleBlur}\r\n              autoFocus\r\n            />\r\n          ) : (\r\n            <span\r\n              className=\"rupee-sign\"\r\n              onClick={onAmountChange ? handleEditClick : () => {}}\r\n            >\r\n              {!noRupee && \"₹\"} {editedAmount}{\" \"}\r\n              {!isOneLink && !isNotEditable && (\r\n                <label htmlFor=\"edit\" className=\"edit-tip\">\r\n                  Click to edit\r\n                </label>\r\n              )}\r\n            </span>\r\n          )}\r\n        </>\r\n      </div>\r\n      <div className=\"col-5 right-content\">\r\n        <img src={image} alt=\"Card\" width={60} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ColorCard;\r\n","import React, { useState } from \"react\";\r\nimport CoinIcon from \"../../../../../Images/investorView/Rectangle.png\";\r\nimport ColorCard from \"../../../InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  selectColorCardData,\r\n  selectCompanyFounderId,\r\n  selectLoggedInUserId,\r\n} from \"../../../../../Store/features/user/userSlice\";\r\n\r\nexport default function ColorCards({ colorCardInfo, isNotEditable = false }) {\r\n  // Fetch from store\r\n  const colorCard = useSelector(selectColorCardData);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const loggedInUserId = useSelector(selectLoggedInUserId);\r\n\r\n  // State for color card\r\n  const [colorCardData, setColorCardData] = useState(\r\n    colorCard || colorCardInfo\r\n  );\r\n  const [field, setField] = useState(\"last_round_investment\");\r\n\r\n  // handle amount change\r\n  const handleAmountChange = (currentfield, updatedAmount) => {\r\n    console.log(field);\r\n    console.log(currentfield);\r\n    setField(currentfield);\r\n    setColorCardData((prevData) => ({\r\n      ...prevData,\r\n      [currentfield]: updatedAmount,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 mt-2\">\r\n      {colorCardData && (\r\n        <div className=\"card_holder\">\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#BB98FF\"\r\n            text=\"Last round investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.last_round_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"last_round_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DAC191\"\r\n            text=\"Total Investment\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.total_investment}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"total_investment\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#DCDCDC\"\r\n            text=\"No.of Investers\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.no_of_investers}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"no_of_investers\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            noRupee={true}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#2B2B2B\"\r\n            text=\"Fund ask\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.fund_ask}\r\n            onAmountChange={(amount) => handleAmountChange(\"fund_ask\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#FF7373\"\r\n            text=\"Valuation\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.valuation}\r\n            onAmountChange={(amount) => handleAmountChange(\"valuation\", amount)}\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n          <ColorCard\r\n            color=\"white\"\r\n            background=\"#9198DA\"\r\n            text=\"Raised funds\"\r\n            image={CoinIcon}\r\n            amount={colorCardData.raised_funds}\r\n            onAmountChange={(amount) =>\r\n              handleAmountChange(\"raised_funds\", amount)\r\n            }\r\n            field={field}\r\n            colorCardData={colorCardData}\r\n            isOneLink={loggedInUserId !== companyFounderId}\r\n            isNotEditable={isNotEditable}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./AchievementsComponents.scss\";\r\nimport silver from \"../../../Images/Investor/Achievements/silver.png\";\r\nimport gold from \"../../../Images/Investor/Achievements/gold.png\";\r\nimport bronze from \"../../../Images/Investor/Achievements/bronze.png\";\r\nimport rectangle from \"../../../Images/Investor/Achievements/Rectangle.png\";\r\nimport { getUserAchievements } from \"../../../Service/user\";\r\n\r\nfunction AchievementsComponents() {\r\n  const [completedAchievements, setCompletedAchievements] = useState([]);\r\n\r\n  const getAchievements = async () => {\r\n    try {\r\n      const response = await getUserAchievements();\r\n      setCompletedAchievements(response?.data.completed);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    getAchievements();\r\n  }, [])\r\n\r\n  const badgeImageMap = {\r\n    silver: silver,\r\n    bronze: bronze,\r\n    gold: gold,\r\n  };\r\n\r\n  return (\r\n    <div className=\"achievements_components m-3 pb-2 d-flex flex-md-row justify-content-start gap-4\">\r\n      {completedAchievements?.map((item, index) => (\r\n        <div className=\"single-card\" key={index}>\r\n          <img src={badgeImageMap[item.badge]} alt=\"achievement\" />\r\n          <div className=\"image_text\">\r\n            <img src={rectangle} alt=\"rectangle\" />\r\n            <div className=\"text\">\r\n              <h6>{item.title}</h6>\r\n              {/* <h6>{item.p}</h6> */}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AchievementsComponents;\r\n","import { useEffect } from \"react\";\r\nimport \"./investorHome.scss\";\r\n// import profilePic from \"../../../Images/investorIcon/profilePic.webp\";\r\n// import AddUserIcon from \"../../../Images/investorIcon/Add-User.svg\";\r\n// import { CiEdit, CiSaveUp2 } from \"react-icons/ci\";\r\n// import { Link } from \"react-router-dom\";\r\nimport FeaturedPostsContainer from \"../InvestorGlobalCards/MilestoneCard/FeaturedPostsContainer\";\r\n// import { SidebarContext } from \"../../Sidebar/SidebarContext\";\r\n// import SmallProfileCard from \"../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport RightProfileCard from \"../InvestorGlobalCards/RightProfileCard/RightProfileCard\";\r\nimport RecommendationCard from \"../InvestorGlobalCards/Recommendation/RecommendationCard\";\r\nimport NewsCorner from \"../InvestorGlobalCards/NewsCorner/NewsCorner\";\r\nimport CompanyDetailsCard from \"../InvestorGlobalCards/CompanyDetails/CompanyDetailsCard\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getStartupByFounderId } from \"../../../Service/user\";\r\nimport {\r\n  selectCompanyDataId,\r\n  selectCompanyFounderId,\r\n  setUserCompany,\r\n} from \"../../../Store/features/user/userSlice\";\r\n// import CoinIcon from \"../../../Images/investorView/Rectangle.png\";\r\n// import ColorCard from \"../InvestorGlobalCards/ColoredCards/ColorCard\";\r\nimport MaxWidthWrapper from \"../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport ConnectionCard from \"../ConnectionCard/ConnectionCard\";\r\nimport ProfessionalInfo from \"../StartupProfilePageComponents/ProfessionalInfo/ProfessionalInfo\";\r\nimport { setPageTitle } from \"../../../Store/features/design/designSlice\";\r\n// import OnBoardUser from \"../../OnBoardUser/OnBoardUser\";\r\n// import { startupOnboardingSteps } from \"../../OnBoardUser/steps/startup\";\r\nimport ColorCards from \"./Components/ColorCards/ColorCards\";\r\nimport UserBio from \"./Components/UserBio/UserBio\";\r\nimport MissingDetails from \"./Components/Questionnaire/MissingDetails\";\r\nimport AchievementsComponents from \"../AchievementsPageComponents/AchievementsComponents\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Startup profile page\r\nconst InvestorHome = () => {\r\n  // Fetch loggedInUser from global state\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const loggedInUserId = useSelector((state) => state.user.loggedInUser._id);\r\n  const companyFounderId = useSelector(selectCompanyFounderId);\r\n  const companyDataId = useSelector(selectCompanyDataId);\r\n  const dispatch = useDispatch();\r\n\r\n  // Update title\r\n  useEffect(() => {\r\n    document.title = \"Profile | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Profile\"));\r\n  }, [dispatch]);\r\n\r\n  // Fetch startup company data\r\n  useEffect(() => {\r\n    if (!companyDataId) {\r\n      getStartupByFounderId(loggedInUserId)\r\n        .then(({ data }) => {\r\n          dispatch(setUserCompany(data));\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching startup data:\", error);\r\n        });\r\n    }\r\n  }, [loggedInUserId, dispatch, companyDataId]);\r\n\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"investorHome_main_container my-5\">\r\n        <div className=\"two_column_wrapper\">\r\n          <div className=\"seventy d-flex flex-column gap-3\">\r\n            {/* Small Profile Card */}\r\n            {/* <SmallProfileCard className={\"\"} /> */}\r\n\r\n            <div className=\"content-70 d-flex flex-column gap-4\">\r\n              {/* Professional info component */}\r\n              <ProfessionalInfo theme={\"startup\"} />\r\n\r\n              {/* offcanvas trigger - Add missing details. Show if details are missing */}\r\n              <MissingDetails />\r\n\r\n              {/* Bio */}\r\n              <UserBio />\r\n\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header connections-container\">\r\n                  {/* <div className=\"milestone_see_more\">\r\n                    <Link to={\"\"}>See more</Link>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"col-12 mt-2 milestones\">\r\n                  <ConnectionCard />\r\n                </div>\r\n              </div>\r\n\r\n              {/* achievements */}\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header \">\r\n                  <h2 className=\"typography\">Achievements</h2>\r\n                  <div className=\"milestone_see_more\">\r\n                    <Link to={\"/profile/achievements\"}>See more</Link>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12 mt-2 milestones\">\r\n                  <AchievementsComponents />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Featured Posts */}\r\n              <div className=\"box personal_information\">\r\n                <div className=\"personal_information_header\">\r\n                  <h2 className=\"typography\">Featured posts</h2>\r\n                  {/* <div className=\"milestone_see_more\">\r\n                    <Link to={\"\"}>See more</Link>\r\n                  </div> */}\r\n                </div>\r\n                <div className=\"mt-2 milestones\">\r\n                  <FeaturedPostsContainer userId={loggedInUserId} />\r\n                </div>\r\n              </div>\r\n              {/* Featured Posts End */}\r\n\r\n              {/* Company Details */}\r\n              <div className=\"\">\r\n                <CompanyDetailsCard\r\n                  className=\"\"\r\n                  userDetails={loggedInUser}\r\n                  page={loggedInUserId === companyFounderId ? \"edit\" : \"\"}\r\n                />\r\n              </div>\r\n\r\n              {/* Color Cards */}\r\n              <ColorCards />\r\n            </div>\r\n          </div>\r\n          <div className=\"thirty d-none d-xl-block\">\r\n            <RightProfileCard />\r\n            <RecommendationCard />\r\n            <NewsCorner />\r\n          </div>\r\n        </div>\r\n\r\n        {/* OffCanvas for questionnaire */}\r\n        {/* <Questionnaire\r\n          countData={countData}\r\n          setCountData={setCountData}\r\n          handleRefetch={handleRefetch}\r\n        /> */}\r\n      </div>\r\n      {/* <OnBoardUser steps={startupOnboardingSteps.profilePage} /> */}\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default InvestorHome;\r\n"],"names":["_ref","userIdData","userId","useSelector","selectLoggedInUserId","_useState","useState","_useState2","_slicedToArray","connections","setConnections","_useState3","_useState4","loading","setLoading","navigate","useNavigate","useEffect","getUserConnections","then","data","catch","err","console","log","_jsx","className","children","SpinnerBS","length","_Fragment","map","item","index","_jsxs","onClick","concat","_id","src","profilePicture","alt","style","minHeight","firstName","lastName","designation","color","text","image","amount","background","onAmountChange","field","colorCardData","noRupee","_ref$isInvestor","isInvestor","_ref$isOneLink","isOneLink","isNotEditable","loggedInUser","state","user","isEditMode","setIsEditMode","editedAmount","setEditedAmount","dispatch","useDispatch","type","id","value","onChange","e","target","onBlur","updatedData","founderId","colorCard","_objectSpread","_defineProperty","postInvestorData","res","setUserCompany","error","postStartUpData","autoFocus","htmlFor","width","ColorCards","colorCardInfo","_ref$isNotEditable","selectColorCardData","companyFounderId","selectCompanyFounderId","loggedInUserId","setColorCardData","setField","handleAmountChange","currentfield","updatedAmount","prevData","ColorCard","CoinIcon","last_round_investment","total_investment","no_of_investers","fund_ask","valuation","raised_funds","completedAchievements","setCompletedAchievements","getAchievements","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","getUserAchievements","sent","completed","t0","message","stop","apply","arguments","badgeImageMap","silver","bronze","gold","badge","rectangle","title","companyDataId","selectCompanyDataId","document","setPageTitle","getStartupByFounderId","MaxWidthWrapper","ProfessionalInfo","theme","MissingDetails","UserBio","ConnectionCard","Link","to","AchievementsComponents","FeaturedPostsContainer","CompanyDetailsCard","userDetails","page","RightProfileCard","RecommendationCard","NewsCorner"],"sourceRoot":""}