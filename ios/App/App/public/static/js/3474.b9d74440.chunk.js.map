{"version":3,"file":"static/js/3474.b9d74440.chunk.js","mappings":"yLAEe,SAASA,EAAgBC,GACtC,OACEC,EAAAA,EAAAA,KAAA,OAAAC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACEC,QAAQ,cACRC,KAAK,eACLC,OAAO,MACPC,MAAM,OACFN,GAAK,IAAAO,UAETN,EAAAA,EAAAA,KAAA,QACEG,KAAK,OACLI,OAAO,eACPC,cAAc,QACdC,eAAe,QACfC,YAAa,GACbC,EAAE,+BAIV,C,wNCJMC,EAAmB,CACvBC,SAASb,EAAAA,EAAAA,KAACc,EAAAA,EAAO,IACjBC,mBAAmBf,EAAAA,EAAAA,KAACgB,EAAAA,EAAiB,IACrCC,eAAejB,EAAAA,EAAAA,KAACkB,EAAAA,EAAa,IAC7BC,QAAQnB,EAAAA,EAAAA,KAACoB,EAAAA,EAAM,KAGF,SAASC,IACtB,IAAMC,GAAeC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAAaC,EAAAA,EAAAA,MAAbD,SACFE,GAAWC,EAAAA,EAAAA,MAEjBC,GAAkCC,EAAAA,EAAAA,UAAS,WAAUC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA9CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAe9B,OAbAI,EAAAA,EAAAA,YAAU,WACRC,SAASC,MAAQ,6BACjBV,GAASW,EAAAA,EAAAA,IAAa,YACxB,GAAG,CAACX,KAEJQ,EAAAA,EAAAA,YAAU,WAEND,EADEZ,EACW,KAEA,UAEjB,GAAG,CAACA,KAGFtB,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,uDAAsDjC,UACnEkC,EAAAA,EAAAA,MAACC,EAAAA,EAAe,CAAAnC,SAAA,CAEbgB,IACCtB,EAAAA,EAAAA,KAAA0C,EAAAA,SAAA,CAAApC,UACEkC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,gEAA+DjC,SAAA,EAC1E2B,GAA0B,uBAAbR,IACbzB,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,MAAMI,GAAG,kBAAiBrC,UACvCN,EAAAA,EAAAA,KAAC4C,EAAAA,EAAY,CACXX,UAAWA,EACXC,aAAcA,MAMnBD,GAA0B,uBAAbR,IACZe,EAAAA,EAAAA,MAAA,OACED,UAAU,gCACVI,GAAG,kBAAiBrC,SAAA,EAEpBN,EAAAA,EAAAA,KAAA,UACE6C,KAAK,SACLN,UAAU,6FACVO,MAAO,CAAEzC,MAAO,OAAQD,OAAQ,QAChC2C,QAAS,kBAAMb,EAAa,KAAK,EAAC5B,UAElCN,EAAAA,EAAAA,KAACF,EAAAA,EAAe,CACdM,OAAQ,GACRC,MAAO,GACPyC,MAAO,CAAEE,WAAY,YAGxBpC,EAAiBqB,OAKtBjC,EAAAA,EAAAA,KAACiD,EAAAA,GAAM,UAMX3B,IACAtB,EAAAA,EAAAA,KAAA0C,EAAAA,SAAA,CAAApC,UACEkC,EAAAA,EAAAA,MAAA,OAAKD,UAAU,4EAA2EjC,SAAA,EACxFN,EAAAA,EAAAA,KAAA,OAAKuC,UAAU,MAAMI,GAAG,kBAAiBrC,UACvCN,EAAAA,EAAAA,KAAC4C,EAAAA,EAAY,CACXX,UAAWA,EACXC,aAAcA,MAKJ,uBAAbT,IACCzB,EAAAA,EAAAA,KAAA,OACEuC,UAAU,gCACVI,GAAG,kBAAiBrC,SAEnBM,EAAiBqB,MAKtBjC,EAAAA,EAAAA,KAACiD,EAAAA,GAAM,aAOrB,C","sources":["components/Investor/SvgIcons/IconChevronBack.jsx","pages/Investor/InvestorUserSettings/InvestorUserSettings.jsx"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function IconChevronBack(props) {\r\n  return (\r\n    <svg\r\n      viewBox=\"0 0 512 512\"\r\n      fill=\"currentColor\"\r\n      height=\"1em\"\r\n      width=\"1em\"\r\n      {...props}\r\n    >\r\n      <path\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        strokeLinecap=\"round\"\r\n        strokeLinejoin=\"round\"\r\n        strokeWidth={48}\r\n        d=\"M328 112L184 256l144 144\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport \"./InvestorUserSettings.scss\";\r\nimport {\r\n  selectIsMobileView,\r\n  setPageTitle,\r\n} from \"../../../Store/features/design/designSlice\";\r\nimport MaxWidthWrapper from \"../../../components/Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Outlet, useLocation } from \"react-router-dom\";\r\nimport SettingsTabs from \"../../../components/Investor/UserSettingsPageComponents/SettingsTabs/SettingsTabs\";\r\nimport IconChevronBack from \"../../../components/Investor/SvgIcons/IconChevronBack\";\r\nimport Account from \"../../../components/Investor/UserSettingsPageComponents/Account/Account\";\r\nimport SignInAndSecurity from \"../../../components/Investor/UserSettingsPageComponents/SignInAndSecurity/SignInAndSecurity\";\r\nimport PrivacyPolicy from \"../../../components/Investor/UserSettingsPageComponents/PrivacyPolicy/PrivacyPolicy\";\r\nimport Logout from \"../../../components/Investor/UserSettingsPageComponents/Logout/Logout\";\r\n\r\n// If settings content is different for Investor Account, create a separate component for it\r\nconst SETTINGS_CONTENT = {\r\n  account: <Account />,\r\n  signInAndSecurity: <SignInAndSecurity />,\r\n  privacyPolicy: <PrivacyPolicy />,\r\n  logout: <Logout />,\r\n};\r\n\r\nexport default function InvestorUserSettings() {\r\n  const isMobileView = useSelector(selectIsMobileView);\r\n  const { pathname } = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const [activeTab, setActiveTab] = useState(\"account\");\r\n\r\n  useEffect(() => {\r\n    document.title = \"Settings | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Settings\"));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (isMobileView) {\r\n      setActiveTab(null);\r\n    } else {\r\n      setActiveTab(\"account\");\r\n    }\r\n  }, [isMobileView]);\r\n\r\n  return (\r\n    <div className=\"investor-userSettings-page-wrapper mt-3 mb-5 mx-lg-3\">\r\n      <MaxWidthWrapper>\r\n        {/* Mobile View */}\r\n        {isMobileView && (\r\n          <>\r\n            <div className=\"investor-userSettings-page-container d-flex flex-column gap-3\">\r\n              {!activeTab && pathname === \"/investor/settings\" && (\r\n                <div className=\"z-0\" id=\"sidebarSettings\">\r\n                  <SettingsTabs\r\n                    activeTab={activeTab}\r\n                    setActiveTab={setActiveTab}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              {/* Settings Content */}\r\n              {activeTab && pathname === \"/investor/settings\" && (\r\n                <div\r\n                  className=\"setttings-content flex-grow-1\"\r\n                  id=\"settingsContent\"\r\n                >\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-secondary p-0 mb-3 rounded-circle d-flex align-items-center justify-content-center\"\r\n                    style={{ width: \"45px\", height: \"45px\" }}\r\n                    onClick={() => setActiveTab(null)}\r\n                  >\r\n                    <IconChevronBack\r\n                      height={30}\r\n                      width={30}\r\n                      style={{ marginLeft: \"-4px\" }}\r\n                    />\r\n                  </button>\r\n                  {SETTINGS_CONTENT[activeTab]}\r\n                </div>\r\n              )}\r\n\r\n              {/* outlet */}\r\n              <Outlet />\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        {/* Large Screen View */}\r\n        {!isMobileView && (\r\n          <>\r\n            <div className=\"investor-userSettings-page-container d-flex flex-column flex-lg-row gap-3\">\r\n              <div className=\"z-0\" id=\"sidebarSettings\">\r\n                <SettingsTabs\r\n                  activeTab={activeTab}\r\n                  setActiveTab={setActiveTab}\r\n                />\r\n              </div>\r\n\r\n              {/* Settings Content */}\r\n              {pathname === \"/investor/settings\" && (\r\n                <div\r\n                  className=\"setttings-content flex-grow-1\"\r\n                  id=\"settingsContent\"\r\n                >\r\n                  {SETTINGS_CONTENT[activeTab]}\r\n                </div>\r\n              )}\r\n\r\n              {/* outlet */}\r\n              <Outlet />\r\n            </div>\r\n          </>\r\n        )}\r\n      </MaxWidthWrapper>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["IconChevronBack","props","_jsx","_objectSpread","viewBox","fill","height","width","children","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","SETTINGS_CONTENT","account","Account","signInAndSecurity","SignInAndSecurity","privacyPolicy","PrivacyPolicy","logout","Logout","InvestorUserSettings","isMobileView","useSelector","selectIsMobileView","pathname","useLocation","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","activeTab","setActiveTab","useEffect","document","title","setPageTitle","className","_jsxs","MaxWidthWrapper","_Fragment","id","SettingsTabs","type","style","onClick","marginLeft","Outlet"],"sourceRoot":""}