{"version":3,"file":"static/js/3744.6c3bd710.chunk.js","mappings":"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","sources":["pages/StartUp/UserSettings/SettingsPages/ManageEmailAddresses/ManageEmailAddresses.jsx","../node_modules/react-bootstrap/esm/InputGroupContext.js","../node_modules/react-bootstrap/esm/InputGroupText.js","../node_modules/react-bootstrap/esm/InputGroup.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./ManageEmailAddresses.scss\";\r\nimport { Button, Form, InputGroup } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaArrowLeft } from \"react-icons/fa\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { IoCloseSharp } from \"react-icons/io5\";\r\nimport Modal from \"../../../../../components/PopUp/Modal/Modal\";\r\n\r\nfunction ManageEmailAddresses() {\r\n  const navigate = useNavigate();\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [password, setPassword] = useState(\"\");\r\n  return (\r\n    <div className=\"manage_account_settings\">\r\n      <h4 className=\"m-0 px-3 py-3 d-flex align-items-center gap-2\">\r\n        <Button\r\n          className=\"back-button btn-sm  rounded-circle border-none\"\r\n          onClick={() => navigate(-1)}\r\n        >\r\n          <FaArrowLeft size={25} />\r\n        </Button>\r\n        Email Addresses\r\n      </h4>\r\n      <div className=\" border-top px-3 py-3 d-flex flex-column gap-2\">\r\n        <span className=\"fs-6 text-secondary\">Emails you've added</span>\r\n        <span className=\"fs-6  fw-bold\">Primary email</span>\r\n        <span className=\"fs-6 \">{loggedInUser?.email}</span>\r\n        <div>\r\n          <Button className=\"add_email_btn\" onClick={() => setShowModal(true)}>\r\n            Add email address\r\n          </Button>\r\n        </div>\r\n        <span className=\"fs-6 text-secondary\">\r\n          If you have a verification (e.g. verified work email), you can manage\r\n          it in your\r\n        </span>\r\n      </div>\r\n      {showModal && (\r\n        <Modal>\r\n          <div className=\"d-flex flex-row justify-content-between align-items-center\">\r\n            <h4>Add another Email Address</h4>\r\n            <IoCloseSharp size={20} onClick={() => setShowModal(false)} />\r\n          </div>\r\n          <span className=\"fs-6 text-secondary \">\r\n            Weâ€™ll send a verification code to this email address.\r\n          </span>\r\n          <form>\r\n            <fieldset>\r\n              <legend className=\"px-2\">Email address</legend>\r\n              {/* <input\r\n              type=\"tel\"\r\n              className=\"professional_form_input\"\r\n              name=\"Phone\"\r\n             \r\n            /> */}\r\n              <InputGroup>\r\n                <Form.Control\r\n                  // placeholder=\"Recipient's username\"\r\n                  type=\"email\"\r\n                  aria-label=\"Phone number\"\r\n                  aria-describedby=\"basic-addon2\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <Button\r\n                  className=\"\"\r\n                  variant=\"outline-secondary\"\r\n                  id=\"button-addon2\"\r\n                >\r\n                  Verify\r\n                </Button>\r\n              </InputGroup>\r\n            </fieldset>\r\n\r\n            <fieldset>\r\n              <legend className=\"px-2\">Password</legend>\r\n              <input\r\n                type=\"password\"\r\n                className=\"professional_form_input\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </fieldset>\r\n            <Button className=\"done w-100\">Done</Button>\r\n          </form>\r\n          <span className=\"fs-6 text-secondary py-2\">\r\n            Your email address helps us keep your account secure by adding an\r\n            additional layer of verification. <br /> It also helps others, who\r\n            already have your email address, discover and connect with you.{\" \"}\r\n            <br /> You can always decide how you want your email address used.\r\n          </span>\r\n        </Modal>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ManageEmailAddresses;\r\n","\"use client\";\n\nimport * as React from 'react';\nconst context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'InputGroupContext';\nexport default context;","\"use client\";\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupText = /*#__PURE__*/React.forwardRef(({\n  className,\n  bsPrefix,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group-text');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    ...props\n  });\n});\nInputGroupText.displayName = 'InputGroupText';\nexport default InputGroupText;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nimport InputGroupContext from './InputGroupContext';\nimport InputGroupText from './InputGroupText';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst InputGroupCheckbox = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"checkbox\",\n    ...props\n  })\n});\nconst InputGroupRadio = props => /*#__PURE__*/_jsx(InputGroupText, {\n  children: /*#__PURE__*/_jsx(FormCheckInput, {\n    type: \"radio\",\n    ...props\n  })\n});\nconst InputGroup = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  hasValidation,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n\n  // Intentionally an empty object. Used in detecting if a dropdown\n  // exists under an input group.\n  const contextValue = useMemo(() => ({}), []);\n  return /*#__PURE__*/_jsx(InputGroupContext.Provider, {\n    value: contextValue,\n    children: /*#__PURE__*/_jsx(Component, {\n      ref: ref,\n      ...props,\n      className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, hasValidation && 'has-validation')\n    })\n  });\n});\nInputGroup.displayName = 'InputGroup';\nexport default Object.assign(InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});"],"names":["navigate","useNavigate","loggedInUser","useSelector","state","user","_useState","useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","showModal","setShowModal","_useState5","_useState6","password","setPassword","_jsxs","className","children","_jsx","Button","onClick","FaArrowLeft","size","Modal","IoCloseSharp","InputGroup","Form","Control","type","value","onChange","e","target","variant","id","name","context","React","displayName","_excluded","InputGroupText","_ref","ref","bsPrefix","_ref$as","as","Component","props","_objectWithoutProperties","useBootstrapPrefix","_objectSpread","classNames","hasValidation","contextValue","useMemo","InputGroupContext","Provider","concat","Object","assign","Text","Radio","FormCheckInput","Checkbox"],"sourceRoot":""}