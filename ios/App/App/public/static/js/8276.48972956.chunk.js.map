{"version":3,"file":"static/js/8276.48972956.chunk.js","mappings":"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","sources":["Images/Dollar_rupee.svg","components/Investor/InvestorGlobalCards/OneLink/OnePagePreviewCard/OnePagePreviewCard.js","Images/investorIcon/Arrow.svg","components/Investor/InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard.js","components/Investor/OneLink/OneLinkEditPage/OneLinkEditView/OneLinkEditView.js","components/Investor/OneLink/OneLinkEditPage/OneLinkEditPage.js","components/Investor/OneLink/Table/Table.js"],"sourcesContent":["var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDollarRupee(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 59,\n    height: 26,\n    viewBox: \"0 0 59 26\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group 15174\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle 1861\",\n    width: 29.5,\n    height: 25.3596,\n    fill: \"#FD5901\"\n  }), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Rectangle 1862\",\n    x: 29.5,\n    width: 29.5,\n    height: 25.3596,\n    fill: \"#EAEEF2\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.3516 7.33099H13.232C14.5211 7.33099 15.4721 7.93856 15.6887 9.15266H10.3516V10.2632H15.6887C15.4816 11.4953 14.5782 12.0838 13.2975 12.0838H10.3516V13.4754L15.0399 18.8908H17.2695L12.5652 13.4849H13.4687C15.9159 13.4659 17.13 11.9253 17.3656 10.2632H18.8048V9.15266H17.3836C17.299 8.33058 17.0064 7.74203 16.5457 7.32254H18.8048V6.21094H10.3516V7.33099Z\",\n    fill: \"white\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector_2\",\n    d: \"M40.3672 15.0091H41.9198C41.9198 15.8476 42.9834 16.5618 44.2488 16.5618C45.5142 16.5618 46.5777 15.8476 46.5777 15.0091C46.5777 14.1552 45.7703 13.8447 44.0625 13.4332C42.4167 13.0218 40.3672 12.5094 40.3672 10.3513C40.3672 8.96165 41.5084 7.78165 43.0843 7.38573V5.69336H45.4132V7.38573C46.9892 7.78165 48.1303 8.96165 48.1303 10.3513H46.5777C46.5777 9.51283 45.5142 8.79862 44.2488 8.79862C42.9834 8.79862 41.9198 9.51283 41.9198 10.3513C41.9198 11.2052 42.7272 11.5157 44.4351 11.9272C46.0809 12.3386 48.1303 12.851 48.1303 15.0091C48.1303 16.3988 46.9892 17.5788 45.4132 17.9747V19.667H43.0843V17.9747C41.5084 17.5788 40.3672 16.3988 40.3672 15.0091Z\",\n    fill: \"#FD5901\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDollarRupee);\nexport default __webpack_public_path__ + \"static/media/Dollar_rupee.1e1649c8d81a39d117f894ae6a9c411f.svg\";\nexport { ForwardRef as ReactComponent };","// import React, { useState } from \"react\";\r\n// import \"./OnePagePreviewCard.scss\";\r\n// import { useSelector } from \"react-redux\";\r\n// import { postStartUpData } from \"../../../../../Service/user\";\r\n\r\n// const OnePagePreviewCard = ({ company, page }) => {\r\n//   const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n//   const [editedContent, setEditedContent] = useState({});\r\n//   const [editable, setEditable] =useState(false)\r\n\r\n//   const cardData = [\r\n//     {\r\n//       field: \"problem\",\r\n//       title: \"1.Problem\",\r\n//       content:\r\n//         company?.problem ||\r\n//         `Enter the problem statement your startup is addressing`,\r\n//     },\r\n//     {\r\n//       field: \"solution\",\r\n//       title: \"2.Solution\",\r\n//       content:\r\n//         company?.solution || \"Enter the solution your startup is offering\",\r\n//     },\r\n//     {\r\n//       field: \"competitiveLandscape\",\r\n//       title: \"3.Competitive Landscape\",\r\n//       content: company?.competitiveLandscape || \"Mention your competitors\",\r\n//     },\r\n//     {\r\n//       field: \"growthModel\",\r\n//       title: \"4.Revenue Model\",\r\n//       content: company?.growthModel || \"Your startup’s revenue model\",\r\n//     },\r\n//     {\r\n//       field: \"growthStrategy\",\r\n//       title: \"5.Growth Strategy\",\r\n//       content: company?.growthStrategy || \"Your Growth startegy\",\r\n//     },\r\n//     {\r\n//       field: \"marketTraction\",\r\n//       title: \"6.Market Traction\",\r\n//       content: company?.marketTraction || \"Your Market traction\",\r\n//     },\r\n//     // { title: \"7.Business Model\", content: \"Your Business Model\" },\r\n//   ];\r\n\r\n//   const handleUpdate = (field, newValue) => {\r\n//     setEditable(true)\r\n//     if (!newValue) return;\r\n//     setEditedContent({ ...editedContent, [field]: newValue });\r\n\r\n//     postStartUpData({\r\n//       [field]: newValue,\r\n//       founderId: loggedInUser._id,\r\n//     })\r\n//       .then(({ data }) => {\r\n//         console.log(data);\r\n//       })\r\n//       .catch((err) => console.log(err));\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"row onepage_card_container\">\r\n//         {cardData.map((card, index) => (\r\n//           <div className=\"col-md-6 col-lg-4\" key={index}>\r\n//             <div className=\"card\">\r\n//               <div className=\"card-body\">\r\n//                 <h5 className=\"card-title\">{card.title}</h5>\r\n//                 {page === \"oneLinkEdit\" ? (\r\n//                   editable ? (\r\n//                     <textarea\r\n//                       type=\"text\"\r\n//                       className=\"card-text\"\r\n//                       placeholder={card.field}\r\n//                       value={editedContent[card.field] || card.content}\r\n//                       onChange={(e) => handleUpdate(card.field, e.target.value)}\r\n//                       onBlur={() =>\r\n//                         handleUpdate(card.field, editedContent[card.field])\r\n//                       }\r\n//                     />\r\n//                   ) : (\r\n//                     <h6 onClick={handleUpdate} >{card.content}</h6>\r\n//                   )\r\n//                 ) : (\r\n//                   <h6 onClick={handleUpdate}>{card.content}</h6>\r\n//                 )}\r\n\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default OnePagePreviewCard;\r\n\r\nimport React, { useState } from \"react\";\r\nimport \"./OnePagePreviewCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { postStartUpData } from \"../../../../../Service/user\";\r\n\r\nconst OnePagePreviewCard = ({ company, page }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const [editedContent, setEditedContent] = useState({});\r\n  const [editableIndex, setEditableIndex] = useState(null);\r\n  const [value, setValue] = useState(false);\r\n\r\n  const cardData = [\r\n    {\r\n      field: \"problem\",\r\n      title: \"Problem\",\r\n      content:\r\n        company?.problem ||\r\n        `Enter the problem statement your startup is addressing`,\r\n    },\r\n    {\r\n      field: \"solution\",\r\n      title: \"Solution\",\r\n      content:\r\n        company?.solution || \"Enter the solution your startup is offering\",\r\n    },\r\n    {\r\n      field: \"marketLandscape\",\r\n      title: \"Market Landscape\",\r\n      content: company?.competitiveLandscape || \"Mention your competitors\",\r\n    },\r\n    // {\r\n    //   field: \"growthModel\",\r\n    //   title: \"Revenue Model\",\r\n    //   content: company?.growthModel || \"Your startup’s revenue model\",\r\n    // },\r\n    // {\r\n    //   field: \"growthStrategy\",\r\n    //   title: \"Growth Strategy\",\r\n    //   content: company?.growthStrategy || \"Your Growth startegy\",\r\n    // },\r\n    // {\r\n    //   field: \"marketTraction\",\r\n    //   title: \"Market Traction\",\r\n    //   content: company?.marketTraction || \"Your Market traction\",\r\n    // },\r\n    // { title: \"Business Model\", content: \"Your Business Model\" },\r\n  ];\r\n\r\n  const handleUpdate = (field, newValue) => {\r\n    console.log(\"field, newValue\", field, newValue);\r\n    if (!newValue) return;\r\n    setEditedContent({ ...editedContent, [field]: newValue });\r\n\r\n    postStartUpData({\r\n      [field]: newValue,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then((data) => {\r\n        console.log(\"saved data\", data);\r\n        window.location.reload();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"onepage_card_container\">\r\n        {cardData.map((card, index) => (\r\n          <div className=\"card_item\" key={index} >\r\n            <div className=\"card m-0\">\r\n              <div\r\n                className=\"card-body\"\r\n                onClick={() => setEditableIndex(index)}\r\n              >\r\n                <h5 className=\"card-title\">{card.title}</h5>\r\n                {page === \"oneLinkEdit\" ? (\r\n                  editableIndex === index ? (\r\n                    <textarea\r\n                      type=\"text\"\r\n                      className=\"card-text m-0 fs-6\"\r\n                      placeholder={card.field}\r\n                      value={value || card.content}\r\n                      onChange={(e) => setValue(e.target.value)}\r\n                      onBlur={() => {\r\n                        handleUpdate(card.field, value);\r\n                        setEditableIndex(null);\r\n                      }}\r\n                      autoFocus\r\n                    />\r\n                  ) : (\r\n                    <h6\r\n                      // onClick={() => setEditableIndex(index)}\r\n                      style={{ wordBreak: \"break-word\" }}\r\n                    >\r\n                      {card.content}\r\n                    </h6>\r\n                  )\r\n                ) : (\r\n                  <h6 style={{ wordBreak: \" break-word\" }}>{card.content}</h6>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OnePagePreviewCard;\r\n","var _path, _rect;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 79,\n    height: 15,\n    viewBox: \"0 0 79 15\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2 7L70.0869 7\",\n    stroke: \"#686868\",\n    strokeWidth: 3,\n    strokeLinecap: \"round\"\n  })), _rect || (_rect = /*#__PURE__*/React.createElement(\"rect\", {\n    x: 71.4681,\n    width: 10,\n    height: 10,\n    transform: \"rotate(48.3153 71.4681 0)\",\n    fill: \"#686868\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrow);\nexport default __webpack_public_path__ + \"static/media/Arrow.ada21a319066f41ae08acc616a9d597c.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\r\nimport ArrowIcon from \"../../../../Images/investorIcon/Arrow.svg\";\r\nimport \"./SmallProfileCard.scss\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst SmallProfileCard = ({ className, text, width }) => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const formatDate = (dateString) => {\r\n    const options = { weekday: \"short\", month: \"long\", day: \"numeric\" };\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString(\"en-US\", options);\r\n  };\r\n  const formattedDate = formatDate(new Date().toDateString());\r\n\r\n  return (\r\n    <>\r\n      {/* <div className={`container-fluid small_card_container ${className}`}>\r\n        <div\r\n          className=\"d-flex flex-column flex-md-row align-items-center gap-1 gap-md-5 small_card_row\"\r\n          style={{ width: width ? width : \"100%\" }}\r\n        >\r\n          <div className=\"\">\r\n            <div className=\"box boxOne flex_content\">\r\n              <h2 className=\"typography\">Hello, {loggedInUser?.firstName}</h2>\r\n              <span className=\"smallest_typo\">{formattedDate}</span>\r\n            </div>\r\n          </div>\r\n          <div className=\"\">\r\n            <div className=\"box boxTwo flex_content\">\r\n              <img src={ArrowIcon} alt=\"arrow\" />\r\n              <h2 className=\"typography\">{text ? text : \"My Profile\"}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SmallProfileCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./OneLinkEditView.scss\";\r\nimport DollarRupeeImage from \"../../../../../Images/Dollar_rupee.svg\";\r\nimport PramodSq from \"../../../../../Images/Pramod.jpeg\";\r\nimport OnePagePreviewCard from \"../../../InvestorGlobalCards/OneLink/OnePagePreviewCard/OnePagePreviewCard\";\r\nimport Table from \"../../Table/Table\";\r\nimport TeamCard from \"../../../InvestorGlobalCards/OneLink/TeamCard/TeamCard\";\r\nimport FundAsking from \"../../Table/FundAsking/FundAsking\";\r\nimport FundDeployment from \"../../Table/FundDeployment/FundDeployment\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport SmallProfileCard from \"../../../InvestorGlobalCards/TwoSmallMyProfile/SmallProfileCard\";\r\nimport OneLinkMarketSection from \"../OneLinkMarketSection/OneLinkMarketSection\";\r\nimport OneLinkContactEdit from \"./OneLinkContactEdit/OneLinkContactEdit\";\r\nimport AfterSuccessPopUp from \"../../../../PopUp/AfterSuccessPopUp/AfterSuccessPopUp\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  getStartupByFounderId,\r\n  postStartUpData,\r\n} from \"../../../../../Service/user\";\r\nimport html2canvas from \"html2canvas\";\r\nimport jsPDF from \"jspdf\";\r\nimport { getBase64 } from \"../../../../../utils/getBase64\";\r\nimport camimg from \"../../../../../Images/Camera.png\";\r\nimport backIcon from \"../../../../../Images/Chat/BackIcon.svg\";\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst OneLinkEditView = () => {\r\n  const loggedInUser = useSelector((state) => state.user.loggedInUser);\r\n  const userId = loggedInUser._id;\r\n  const [company, setCompany] = useState({});\r\n  const [formData, setFormData] = useState({\r\n    company: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    logo: \"\",\r\n    keyFocus: \"\",\r\n    socialLinks: \"\",\r\n    TAM: \"\",\r\n    SAM: \"\",\r\n    SOM: \"\",\r\n  });\r\n  const [selectedLogo, setSelectedLogo] = useState(null);\r\n  const [imageData, setImageData] = useState(null);\r\n  const [fundingAskRows, setFundingAskRows] = useState([\r\n    { required: \"\", amount: \"\" },\r\n  ]);\r\n  const [roadMapRows, setRoadMapRows] = useState([{ date: \"\", milestone: \"\" }]);\r\n  const [competitorData, setCompetitorData] = useState([{ name: \"\" }]);\r\n\r\n  const initialData = {\r\n    rows: [\r\n      { label: \"Revenue\", values: [\"\"] },\r\n      { label: \"Expense\", values: [\"\"] },\r\n    ],\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(initialData);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    getStartupByFounderId(userId)\r\n      .then(({ data }) => {\r\n        setCompany(data);\r\n        setFormData({\r\n          company: data.company || \"\",\r\n          description: data.description || \"\",\r\n          logo: data.logo || \"\",\r\n          keyFocus: data.keyFocus || \"\",\r\n          location: data.location || \"\",\r\n          socialLinks: data.socialLinks || [],\r\n          TAM: data.TAM || \"\",\r\n          SAM: data.SAM || \"\",\r\n          SOM: data.SOM || \"\",\r\n          startedAtDate: data.startedAtDate || \"\",\r\n        });\r\n        setFundingAskRows(data.fundingsAsk || fundingAskRows);\r\n        setRoadMapRows(data.roadMap || roadMapRows);\r\n        setCompetitorData(data.competitors || competitorData);\r\n        setTableData(\r\n          data.projections.length > 0 ? data.projections[0] : tableData\r\n        );\r\n      })\r\n      .catch(() => setCompany({}));\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   // Fetch the image data from the URL\r\n  //   fetch(company?.logo)\r\n  //     .then((response) => response.blob())\r\n  //     .then((blob) => {\r\n  //       // Create a URL for the blob data\r\n  //       const blobUrl = URL.createObjectURL(blob);\r\n  //       setImageData(blobUrl);\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error fetching image:\", error);\r\n  //     });\r\n  // }, [company?.logo]);\r\n\r\n  const handleInputChange = (field, event) => {\r\n    const updatedValue = event.target.value;\r\n    if (!updatedValue) return;\r\n    setFormData({ ...formData, [field]: updatedValue });\r\n  };\r\n\r\n  const handleSocialLinkChange = (field, event) => {\r\n    const updatedValue = event.target.value;\r\n    const updatedSocialLinks = { ...formData.socialLinks };\r\n    updatedSocialLinks[field] = updatedValue;\r\n    setFormData({\r\n      ...formData,\r\n      socialLinks: updatedSocialLinks,\r\n    });\r\n  };\r\n\r\n  const handleUpdate = (logo) => {\r\n    if (logo) {\r\n      formData.logo = logo;\r\n    }\r\n    postStartUpData({\r\n      ...formData,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then(({ data }) => {\r\n        setSelectedLogo(data.logo);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  const handleDownloadPDF = () => {\r\n    const element = document.querySelector(\".download_preview\");\r\n    const buttons = document.querySelectorAll(\"button\");\r\n    buttons.forEach((button) => {\r\n      button.style.display = \"none\";\r\n    });\r\n    html2canvas(element, {\r\n      allowTaint: false,\r\n      removeContainer: true,\r\n      backgroundColor: \"#ffffff\",\r\n      scale: window.devicePixelRatio,\r\n      useCORS: true,\r\n      windowWidth: \"1400px\",\r\n    }).then((canvas) => {\r\n      const contentDataURL = canvas.toDataURL(\"image/png\");\r\n      const imgWidth = 210;\r\n      const pageHeight = 295;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      let heightLeft = imgHeight;\r\n      let pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      let position = 5;\r\n\r\n      pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n\r\n      while (heightLeft >= 0) {\r\n        position = heightLeft - imgHeight;\r\n        pdf.addPage();\r\n        pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n        heightLeft -= pageHeight;\r\n      }\r\n      pdf.save(`${formData.company}.pdf`);\r\n      buttons.forEach((button) => {\r\n        button.style.display = \"block\";\r\n      });\r\n    });\r\n  };\r\n\r\n  const handlePreviewPDF = () => {\r\n    const container = document.querySelector(\".download_preview\");\r\n    const buttons = document.querySelectorAll(\"button\");\r\n    buttons.forEach((button) => {\r\n      button.style.display = \"none\";\r\n    });\r\n    html2canvas(container, {\r\n      allowTaint: false,\r\n      removeContainer: true,\r\n      backgroundColor: \"#ffffff\",\r\n      scale: window.devicePixelRatio,\r\n      useCORS: true,\r\n      windowWidth: \"1400px\",\r\n    }).then((canvas) => {\r\n      const contentDataURL = canvas.toDataURL(\"image/png\");\r\n      const imgWidth = 210;\r\n      const pageHeight = 295;\r\n      const imgHeight = (canvas.height * imgWidth) / canvas.width;\r\n      let heightLeft = imgHeight;\r\n      let pdf = new jsPDF(\"p\", \"mm\", \"a4\");\r\n      let position = 5;\r\n\r\n      pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n      heightLeft -= pageHeight;\r\n\r\n      while (heightLeft >= 0) {\r\n        position = heightLeft - imgHeight;\r\n        pdf.addPage();\r\n        pdf.addImage(contentDataURL, \"PNG\", 0, position, imgWidth, imgHeight);\r\n        heightLeft -= pageHeight;\r\n      }\r\n      const blob = pdf.output(\"blob\");\r\n      const blobUrl = URL.createObjectURL(blob);\r\n      window.open(blobUrl, \"_blank\");\r\n      buttons.forEach((button) => {\r\n        button.style.display = \"block\";\r\n      });\r\n    });\r\n  };\r\n\r\n  const logoOnChangeHandler = async ({ target }) => {\r\n    const logo = await getBase64(target.files[0]);\r\n    console.log(target.files[0]);\r\n    setFormData((prevForm) => {\r\n      return {\r\n        ...prevForm,\r\n        logo: logo,\r\n      };\r\n    });\r\n    handleUpdate(logo);\r\n  };\r\n\r\n  const addRow = () => {\r\n    setFundingAskRows([...fundingAskRows, { required: \"\", amount: \"\" }]);\r\n  };\r\n\r\n  const addRodMapRow = () => {\r\n    setRoadMapRows([...roadMapRows, { date: \"\", milestone: \"\" }]);\r\n  };\r\n\r\n  const deleteRow = (index) => {\r\n    const updatedRows = [...fundingAskRows];\r\n    updatedRows.splice(index, 1);\r\n    setFundingAskRows(updatedRows);\r\n  };\r\n\r\n  const deleteRoadMapRow = (index) => {\r\n    const updatedRows = [...roadMapRows];\r\n    updatedRows.splice(index, 1);\r\n    setRoadMapRows(updatedRows);\r\n  };\r\n\r\n  const handleFundingAskInputChange = (index, field, value) => {\r\n    const updatedRows = [...fundingAskRows];\r\n    updatedRows[index][field] = value;\r\n    setFundingAskRows(updatedRows);\r\n  };\r\n\r\n  const handleRoadMapInputChange = (index, field, value) => {\r\n    const updatedRows = [...roadMapRows];\r\n    updatedRows[index][field] = value;\r\n    setRoadMapRows(updatedRows);\r\n  };\r\n\r\n  // Competitor Input Change\r\n  const handleCompetitorInputChange = (index, value) => {\r\n    const updatedCompetitorData = [...competitorData];\r\n    updatedCompetitorData[index].name = value;\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  // Add Competitor\r\n  const addCompetitor = () => {\r\n    const updatedCompetitorData = [...competitorData, { name: \"\" }];\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  // Delete Competitor\r\n  const deleteCompetitor = (index) => {\r\n    const updatedCompetitorData = competitorData.filter((_, i) => i !== index);\r\n    setCompetitorData(updatedCompetitorData);\r\n  };\r\n\r\n  const [fromSubmit, setFromSubmit] = useState(false);\r\n  const [popupData, setPopupData] = useState(\"\");\r\n\r\n  const handleSubmit = async () => {\r\n    postStartUpData({\r\n      fundingsAsk: fundingAskRows,\r\n      roadMap: roadMapRows,\r\n      competitors: competitorData,\r\n      projections: tableData,\r\n      founderId: loggedInUser._id,\r\n    })\r\n      .then(({ data }) => {\r\n        setPopupData(\"Changes saved\");\r\n        setFromSubmit(true);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* <div className=\"editview_container\"> \r\n        <div className=\"col\">\r\n          <SmallProfileCard text={\"Edit\"} />\r\n        </div>\r\n        <div className=\"box_container px-3 px-lg-5 py-5 my-4\"> \r\n       <section className=\"dollar_rupree\">\r\n            <img src={DollarRupeeImage} alt=\"image\" />\r\n          </section> \r\n       <div className=\"download_preview\">\r\n            <section className=\"company_description\">\r\n              <div\r\n                className=\"mx-2 my-2 my-md-0\"\r\n                style={{ height: \"120px\", width: \"120px\" }}\r\n              >\r\n                <label htmlFor=\"logoImg\" className=\"position-relative\">\r\n                  <img\r\n                    src={selectedLogo || imageData}\r\n                    alt=\"image\"\r\n                    style={{ height: \"120px\", width: \"120px\" }}\r\n                    role=\"button\"\r\n                  />\r\n                  <span\r\n                    style={{ fontSize: \"10px\", left: \"30%\" }}\r\n                    className=\"position-absolute top-50 text-white rounded-pill bg-dark py-1 px-2\"\r\n                  >\r\n                    Update\r\n                  </span>\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  value=\"\"\r\n                  id=\"logoImg\"\r\n                  name=\"logo\"\r\n                  onChange={logoOnChangeHandler}\r\n                  accept=\".jpg, .jpeg, .png, .webp, .svg\"\r\n                  hidden\r\n                />\r\n              </div>\r\n              <div className=\"company_text text-center text-md-start\">\r\n                <h6>\r\n                  <input\r\n                    className=\"name_container fs-5 \"\r\n                    value={formData.company}\r\n                    onChange={(e) => handleInputChange(\"company\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n                <h6>\r\n                  <input\r\n                    className=\"name_container \"\r\n                    value={formData.tagline}\r\n                    onChange={(e) => handleInputChange(\"tagline\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n                <hr className=\"m-0\" />\r\n                <h6>\r\n                  <textarea\r\n                    className=\"description_container\"\r\n                    value={formData.description}\r\n                    onChange={(e) => handleInputChange(\"description\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </h6>\r\n              </div>\r\n            </section>\r\n\r\n            <section className=\"card_section\">\r\n              <OnePagePreviewCard company={company} page={\"oneLinkEdit\"} />\r\n            </section>\r\n\r\n            <section className=\"market_section\">\r\n              <OneLinkMarketSection company={company} page={\"oneLinkEdit\"} />\r\n            </section>\r\n\r\n            <section className=\"table_section\">\r\n              <Table page={\"oneLinkEditPage\"} />\r\n            </section>\r\n\r\n            <section className=\"team_section\">\r\n              {company?.team?.map((team, index) => (\r\n                <TeamCard\r\n                  index={index + 1}\r\n                  profile={team?.image}\r\n                  name={team?.name}\r\n                  designation={team?.designation}\r\n                  company={company}\r\n                  page={\"oneLinkEdit\"}\r\n                />\r\n              ))}\r\n            </section>\r\n\r\n            <section className=\"fund_asking_deployment\">\r\n              <div className=\"funding_divider\">\r\n                <FundAsking company={company} page={\"oneViewEdit\"} />\r\n              </div>\r\n              <div className=\"funding_divider\">\r\n                <OneLinkContactEdit\r\n                  oneLink={company.oneLink}\r\n                  page={\"oneViewEdit\"}\r\n                />\r\n              </div>\r\n            </section>\r\n          </div> \r\n\r\n      <section className=\"button_preview_download_section pdf-hidden\">\r\n            <div className=\"download_button_container\">\r\n              <button onClick={handlePreviewPDF}>Preview</button>\r\n              <button className=\"download_button\" onClick={handleDownloadPDF}>\r\n                Download\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div> */}\r\n      <section className=\"one_link_edit_view_section w-100 p-3 rounded\">\r\n        <span className=\"back_img rounded-circle shadow-sm\" title=\"Go Back\">\r\n          <img\r\n            src={backIcon}\r\n            alt=\"go back\"\r\n            width={20}\r\n            height={20}\r\n            onClick={() => navigate(-1)}\r\n          />\r\n        </span>\r\n        <div className=\"download_preview p-md-5 \">\r\n          <section className=\" img_company_data d-flex flex-column flex-md-row w-100 justify-content-between align-items-center gap-3\">\r\n            <div className=\"img_right \">\r\n              <label htmlFor=\"logoImg\" className=\"position-relative\">\r\n                <img\r\n                  src={selectedLogo || company?.logo}\r\n                  alt=\"Selected logo or previous logo\"\r\n                  role=\"button\"\r\n                />\r\n                <span\r\n                  className=\"position-absolute text-dark py-1 px-2 d-flex flex-column justify-content-center align-items-center\"\r\n                  style={{ fontSize: \"15px\", padding: \"4px\" }}\r\n                >\r\n                  Upload Company Logo\r\n                </span>\r\n              </label>\r\n              <input\r\n                type=\"file\"\r\n                value=\"\"\r\n                id=\"logoImg\"\r\n                name=\"logo\"\r\n                onChange={logoOnChangeHandler}\r\n                accept=\".jpg, .jpeg, .png, .webp, .svg\"\r\n                hidden\r\n              />\r\n            </div>\r\n            <div className=\"compant_data d-flex flex-column gap-3 \">\r\n              <div className=\"startup_Name_inp\">\r\n                <h5>Startup Name</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"company\"\r\n                  name=\"company\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.company}\r\n                  onChange={(e) => handleInputChange(\"company\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n              <div className=\"location_data_div d-flex flex-column flex-md-row gap-3 w-100 \">\r\n                <div className=\"country  w-100 \">\r\n                  <h5>City, Country</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"location\"\r\n                    name=\"location\"\r\n                    className=\" px-3\"\r\n                    value={formData.location}\r\n                    onChange={(e) => handleInputChange(\"location\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </div>\r\n                <div className=\"founded  w-100 \">\r\n                  <h5>Founded Date</h5>\r\n                  <input\r\n                    type=\"date\"\r\n                    id=\"founded_date\"\r\n                    name=\"founded_date\"\r\n                    className=\" px-3 w-100\"\r\n                    value={formData.startedAtDate}\r\n                    onChange={(e) => handleInputChange(\"startedAtDate\", e)}\r\n                    onBlur={(e) => handleUpdate()}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"tags_inp\">\r\n                <h5>Tags</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"tags\"\r\n                  name=\"tags\"\r\n                  className=\" px-3\"\r\n                  style={{ width: \"100%\" }}\r\n                  value={formData.keyFocus}\r\n                  onChange={(e) => handleInputChange(\"keyFocus\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"link_section\">\r\n            <div className=\"web_link\">\r\n              <h5>Website Link</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"website_link\"\r\n                name=\"website_link\"\r\n                className=\"w-100 px-3\"\r\n                value={formData.socialLinks?.website}\r\n                onChange={(e) => handleSocialLinkChange(\"website\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n            <h4>Social Links</h4>\r\n            <div className=\"social_links d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n              <div className=\"links w-100\">\r\n                <h5>Linkedin</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_1\"\r\n                  name=\"link_1\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.linkedin}\r\n                  onChange={(e) => handleSocialLinkChange(\"linkedin\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"links w-100\">\r\n                <h5>Twitter</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_2\"\r\n                  name=\"link_2\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.twitter}\r\n                  onChange={(e) => handleSocialLinkChange(\"twitter\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"links w-100\">\r\n                <h5>Instagram</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  id=\"link_3\"\r\n                  name=\"link_3\"\r\n                  className=\"w-100 px-3\"\r\n                  value={formData.socialLinks.instagram}\r\n                  onChange={(e) => handleSocialLinkChange(\"instagram\", e)}\r\n                  onBlur={(e) => handleUpdate()}\r\n                />\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <div className=\"about_company_section my-3\">\r\n            <h5>About Company</h5>\r\n            <textarea\r\n              type=\"text\"\r\n              className=\"m-0 fs-6 w-100 text-dark p-3\"\r\n              value={formData.description}\r\n              onChange={(e) => handleInputChange(\"description\", e)}\r\n              onBlur={(e) => handleUpdate()}\r\n            />\r\n          </div>\r\n          <hr className=\"my-3\" />\r\n          <section className=\"card_section \">\r\n            <OnePagePreviewCard company={company} page={\"oneLinkEdit\"} />\r\n          </section>\r\n          <h4>Market Size (in Billions $)</h4>\r\n          <section className=\"market_size d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n            <div className=\"market w-100\">\r\n              <h5>Total Addressable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"total_addressable_market\"\r\n                name=\"total_addressable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.TAM}\r\n                onChange={(e) => handleInputChange(\"TAM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"market w-100\">\r\n              <h5>Service Addressable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"service_addressable_market\"\r\n                name=\"service_addressable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.SAM}\r\n                onChange={(e) => handleInputChange(\"SAM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"market w-100\">\r\n              <h5>Service Obtainable Market:</h5>\r\n              <input\r\n                type=\"text\"\r\n                id=\"service_obtainable_market\"\r\n                name=\"service_obtainable_market\"\r\n                className=\"w-100 px-3\"\r\n                placeholder=\"Enter here\"\r\n                value={formData.SOM}\r\n                onChange={(e) => handleInputChange(\"SOM\", e)}\r\n                onBlur={(e) => handleUpdate()}\r\n              />\r\n            </div>\r\n          </section>\r\n          <h4>Competitor</h4>\r\n          <section className=\"competitor_social_link d-flex flex-column flex-md-row justify-content-between gap-3\">\r\n            {competitorData?.map((competitor, index) => (\r\n              <div className=\"competitor_link w-100\" key={index}>\r\n                <h5>Competitor name {index + 1}</h5>\r\n                <input\r\n                  type=\"text\"\r\n                  value={competitor.name}\r\n                  onChange={(e) =>\r\n                    handleCompetitorInputChange(index, e.target.value)\r\n                  }\r\n                  className=\"w-100 px-3\"\r\n                />\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn delete_insideText\"\r\n                    onClick={() => deleteCompetitor(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button onClick={addCompetitor} className=\"add_row_btn startup\">\r\n            + Add Competitor\r\n          </button>\r\n          <section className=\"table_section\">\r\n            <Table\r\n              page={\"oneLinkEditPage\"}\r\n              setTable={setTableData}\r\n              data={tableData}\r\n            />\r\n          </section>\r\n          <h4>Fund Asking</h4>\r\n          <section className=\"fund_sking_section  d-flex flex-column  justify-content-between gap-3\">\r\n            {fundingAskRows?.map((row, index) => (\r\n              <div\r\n                className=\"d-flex flex-md-row flex-column w-100 gap-2\"\r\n                key={index}\r\n              >\r\n                <div className=\"fund_asking w-100\">\r\n                  <h5>Required For</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={row.required}\r\n                    onChange={(e) =>\r\n                      handleFundingAskInputChange(\r\n                        index,\r\n                        \"required\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"fund_asking w-100\">\r\n                  <h5>Amount</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={row.amount}\r\n                    onChange={(e) =>\r\n                      handleFundingAskInputChange(\r\n                        index,\r\n                        \"amount\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn\"\r\n                    onClick={() => deleteRow(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button onClick={addRow} className=\"add_row_btn startup\">\r\n            + Add Row\r\n          </button>\r\n          <hr />\r\n\r\n          <h4>Roadmap</h4>\r\n          <section className=\"roadmap_section d-flex flex-column justify-content-between gap-3\">\r\n            {roadMapRows?.map((row, index) => (\r\n              <div\r\n                className=\"d-flex flex-md-row flex-column w-100 gap-2\"\r\n                key={index}\r\n              >\r\n                <div className=\"Roadmap w-100\">\r\n                  <h5>Date</h5>\r\n                  <input\r\n                    type=\"date\"\r\n                    name={`date_${index}`}\r\n                    value={row.date}\r\n                    onChange={(e) =>\r\n                      handleRoadMapInputChange(index, \"date\", e.target.value)\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"Roadmap w-100\">\r\n                  <h5>Milestone</h5>\r\n                  <input\r\n                    type=\"text\"\r\n                    name={`milestone_${index}`}\r\n                    value={row.milestone}\r\n                    onChange={(e) =>\r\n                      handleRoadMapInputChange(\r\n                        index,\r\n                        \"milestone\",\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                    className=\"w-100 px-3\"\r\n                  />\r\n                </div>\r\n\r\n                {index > 0 && (\r\n                  <button\r\n                    className=\"delete_row_btn\"\r\n                    onClick={() => deleteRoadMapRow(index)}\r\n                  >\r\n                    <RiDeleteBin6Line />\r\n                  </button>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </section>\r\n          <button className=\"add_row_btn startup\" onClick={addRodMapRow}>\r\n            + Add Row\r\n          </button>\r\n          <hr />\r\n          <section className=\"team_section d-flex  flex-row gap-3\">\r\n            {company?.team?.map((team, index) => (\r\n              <TeamCard\r\n                index={index + 1}\r\n                profile={team?.image}\r\n                name={team?.name}\r\n                designation={team?.designation}\r\n                company={company}\r\n                page={\"oneLinkEdit\"}\r\n              />\r\n            ))}\r\n          </section>\r\n          <button\r\n            className=\"save_btn btn-lg d-block mx-auto mt-3\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Save\r\n          </button>\r\n        </div>\r\n        <section className=\"button_preview_download_section pdf-hidden\">\r\n          <div className=\"download_button_container\">\r\n            <button onClick={handlePreviewPDF}>Preview</button>\r\n            <button className=\"download_button\" onClick={handleDownloadPDF}>\r\n              Download\r\n            </button>\r\n          </div>\r\n        </section>\r\n        {fromSubmit && (\r\n          <AfterSuccessPopUp\r\n            withoutOkButton\r\n            onClose={() => setFromSubmit(!fromSubmit)}\r\n            successText={popupData}\r\n          />\r\n        )}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OneLinkEditView;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./OneLinkEditPage.scss\";\r\nimport OneLinkEditView from \"./OneLinkEditView/OneLinkEditView\";\r\nimport MaxWidthWrapper from \"../../../Shared/MaxWidthWrapper/MaxWidthWrapper\";\r\nimport { setPageTitle } from \"../../../../Store/features/design/designSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst OneLinkEditPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    document.title = \"Edit One Link | The Capital Hub\";\r\n    dispatch(setPageTitle(\"Edit One-Link\"));\r\n  }, [dispatch]);\r\n  return (\r\n    <MaxWidthWrapper>\r\n      <div className=\"editpage_container\">\r\n        <div className=\"row mt-5 mt-lg-2\">\r\n          <OneLinkEditView />\r\n        </div>\r\n      </div>\r\n    </MaxWidthWrapper>\r\n  );\r\n};\r\n\r\nexport default OneLinkEditPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./table.scss\";\r\n\r\nconst Table = ({ hidden, page, setTable, data }) => {\r\n  const initialData = {\r\n    rows: [],\r\n  };\r\n\r\n  const [tableData, setTableData] = useState(initialData);\r\n\r\n  useEffect(() => {\r\n    setTableData(data);\r\n    // console.log(data);\r\n  }, [data]);\r\n\r\n  const addColumn = () => {\r\n    setTableData((prevData) => ({\r\n      rows: prevData.rows.map((row) => ({\r\n        ...row,\r\n        values: [...row.values, \"\"],\r\n      })),\r\n    }));\r\n  };\r\n\r\n  const addRow = () => {\r\n    const columnName = prompt(\r\n      \"Enter a name for the new row:\",\r\n      `Row ${tableData.rows.length + 1}`\r\n    );\r\n\r\n    if (columnName !== null) {\r\n      const newRow = {\r\n        label: columnName,\r\n        values: Array(tableData.rows[0].values.length).fill(\"\"),\r\n      };\r\n      setTableData((prevData) => ({\r\n        rows: [...prevData.rows, newRow],\r\n      }));\r\n    }\r\n  };\r\n\r\n  const handleValueChange = (rowIndex, colIndex, value) => {\r\n    const updatedData = {\r\n      rows: tableData.rows.map((row, rIndex) => ({\r\n        ...row,\r\n        values:\r\n          rIndex === rowIndex\r\n            ? row.values.map((v, cIndex) => (cIndex === colIndex ? value : v))\r\n            : row.values,\r\n      })),\r\n    };\r\n    setTableData(updatedData);\r\n    setTable(updatedData);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"table-container\">\r\n        <h2 className={hidden && \"hidden\"}>Projections</h2>\r\n\r\n        <table>\r\n          <tbody>\r\n            {tableData?.rows?.map((row, rowIndex) => (\r\n              <tr key={row.label}>\r\n                <th>{row.label}</th>\r\n                {row?.values.map((value, colIndex) => (\r\n                  <td key={`${row.label}${colIndex}`}>\r\n                    {page === \"oneLinkEditPage\" ? (\r\n                      <input\r\n                        className=\"table_input\"\r\n                        placeholder=\"0\"\r\n                        value={value}\r\n                        onChange={(e) =>\r\n                          handleValueChange(rowIndex, colIndex, e.target.value)\r\n                        }\r\n                      />\r\n                    ) : (\r\n                      `${value}`\r\n                    )}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div>\r\n        {page === \"oneLinkEditPage\" && (\r\n          <button\r\n            onClick={addRow}\r\n            className=\"add_row_btn startup\"\r\n            style={{ marginRight: \"10px\" }}\r\n          >\r\n            + Add Row\r\n          </button>\r\n        )}\r\n        {page === \"oneLinkEditPage\" && (\r\n          <button onClick={addColumn} className=\"add_row_btn startup\">\r\n            + Add Column\r\n          </button>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n"],"names":["_ref","company","page","loggedInUser","useSelector","state","user","_useState","useState","_useState2","_slicedToArray","editedContent","setEditedContent","_useState3","_useState4","editableIndex","setEditableIndex","_useState5","_useState6","value","setValue","cardData","field","title","content","problem","solution","competitiveLandscape","_jsx","_Fragment","children","className","map","card","index","_jsxs","onClick","type","placeholder","onChange","e","target","onBlur","newValue","_postStartUpData","console","log","_objectSpread","_defineProperty","postStartUpData","_id","then","data","window","location","reload","catch","err","handleUpdate","autoFocus","style","wordBreak","dateString","text","width","Date","toDateString","toLocaleDateString","weekday","month","day","_formData$socialLinks","_company$team","userId","setCompany","description","logo","keyFocus","socialLinks","TAM","SAM","SOM","formData","setFormData","selectedLogo","setSelectedLogo","_useState7","_useState8","_useState9","required","amount","_useState10","fundingAskRows","setFundingAskRows","_useState11","date","milestone","_useState12","roadMapRows","setRoadMapRows","_useState13","name","_useState14","competitorData","setCompetitorData","_useState15","rows","label","values","_useState16","tableData","setTableData","navigate","useNavigate","useEffect","getStartupByFounderId","startedAtDate","fundingsAsk","roadMap","competitors","projections","length","handleInputChange","event","updatedValue","handleSocialLinkChange","updatedSocialLinks","founderId","_ref2","logoOnChangeHandler","_ref4","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_ref3","wrap","_context","prev","next","getBase64","files","sent","prevForm","stop","_x","apply","arguments","handleFundingAskInputChange","updatedRows","_toConsumableArray","handleRoadMapInputChange","_useState17","_useState18","fromSubmit","setFromSubmit","_useState19","_useState20","popupData","setPopupData","handleSubmit","_ref5","_callee2","_context2","_ref6","src","backIcon","alt","height","htmlFor","role","fontSize","padding","id","accept","hidden","website","linkedin","twitter","instagram","OnePagePreviewCard","competitor","updatedCompetitorData","handleCompetitorInputChange","filter","_","i","deleteCompetitor","RiDeleteBin6Line","concat","Table","setTable","row","splice","deleteRow","deleteRoadMapRow","team","TeamCard","profile","image","designation","container","document","querySelector","buttons","querySelectorAll","forEach","button","display","html2canvas","allowTaint","removeContainer","backgroundColor","scale","devicePixelRatio","useCORS","windowWidth","canvas","contentDataURL","toDataURL","imgHeight","heightLeft","pdf","jsPDF","position","addImage","addPage","blob","output","blobUrl","URL","createObjectURL","open","element","save","AfterSuccessPopUp","withoutOkButton","onClose","successText","dispatch","useDispatch","setPageTitle","MaxWidthWrapper","OneLinkEditView","_tableData$rows","rowIndex","colIndex","updatedData","rIndex","v","cIndex","handleValueChange","columnName","prompt","newRow","Array","fill","prevData","marginRight"],"sourceRoot":""}